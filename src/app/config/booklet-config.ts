export class BookletConfig {
	// this file is generated by 'generateBookletConfigClass' script from 'app/config/booklet-config.json'
	// do not change anything here directly!

	loading_mode: "LAZY" | "EAGER" = "LAZY";
	log_mode: "OFF" | "LEAN" | "RICH" = "RICH";
	page_navibuttons: "OFF" | "MERGED" | "SEPARATE_TOP" | "SEPARATE_BOTTOM" = "SEPARATE_BOTTOM";
	unit_navibuttons: "OFF" | "ARROWS_ONLY" | "FULL" = "FULL";
	unit_menu: "OFF" | "ENABLED_ONLY" | "FULL" = "ENABLED_ONLY";
	force_presentation_complete: "OFF" | "ON" = "OFF";
	force_responses_complete: "OFF" | "SOME" | "COMPLETE" | "COMPLETE_AND_VALID" = "OFF";

	public setFromKeyValuePairs(config) {
		if (config) {
			if (config['loading_mode']) { this.loading_mode = config['loading_mode']}
			if (config['log_mode']) { this.log_mode = config['log_mode']}
			if (config['page_navibuttons']) { this.page_navibuttons = config['page_navibuttons']}
			if (config['unit_navibuttons']) { this.unit_navibuttons = config['unit_navibuttons']}
			if (config['unit_menu']) { this.unit_menu = config['unit_menu']}
			if (config['force_presentation_complete']) { this.force_presentation_complete = config['force_presentation_complete']}
			if (config['force_responses_complete']) { this.force_responses_complete = config['force_responses_complete']}
		}
	}

	public setFromXml(bookletConfigElement: Element) {
		if (bookletConfigElement) {
			const bookletConfigs = Array.prototype.slice.call(bookletConfigElement.childNodes).filter(function (e) { return e.nodeType === 1; });
			for (let childIndex = 0; childIndex < bookletConfigs.length; childIndex++) {
				const configKey = bookletConfigs[childIndex].getAttribute('key');
				const configValue = bookletConfigs[childIndex].textContent;
				switch (configKey) {
					case 'loading_mode':
						this.loading_mode = configValue;
						break;
					case 'log_mode':
						this.log_mode = configValue;
						break;
					case 'page_navibuttons':
						this.page_navibuttons = configValue;
						break;
					case 'unit_navibuttons':
						this.unit_navibuttons = configValue;
						break;
					case 'unit_menu':
						this.unit_menu = configValue;
						break;
					case 'force_presentation_complete':
						this.force_presentation_complete = configValue;
						break;
					case 'force_responses_complete':
						this.force_responses_complete = configValue;
						break;
				}
			}
		}
	}
}
