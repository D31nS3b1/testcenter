include:
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - local: scripts/gitlab-ci/tests.yml
  - local: scripts/gitlab-ci/docs.yml

gemnasium-dependency_scanning:
  rules:
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_TAG

image: docker:23.0

variables:
  DOCKER_TLS_CERTDIR: ""

services:
  - name: docker:23.0-dind
    command: [ "--mtu=1442" ]

stages:
  - build
  - test
  - deploy

.backend-change:
  rules:
    - changes:
        - backend/**/*
        - scripts/database/**/*
        - definitions/**/*

.frontend-change:
  rules:
    - changes:
        - frontend/**/*
        - common/**/*

.bs-change:
  rules:
    - changes:
        - broadcasting-service/**/*
        - common/**/*

.fs-change:
  rules:
    - changes:
        - scripts/file-service/**/*

build-db:
  stage: build
  rules:
    - !reference [ .backend-change, rules ]
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event" || $CI_PIPELINE_SOURCE == "web"
    - if: "$CI_COMMIT_TAG"
  script:
    - apk add make
    - make init
    - make build service=testcenter-db
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker push iqbberlin/testcenter-db

build-backend:
  stage: build
  rules:
    - !reference [ .backend-change, rules ]
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event" || $CI_PIPELINE_SOURCE == "web"
    - if: "$CI_COMMIT_TAG"
    - changes:
        - e2e/**/*
  script:
    - apk add make
    - make init
    - make build service=testcenter-backend
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker push iqbberlin/testcenter-backend:dev

build-frontend:
  stage: build
  rules:
    - !reference [ .frontend-change, rules ]
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event" || $CI_PIPELINE_SOURCE == "web"
    - if: "$CI_COMMIT_TAG"
    - changes:
        - e2e/**/*
  script:
    - apk add make
    - make init
    - make build service=testcenter-frontend
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker push iqbberlin/testcenter-frontend:dev

build-broadcasting-service:
  stage: build
  rules:
    - !reference [ .bs-change, rules ]
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event" || $CI_PIPELINE_SOURCE == "web"
    - if: "$CI_COMMIT_TAG"
    - changes:
        - e2e/**/*
  script:
    - apk add make
    - make init
    - make build service=testcenter-broadcasting-service
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker push iqbberlin/testcenter-broadcasting-service:dev

build-file-service:
  stage: build
  rules:
    - !reference [ .fs-change, rules ]
    - if: $CI_PIPELINE_SOURCE == "external_pull_request_event" || $CI_PIPELINE_SOURCE == "web"
    - if: "$CI_COMMIT_TAG"
    - changes:
        - e2e/**/*
  script:
    - apk add make
    - make init
    - make build service=testcenter-file-service
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker push iqbberlin/testcenter-file-service

build-db-prod:
  stage: deploy
  rules:
    - if: "$CI_COMMIT_TAG"
  cache:
    paths:
      - .trivycache/
  script:
    - apk add make curl
    - make init
    - docker build --no-cache -t iqbberlin/testcenter-db:$CI_COMMIT_TAG -f docker/database.Dockerfile .
    - |
      docker run --rm \
      -v /.trivycache/:/.trivycache/ -v /builds/iqb/testcenter/:/root/ -v /var/run/docker.sock:/var/run/docker.sock \
      aquasec/trivy image --exit-code 0 --cache-dir .trivycache/ --security-checks vuln \
      --format template --template "@contrib/gitlab.tpl" -o /root/gl-container-scanning-report.json \
      iqbberlin/testcenter-db:$CI_COMMIT_TAG
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker push iqbberlin/testcenter-db:$CI_COMMIT_TAG
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json

build-backend-prod:
  stage: deploy
  rules:
    - if: "$CI_COMMIT_TAG"
  cache:
    paths:
      - .trivycache/
  script:
    - apk add make
    - make init
    - docker build --no-cache --target prod -t iqbberlin/testcenter-backend:$CI_COMMIT_TAG -f docker/backend.Dockerfile .
    - |
      docker run --rm \
      -v /.trivycache/:/.trivycache/ -v /builds/iqb/testcenter/:/root/ -v /var/run/docker.sock:/var/run/docker.sock \
      aquasec/trivy image --exit-code 0 --cache-dir .trivycache/ --security-checks vuln \
      --format template --template "@contrib/gitlab.tpl" -o /root/gl-container-scanning-report.json \
      iqbberlin/testcenter-backend:$CI_COMMIT_TAG
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker push iqbberlin/testcenter-backend:$CI_COMMIT_TAG
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json

build-frontend-prod:
  stage: deploy
  rules:
    - if: "$CI_COMMIT_TAG"
  cache:
    paths:
      - .trivycache/
  script:
    - apk add make curl
    - make init
    - docker build --no-cache --target prod -t iqbberlin/testcenter-frontend:$CI_COMMIT_TAG -f docker/frontend.Dockerfile .
    - |
      docker run --rm \
      -v /.trivycache/:/.trivycache/ -v /builds/iqb/testcenter/:/root/ -v /var/run/docker.sock:/var/run/docker.sock \
      aquasec/trivy image --exit-code 0 --cache-dir .trivycache/ --security-checks vuln \
      --format template --template "@contrib/gitlab.tpl" -o /root/gl-container-scanning-report.json \
      iqbberlin/testcenter-frontend:$CI_COMMIT_TAG
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker push iqbberlin/testcenter-frontend:$CI_COMMIT_TAG
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json

build-broadcasting-service-prod:
  stage: deploy
  rules:
    - if: "$CI_COMMIT_TAG"
  cache:
    paths:
      - .trivycache/
  script:
    - apk add make curl
    - make init
    - docker build --no-cache --target prod -t iqbberlin/testcenter-broadcasting-service:$CI_COMMIT_TAG -f docker/broadcasting-service.Dockerfile .
    - |
      docker run --rm \
      -v /.trivycache/:/.trivycache/ -v /builds/iqb/testcenter/:/root/ -v /var/run/docker.sock:/var/run/docker.sock \
      aquasec/trivy image --exit-code 0 --cache-dir .trivycache/ --security-checks vuln \
      --format template --template "@contrib/gitlab.tpl" -o /root/gl-container-scanning-report.json \
      iqbberlin/testcenter-broadcasting-service:$CI_COMMIT_TAG
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker push iqbberlin/testcenter-broadcasting-service:$CI_COMMIT_TAG
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json

build-file-service-prod:
  stage: deploy
  rules:
    - if: "$CI_COMMIT_TAG"
  cache:
    paths:
      - .trivycache/
  script:
    - apk add make curl
    - make init
    - docker build --no-cache -t iqbberlin/testcenter-file-service:$CI_COMMIT_TAG -f docker/file-service.Dockerfile .
    - |
      docker run --rm \
      -v /.trivycache/:/.trivycache/ -v /builds/iqb/testcenter/:/root/ -v /var/run/docker.sock:/var/run/docker.sock \
      aquasec/trivy image --exit-code 0 --cache-dir .trivycache/ --security-checks vuln \
      --format template --template "@contrib/gitlab.tpl" -o /root/gl-container-scanning-report.json \
      iqbberlin/testcenter-file-service:$CI_COMMIT_TAG
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker push iqbberlin/testcenter-file-service:$CI_COMMIT_TAG
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json
