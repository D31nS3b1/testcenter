openapi: 3.0.0
info:
    title: 'IQB Testcenter API - Backend'
    description: 'This a spec for the (REST-) API of the IQB-Tetscenter APP. It will be used to make backend''s e2e-test and a mock-server for frontend''s e2e-tests. It''s the basis for out vision of continuous integration.'
    version: 2.0.0
paths:
    /php/login.php/login:
        post:
            summary: Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/login_request'
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/login_response'
                            example:
                                admintoken: 1337ymca1337666.xxx13370
                                name: super
                                workspaces:
                                    - {id: '1', name: example_workspace, role: RW}
                                is_superadmin: true
    /list/routes:
        get:
            summary: 'Lists all available endpoints'
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            example:
                                - '[GET] /list/routes'
    /specstatus:
        get:
            summary: 'temporaray helper endpoint'
            responses:
                '200':
                    description: OK
    /version:
        get:
            summary: 'get API version'
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                properties:
                                    version: {type: string}
                            example:
                                version: 2.0.0-beta
    /login:
        post:
            summary: Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/login_request'
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/login_response'
                            example:
                                admintoken: 1337ymca1337666.xxx13370
                                name: super
                                workspaces:
                                    - {id: '1', name: example_workspace, role: RW}
                                is_superadmin: true
                '202':
                    description: 'User has account but neither workspace nor admin priviliges'
                '400':
                    description: 'Insufficent Crendetials'
                '500':
                    description: 'Server Error'
    /workspaces:
        get:
            summary: 'get a list of workspaces'
            description: 'get a list of all workspaces'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: __super_admin_token__
            responses:
                '200':
                    description: 'List of Workspaces'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/workspace_list'
                            example:
                                -
                                    id: '1'
                                    name: example_workspace
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
        delete:
            summary: 'delete some workspaces'
            description: 'deletes a list of workspaces given by their ids'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                ws:
                                    type: array
                                    description: 'list of Workspace-Id'
                                    items: {type: integer}
                            required:
                                - ws
                        example:
                            ws:
                                - 2
            responses:
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
    /users:
        get:
            summary: 'get a list of users'
            description: 'returns info about all registered users.'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
            responses:
                '200':
                    description: 'List of users'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user_list'
                            example:
                                -
                                    name: super
                                    id: '1'
                                    email: null
                                    is_superadmin: '1'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
        delete:
            summary: 'delete some users'
            description: 'deletes a list of given user-ids. ids wich did not exist get skipped; in other words there is no check if the user existed beforeheand.'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                u:
                                    type: array
                                    items: {type: string, description: user-id}
                        example:
                            u:
                                - 2
            responses:
                '200':
                    description: ok
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
    /php/sys.php/workspaces:
        get:
            summary: 'get a list of workspaces'
            description: 'get a list of all workspaces or all workspaces belonging to a given user'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: query
                    name: u
                    description: 'user-id or ""'
                    required: false
                    schema:
                        type: integer
                    examples:
                        a:
                            value: 0
                        b:
                            value: 1
            responses:
                '200':
                    description: 'List of Workspaces'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/workspace_list'
                            examples:
                                a:
                                    value: [{id: '1', name: example_workspace}]
                                b:
                                    value: [{id: '1', name: example_workspace, selected: false, role: ""}]
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
    /php/sys.php/workspaces/delete:
        post:
            summary: 'delete some workspaces'
            description: 'deletes a list of workspaces given by their ids'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                ws:
                                    type: array
                                    description: 'list of Workspace-Id'
                                    items: {type: integer}
                            required:
                                - ws
                        example:
                            ws:
                                - 2
            responses:
                '200':
                    description: 'OK, workspace has been renamed'
                    content:
                        text/plain:
                            example: 'true'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
    /php/sys.php/workspace/users:
        post:
            summary: 'change user roles'
            description: 'change user roles in a given workspaces'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                ws:
                                    type: integer
                                    description: Workspace-Id
                                u:
                                    type: array
                                    description: 'array of pairs role-id'
                                    items: {type: object, properties: {id: {type: integer, description: user-id}, role: {type: string, description: 'role: ''RW'', ''MO'' or ''RO'''}}}
                            required:
                                - ws
                                - u
                        example:
                            ws: 1
                            u:
                                -
                                    role: RO
                                    id: 1
            responses:
                '200':
                    description: 'OK, roles has been updated'
                    content:
                        text/plain:
                            example: 'true'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
    /php/sys.php/users:
        get:
            summary: 'get a list of users'
            description: 'get info about all registered users - in whole application or in a workspace.'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: query
                    name: ws
                    description: 'id of a workspace to get users from. can be omitted for all users in system'
                    required: false
                    schema:
                        $ref: '#/components/schemas/workspace_list'
                    examples:
                        a:
                            value: 0
                        b:
                            value: 1
            responses:
                '200':
                    description: 'List of users'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user_list'
                            examples:
                                a:
                                    value: [{name: super, id: '1', email: null, is_superadmin: '1'}]
                                b:
                                    value: [{name: super, id: '1', selected: true, role: RW}]
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
    '/user/{user_id}/workspaces':
        get:
            summary: 'get a list of workspaces'
            description: 'get a list of all workspaces belonging to a given user'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: user_id
                    description: user-id
                    example: 1
                    required: true
                    schema:
                        type: integer
            responses:
                '200':
                    description: 'List of Workspaces'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/workspace_list'
                            example:
                                -
                                    id: '1'
                                    name: example_workspace
                                    selected: false
                                    role: ""
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
        patch:
            summary: 'change user roles'
            description: 'change user roles for a given user in several workspaces. *Provide user-name, not user-id!*'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: user_id
                    description: user-id
                    example: 1
                    required: true
                    schema:
                        type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                ws:
                                    type: array
                                    description: 'array of pairs role-id'
                                    items: {type: object, properties: {id: {type: integer, description: workspace-id}, role: {type: string, description: 'role: ''RW'', ''MO'' or ''RO'''}}}
                            required:
                                - ws
                        example:
                            ws:
                                -
                                    role: RW
                                    id: 1
            responses:
                '200':
                    description: 'OK, roles have been updated'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
    /user:
        put:
            summary: 'add a user'
            description: 'add a user'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user'
                        example:
                            n: thirdUser
                            p: thirdUsersPassword
            responses:
                '200':
                    description: 'OK, user has been added'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
    '/user/{user_id}/password':
        patch:
            summary: 'change user-password'
            description: 'changes the password of a given user.'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: user_id
                    description: user-id
                    example: 2
                    required: true
                    schema:
                        type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user'
                        example:
                            p: secondUsersNewPassword
            responses:
                '200':
                    description: 'password has changed / user did not exist'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
    /php/sys.php/user/add:
        post:
            summary: 'add a user'
            description: 'add a user'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user'
                        example:
                            n: secondUser
                            p: secondUsersPassword
            responses:
                '200':
                    description: 'OK, user has been added'
                    content:
                        text/plain:
                            example: 'true'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
    /php/sys.php/user/pw:
        post:
            summary: 'change user-password'
            description: 'changes the password of a given user. returns true if user does not exist.'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user'
                        example:
                            n: super
                            p: superUsersNewPassword
            responses:
                '200':
                    description: 'password has changed / user did not exist'
                    content:
                        text/plain:
                            example: 'true'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
    /php/sys.php/user/workspaces:
        post:
            summary: 'change user roles'
            description: 'change user roles for a given user in several workspaces. *Provide user-name, not user-id!*'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                u:
                                    type: string
                                    description: 'user-name (not id!)'
                                ws:
                                    type: array
                                    description: 'array of pairs role-id'
                                    items: {type: object, properties: {id: {type: integer, description: workspace-id}, role: {type: string, description: 'role: ''RW'', ''MO'' or ''RO'''}}}
                            required:
                                - ws
                                - u
                        example:
                            u: super
                            ws:
                                -
                                    role: RW
                                    id: 1
            responses:
                '200':
                    description: 'OK, roles has been updated'
                    content:
                        text/plain:
                            example: 'true'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
    '/workspace/{ws_id}/booklets/started':
        get:
            summary: 'get started booklets'
            description: 'retrieves an overview about started booklets'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    required: true
                    description: workspace-Id
                    schema:
                        type: integer
                    example: 1
                -
                    in: query
                    name: groups
                    schema:
                        type: object
                        properties:
                            g:
                                type: array
                                description: 'a list'
                                items:
                                    type: string
                    example:
                        g:
                            - sample_group
            responses:
                '200':
                    description: 'OK, list of started booklets'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties: {groupname: {type: string}, loginname: {type: string}, code: {type: string, description: 'person code'}, bookletname: {type: string}, locked: {type: boolean}, lastlogin: {type: string, description: 'date of last login and time in US format: YYYY-mm-dd HH:mm:SS'}, laststart: {type: string, description: 'date of last start and time in US format: YYYY-mm-dd HH:mm:SS'}}
                            example:
                                -
                                    groupname: sample_group
                                    loginname: test
                                    code: dlu
                                    bookletname: BOOKLET.SAMPLE
                                    locked: false
                                    lastlogin: '2019-09-10 13:29:36'
                                    laststart: '2019-09-10 13:29:37'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    '/workspace/{ws_id}/file/{type}/{filename}':
        get:
            summary: 'get file'
            description: 'retrieves a file form a goven workspace by filename'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    description: workspace-id
                    example: 1
                    schema:
                        type: integer
                    required: true
                -
                    in: path
                    name: type
                    description: 'file type - Testtakers | Booklet | Resource | Unit | SysCheck - CASE SENSITIVE!'
                    example: Unit
                    required: true
                    schema:
                        type: string
                -
                    in: path
                    name: filename
                    description: 'filename. - CASE SENSITIVE!'
                    example: SAMPLE_UNIT.XML
                    required: true
                    schema:
                        type: string
            responses:
                '200':
                    description: 'File contents'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'workspace or file not found'
                '500':
                    description: 'Server Error'
    '/workspace/{ws_id}/logs':
        get:
            summary: 'get logs'
            description: 'retrieves unit and bookltes logs from this workspace'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    description: workspace-id
                    example: 1
                    required: true
                    schema:
                        type: integer
                -
                    in: query
                    name: groups
                    schema:
                        type: object
                        properties:
                            g:
                                type: array
                                description: 'a list'
                                items:
                                    type: string
                    example:
                        g:
                            - sample_group
            responses:
                '200':
                    description: 'OK, list of logs'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties: {unitname: {type: string}, bookletname: {type: string}, groupname: {type: string}, loginname: {type: string}, code: {type: string, description: 'person code'}, timestamp: {type: string}, logentry: {type: string}}
                            example:
                                -
                                    unitname: UNIT.SAMPLE
                                    bookletname: BOOKLET.SAMPLE
                                    groupname: sample_group
                                    loginname: test
                                    code: sxx
                                    timestamp: '1568026665043'
                                    logentry: 'sample unit log'
                                -
                                    bookletname: BOOKLET.SAMPLE
                                    groupname: sample_group
                                    loginname: test
                                    code: sxx
                                    timestamp: '1568026665043'
                                    logentry: 'sample log entry'
                                    unitname: ""
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    '/workspace/{ws_id}/responses':
        get:
            summary: 'get responses'
            description: 'retrieves a list of responses by a given list of groups'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    description: workspace-id
                    example: 1
                    required: true
                    schema:
                        type: integer
                -
                    in: query
                    name: groups
                    schema:
                        type: object
                        properties:
                            g:
                                type: array
                                description: 'a list'
                                items:
                                    type: string
                    example:
                        g:
                            - sample_group
            responses:
                '200':
                    description: 'OK, list of responses'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties: {unitname: {type: string}, responses: {type: string, description: 'may contain encoded JSON'}, responsetype: {type: string}, laststate: {type: string, description: 'may contain encoded JSON'}, bookletname: {type: string}, restorepoint_ts: {type: string}, responses_ts: {type: string, description: 'contains a unix timestamp'}, restorepoint: {type: string}, groupname: {type: string}, loginname: {type: string}, code: {type: string, description: 'login code'}}
                                example:
                                    - {unitname: UNIT.SAMPLE, responses: '{"name":"Sam Sample","age":34}', responsetype: "", laststate: '{"PRESENTATIONCOMPLETE":"yes"}', bookletname: BOOKLET.SAMPLE, restorepoint_ts: '0', responses_ts: '1567778660869', restorepoint: null, groupname: sample_group, loginname: test, code: jsx}
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
        delete:
            summary: 'delete results'
            description: 'deletes all results and monitor data of a group of groups'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    description: workspace-id
                    example: 1
                    required: true
                    schema:
                        type: integer
                -
                    in: query
                    name: groups
                    schema:
                        type: object
                        properties:
                            g:
                                type: array
                                description: 'a list'
                                items:
                                    type: string
                    example:
                        g:
                            - sample_group
            responses:
                '200':
                    description: OK
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'workspace or file not found'
                '500':
                    description: 'Server Error'
    '/workspace/{ws_id}/results':
        get:
            summary: 'get results'
            description: 'retrieves a list of unit- and booklet results for a given workspace and groups'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    description: workspace-id
                    example: 1
                    required: true
                    schema:
                        type: integer
            responses:
                '200':
                    description: 'OK, list of results'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties: {groupname: {type: string}, bookletsStarted: {type: integer}, num_units_min: {type: string}, num_units_max: {type: string}, num_units_total: {type: string}, lastchange: {type: string, description: timestamp}, num_units_mean: {type: integer}}
                            example:
                                -
                                    groupname: sample_group
                                    bookletsStarted: 1
                                    num_units_min: '1'
                                    num_units_max: '1'
                                    num_units_total: '1'
                                    lastchange: '1567776853037'
                                    num_units_mean: 1
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    '/workspace/{ws_id}/reviews':
        get:
            summary: 'get reviews'
            description: 'retrieves a list of unit- and booklet-reviews for a given workspace and groups'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    description: workspace-id
                    example: 1
                    required: true
                    schema:
                        type: integer
                -
                    in: query
                    name: groups
                    schema:
                        type: object
                        properties:
                            g:
                                type: array
                                description: 'a list'
                                items:
                                    type: string
                    example:
                        g:
                            - sample_group
            responses:
                '200':
                    description: 'OK, list of reviews'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties: {unitname: {type: string, description: 'stays empty if booklet review'}, bookletname: {type: string}, groupname: {type: string}, code: {type: string, description: 'login code'}, entry: {type: string}, priority: {type: string}, categories: {type: string}}
                            example:
                                -
                                    unitname: UNIT.SAMPLE
                                    bookletname: BOOKLET.SAMPLE
                                    groupname: sample_group
                                    loginname: test
                                    code: euf
                                    reviewtime: '2019-09-06 11:19:56'
                                    entry: 'this is a sample unit review'
                                    priority: '1'
                                    categories: ""
                                -
                                    bookletname: BOOKLET.SAMPLE
                                    groupname: sample_group
                                    loginname: test
                                    code: euf
                                    reviewtime: '2019-09-06 11:19:56'
                                    entry: 'sample booklet review'
                                    priority: '1'
                                    categories: ""
                                    unitname: ""
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    '/workspace/{ws_id}/status':
        get:
            summary: 'get status'
            description: 'Retrieves an overview about running tests'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: auth-token
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    description: workspace-id
                    example: 1
                    required: true
                    schema:
                        type: integer
            responses:
                '200':
                    description: 'OK, list of monitor data'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties: {groupname: {type: string}, loginsPrepared: {type: integer}, personsPrepared: {type: integer}, bookletsPrepared: {type: integer}, bookletsStarted: {type: integer}, bookletsLocked: {type: integer}, laststart: {type: integer, description: 'timestamp of last start'}, laststartStr: {type: string, description: 'date of last start in human readable format (german date format: dd.MM.yyyy)'}}
                            example:
                                -
                                    groupname: sample_group
                                    loginsPrepared: 1
                                    personsPrepared: 10
                                    bookletsPrepared: 10
                                    bookletsStarted: 1
                                    bookletsLocked: 0
                                    laststart: 1567783156
                                    laststartStr: 06.09.2019
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    '/workspace/{ws_id}/validation':
        get:
            summary: 'check workspace'
            description: 'triggers a check of all xmls in the workspace and retrieves the results'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    description: workspace-id
                    example: 1
                    required: true
                    schema:
                        type: integer
            responses:
                '200':
                    description: 'OK, list of reviews'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    errors: {type: array, items: {type: string}}
                                    warnings: {type: array, items: {type: string}}
                                    infos: {type: array, items: {type: string}}
                            example:
                                errors: []
                                warnings: []
                                infos:
                                    - '1 resource files found'
                                    - '1 valid units found'
                                    - '1 valid booklets found'
                                    - '0 valid syschecks found'
                                    - '10 testtakers in 1 logins found'
                                    - 'booklet loads (bytes, sorted):'
                                    - '    BOOKLET.SAMPLE: 5.365'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    '/workspace/{ws_id}/file':
        post:
            summary: 'upload file'
            description: 'uploads a Resource, Unit, Booklet, SysCheck ort Testtakers file'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    description: workspace-id
                    example: 1
                    required: true
                    schema:
                        type: integer
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                fileforvo:
                                    type: string
                                    description: 'upload file'
                            required:
                                - fileforvo
            responses:
                '200':
                    description: 'upload susccessfull'
                    content:
                        application/json:
                            example:
                                SAMPLE_UNIT.XML: true
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'workspace or file not found'
                '500':
                    description: 'Server Error'
    '/workspace/{ws_id}/files':
        get:
            summary: 'get files of workspace'
            description: 'get a list of all files in workspace'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    description: workspace-id
                    example: 1
                    required: true
                    schema:
                        type: integer
            responses:
                '200':
                    description: 'OK, a list of files'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/file_list'
                            example:
                                -
                                    filename: SAMPLE_TESTTAKERS.XML
                                    filesize: 823
                                    filesizestr: '823 Bytes'
                                    filedatetime: 1567610586
                                    filedatetimestr: 04.09.2019
                                    type: Testtakers
                                    typelabel: Testtakers
                                -
                                    filename: SAMPLE_BOOKLET.XML
                                    filesize: 1284
                                    filesizestr: '1.25 KB'
                                    filedatetime: 1567610586
                                    filedatetimestr: 04.09.2019
                                    type: Booklet
                                    typelabel: Booklet
                                -
                                    filename: SAMPLE_PLAYER.HTML
                                    filesize: 3386
                                    filesizestr: '3.31 KB'
                                    filedatetime: 1567610586
                                    filedatetimestr: 04.09.2019
                                    type: Resource
                                    typelabel: Resource
                                -
                                    filename: SAMPLE_UNIT.XML
                                    filesize: 696
                                    filesizestr: '696 Bytes'
                                    filedatetime: 1567610586
                                    filedatetimestr: 04.09.2019
                                    type: Unit
                                    typelabel: Unit
                                -
                                    filename: SAMPLE_SYSCHECK.XML
                                    filesize: 960
                                    filesizestr: '960 Bytes'
                                    filedatetime: 1567610586
                                    filedatetimestr: 04.09.2019
                                    type: SysCheck
                                    typelabel: SysCheck
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
        delete:
            summary: 'delete files'
            description: 'deletes files from a workspace'
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                f:
                                    type: array
                                    description: 'array of file names'
                                    items: {type: string}
                        examples:
                            a:
                                value:
                                    f: [SysCheck/SAMPLE_SYSCHECK.XML]
                            b:
                                description: 'include some non-existant or forbidden files'
                                value:
                                    f: [SysCheck/SAMPLE_SYSCHECK.XML, 'some rubbish', a/b, ../../README.md]
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: auth-token
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    description: workspace-id
                    example: 1
                    required: true
                    schema:
                        type: integer
            responses:
                '200':
                    description: 'OK, roles has been updated'
                    content:
                        text/plain:
                            examples:
                                a:
                                    value: 'Eine Datei gelöscht.'
                                b:
                                    value: 'Konnte 3 Dateien nicht löschen.'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    '/workspace/{ws_id}/lock':
        post:
            summary: 'lock workspace'
            description: 'locks a group of booklets in a workspace'
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                groups:
                                    type: array
                                    description: 'array of group names'
                                    items: {type: string}
                        example:
                            groups:
                                - group1
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    description: workspace-id
                    example: 1
                    required: true
                    schema:
                        type: integer
            responses:
                '200':
                    description: OK
                    content:
                        text/plain:
                            example: 'true'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    '/workspace/{ws_id}/unlock':
        post:
            summary: 'unlock workspace'
            description: 'unlocks a group of bookltes in a workspace'
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                groups:
                                    type: array
                                    description: 'array of group names'
                                    items: {type: string}
                        example:
                            groups:
                                - group1
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    description: workspace-id
                    example: 1
                    required: true
                    schema:
                        type: integer
            responses:
                '200':
                    description: OK
                    content:
                        text/plain:
                            example: 'true'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    /workspace:
        put:
            summary: 'add a workspace'
            description: 'adds a workspace with given name'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                name:
                                    type: string
                                    description: 'workspace name'
                            required:
                                - name
                        example:
                            name: 'new work space'
            responses:
                '200':
                    description: 'OK, workspace has been added'
                '401':
                    description: 'Not authenticated'
                '500':
                    description: 'Server Error'
    '/workspace/{ws_id}':
        patch:
            summary: 'rename a workspace'
            description: 'renames a workspace with given id'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    description: workspace-id
                    example: 1
                    required: true
                    schema:
                        type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                name:
                                    type: string
                                    description: Password
                            required:
                                - n
                        example:
                            name: 'a new york space'
            responses:
                '200':
                    description: 'OK, workspace has been renamed'
                    content:
                        text/plain:
                            example: 'true'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
    '/workspace/{ws_id}/users':
        patch:
            summary: 'change user roles'
            description: 'change user roles in a given workspaces'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    description: workspace-id
                    example: 1
                    required: true
                    schema:
                        type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                u:
                                    type: array
                                    description: 'array of pairs role-id'
                                    items: {type: object, properties: {id: {type: integer, description: user-id}, role: {type: string, description: 'role: ''RW'', ''MO'' or ''RO'''}}}
                            required:
                                - u
                        example:
                            u:
                                -
                                    role: RW
                                    id: 1
            responses:
                '200':
                    description: 'OK, roles has been updated'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
        get:
            summary: 'get a list of users in a workspace'
            description: 'returns info about all registered users in a workspace.'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                -
                    in: path
                    name: ws_id
                    description: workspace-id
                    example: 1
                    required: true
                    schema:
                        type: integer
            responses:
                '200':
                    description: 'List of users'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user_list'
                            example:
                                -
                                    name: super
                                    id: '1'
                                    selected: true
                                    role: RW
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '500':
                    description: 'Server Error'
    /php/getReviews.php:
        post:
            summary: 'get reviews'
            description: 'retrieves a list of unit- and booklet-reviews for a given workspace and groups'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                        ws: 1
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                g:
                                    type: array
                                    description: 'a list'
                                    items: {type: string}
                        example:
                            g:
                                - sample_group
            responses:
                '200':
                    description: 'OK, list of reviews'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties: {unitname: {type: string, description: 'stays empty if booklet review'}, bookletname: {type: string}, groupname: {type: string}, code: {type: string, description: 'login code'}, entry: {type: string}, priority: {type: string}, categories: {type: string}}
                            example:
                                -
                                    unitname: UNIT.SAMPLE
                                    bookletname: BOOKLET.SAMPLE
                                    groupname: sample_group
                                    loginname: test
                                    code: euf
                                    reviewtime: '2019-09-06 11:19:56'
                                    entry: 'this is a sample unit review'
                                    priority: '1'
                                    categories: ""
                                -
                                    bookletname: BOOKLET.SAMPLE
                                    groupname: sample_group
                                    loginname: test
                                    code: euf
                                    reviewtime: '2019-09-06 11:19:56'
                                    entry: 'sample booklet review'
                                    priority: '1'
                                    categories: ""
                                    unitname: ""
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    /php/getResultData.php:
        post:
            summary: 'get results'
            description: 'retrieves a list of unit- and booklet results for a given workspace and groups'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                        ws: 1
            responses:
                '200':
                    description: 'OK, list of results'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties: {groupname: {type: string}, bookletsStarted: {type: integer}, num_units_min: {type: string}, num_units_max: {type: string}, num_units_total: {type: string}, lastchange: {type: string, description: timestamp}, num_units_mean: {type: integer}}
                            example:
                                -
                                    groupname: sample_group
                                    bookletsStarted: 1
                                    num_units_min: '1'
                                    num_units_max: '1'
                                    num_units_total: '1'
                                    lastchange: '1567776853037'
                                    num_units_mean: 1
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    /php/getResponses.php:
        post:
            summary: 'get responses'
            description: 'retrieves a list of responses by a given list of groups'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                        ws: 1
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                g:
                                    type: array
                                    description: 'a list'
                                    items: {type: string}
                        example:
                            g:
                                - sample_group
            responses:
                '200':
                    description: 'OK, list of responses'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties: {unitname: {type: string}, responses: {type: string, description: 'may contain encoded JSON'}, responsetype: {type: string}, laststate: {type: string, description: 'may contain encoded JSON'}, bookletname: {type: string}, restorepoint_ts: {type: string}, responses_ts: {type: string, description: 'contains a unix timestamp'}, restorepoint: {type: string}, groupname: {type: string}, loginname: {type: string}, code: {type: string, description: 'login code'}}
                                example:
                                    - {unitname: UNIT.SAMPLE, responses: '{"name":"Sam Sample","age":34}', responsetype: "", laststate: '{"PRESENTATIONCOMPLETE":"yes"}', bookletname: BOOKLET.SAMPLE, restorepoint_ts: '0', responses_ts: '1567778660869', restorepoint: null, groupname: sample_group, loginname: test, code: jsx}
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    /php/getMonitorData.php:
        post:
            summary: 'get status'
            description: 'retrieves an overview about running tests'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                        ws: 1
            responses:
                '200':
                    description: 'OK, list of monitor data'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties: {groupname: {type: string}, loginsPrepared: {type: integer}, personsPrepared: {type: integer}, bookletsPrepared: {type: integer}, bookletsStarted: {type: integer}, bookletsLocked: {type: integer}, laststart: {type: integer, description: 'timestamp of last start'}, laststartStr: {type: string, description: 'date of last start in human readable format (german date format: dd.MM.yyyy)'}}
                            example:
                                -
                                    groupname: sample_group
                                    loginsPrepared: 1
                                    personsPrepared: 10
                                    bookletsPrepared: 10
                                    bookletsStarted: 1
                                    bookletsLocked: 0
                                    laststart: 1567783156
                                    laststartStr: 06.09.2019
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    /php/getLogs.php:
        post:
            summary: 'get logs'
            description: 'retrieves unit and bookltes logs from this workspace'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                        ws: 1
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                g:
                                    type: array
                                    description: 'a list'
                                    items: {type: string}
                        example:
                            g:
                                - sample_group
            responses:
                '200':
                    description: 'OK, list of logs'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties: {unitname: {type: string}, bookletname: {type: string}, groupname: {type: string}, loginname: {type: string}, code: {type: string, description: 'person code'}, timestamp: {type: string}, logentry: {type: string}}
                            example:
                                -
                                    unitname: UNIT.SAMPLE
                                    bookletname: BOOKLET.SAMPLE
                                    groupname: sample_group
                                    loginname: test
                                    code: sxx
                                    timestamp: '1568026665043'
                                    logentry: 'sample unit log'
                                -
                                    bookletname: BOOKLET.SAMPLE
                                    groupname: sample_group
                                    loginname: test
                                    code: sxx
                                    timestamp: '1568026665043'
                                    logentry: 'sample log entry'
                                    unitname: ""
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    /php/getBookletsStarted.php:
        post:
            summary: 'get started booklets'
            description: 'retrieves an overview about started booklets'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                        ws: 1
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                g:
                                    type: array
                                    description: 'a list'
                                    items: {type: string}
                        example:
                            g:
                                - sample_group
            responses:
                '200':
                    description: 'OK, list of started booklets'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties: {groupname: {type: string}, loginname: {type: string}, code: {type: string, description: 'person code'}, bookletname: {type: string}, locked: {type: boolean}, lastlogin: {type: string, description: 'date of last login and time in US format: YYYY-mm-dd HH:mm:SS'}, laststart: {type: string, description: 'date of last start and time in US format: YYYY-mm-dd HH:mm:SS'}}
                            example:
                                -
                                    groupname: sample_group
                                    loginname: test
                                    code: dlu
                                    bookletname: BOOKLET.SAMPLE
                                    locked: false
                                    lastlogin: '2019-09-10 13:29:36'
                                    laststart: '2019-09-10 13:29:37'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    /php/checkWorkspace.php:
        post:
            summary: 'check workspace'
            description: 'triggers a check of all xmls in the workspace and retrieves the results'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                        ws: 1
            responses:
                '200':
                    description: 'OK, list of reviews'
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    errors: {type: array, items: {type: string}}
                                    warnings: {type: array, items: {type: string}}
                                    infos: {type: array, items: {type: string}}
                            example:
                                errors: []
                                warnings: []
                                infos:
                                    - '1 resource files found'
                                    - '1 valid units found'
                                    - '1 valid booklets found'
                                    - '0 valid syschecks found'
                                    - '10 testtakers in 1 logins found'
                                    - 'booklet loads (bytes, sorted):'
                                    - '    BOOKLET.SAMPLE: 5.365'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    /php/getFile.php:
        get:
            summary: 'get file'
            description: 'retrieves a file form a goven workspace by filename'
            parameters:
                -
                    in: query
                    name: ws
                    description: workspace-id
                    example: 1
                    schema:
                        type: integer
                -
                    in: query
                    name: at
                    description: 'auth token'
                    example: 1337ymca1337666.xxx13370
                    schema:
                        type: string
                -
                    in: query
                    name: t
                    description: 'file type - Testtakers | Booklet | Resource | Unit | SysCheck - CASE SENSITIVE!'
                    example: Unit
                    schema:
                        type: string
                -
                    in: query
                    name: fn
                    description: 'filename. - CASE SENSITIVE!'
                    example: SAMPLE_UNIT.XML
                    schema:
                        type: string
            responses:
                '200':
                    description: 'File contents'
                '404':
                    description: 'workspace or file not found'
                '500':
                    description: 'Server Error'
    /php/uploadFile.php:
        post:
            summary: 'upload file'
            description: 'uploads a Resource, Unit, Booklet, SysCheck ort Testtakers file'
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                        ws: 1
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                fileforvo:
                                    type: string
                                    description: 'upload file'
                            required:
                                - fileforvo
            responses:
                '200':
                    description: 'upload susccessfull'
                    content:
                        application/json:
                            example: 'OK (valide)'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'workspace or file not found'
                '500':
                    description: 'Server Error'
    /php/ws.php/filelist:
        get:
            summary: 'get files of workspace'
            description: 'get a list of all files in workspace'
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                        ws: 1
            responses:
                '200':
                    description: 'OK, a list of files'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/file_list'
                            example:
                                -
                                    filename: SAMPLE_TESTTAKERS.XML
                                    filesize: 823
                                    filesizestr: '823 Bytes'
                                    filedatetime: 1567610586
                                    filedatetimestr: 04.09.2019
                                    type: Testtakers
                                    typelabel: Testtakers
                                -
                                    filename: SAMPLE_BOOKLET.XML
                                    filesize: 1284
                                    filesizestr: '1.25 KB'
                                    filedatetime: 1567610586
                                    filedatetimestr: 04.09.2019
                                    type: Booklet
                                    typelabel: Booklet
                                -
                                    filename: SAMPLE_PLAYER.HTML
                                    filesize: 3386
                                    filesizestr: '3.31 KB'
                                    filedatetime: 1567610586
                                    filedatetimestr: 04.09.2019
                                    type: Resource
                                    typelabel: Resource
                                -
                                    filename: SAMPLE_UNIT.XML
                                    filesize: 696
                                    filesizestr: '696 Bytes'
                                    filedatetime: 1567610586
                                    filedatetimestr: 04.09.2019
                                    type: Unit
                                    typelabel: Unit
                                -
                                    filename: SAMPLE_SYSCHECK.XML
                                    filesize: 960
                                    filesizestr: '960 Bytes'
                                    filedatetime: 1567610586
                                    filedatetimestr: 04.09.2019
                                    type: SysCheck
                                    typelabel: SysCheck
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    /php/ws.php/delete:
        post:
            summary: 'delete files'
            description: 'deletes files from a workspace'
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                f:
                                    type: array
                                    description: 'array of file names. path delimiters have to be replaced by `::`'
                                    items: {type: string}
                        examples:
                            a:
                                value:
                                    f: ['SysCheck::SAMPLE_SYSCHECK.XML']
                            b:
                                description: 'include some non-existant or forbidden files'
                                value:
                                    f: ['SysCheck::SAMPLE_SYSCHECK.XML', 'some rubbish', a/b, ../../README.md]
            parameters:
                -
                    in: header
                    name: AuthToken
                    description: 'auth-token with wokspace number'
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                        ws: 1
            responses:
                '200':
                    description: 'OK, roles has been updated'
                    content:
                        text/plain:
                            examples:
                                a:
                                    value: 'Eine Datei gelöscht.'
                                b:
                                    value: 'Konnte 3 Dateien nicht löschen.'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    /php/ws.php/lock:
        post:
            summary: 'lock workspace'
            description: 'locks a group of booklets in a workspace'
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                g:
                                    type: array
                                    description: 'array of group names'
                                    items: {type: string}
                        example:
                            g:
                                - group1
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                        ws: 1
            responses:
                '200':
                    description: OK
                    content:
                        text/plain:
                            example: 'true'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
    /php/ws.php/unlock:
        post:
            summary: 'unlock workspace'
            description: 'unlocks a group of bookltes in a workspace'
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                g:
                                    type: array
                                    description: 'array of group names'
                                    items: {type: string}
                        example:
                            g:
                                - group1
            parameters:
                -
                    in: header
                    name: AuthToken
                    schema:
                        $ref: '#/components/schemas/auth'
                    example:
                        at: 1337ymca1337666.xxx13370
                        ws: 1
            responses:
                '200':
                    description: OK
                    content:
                        text/plain:
                            example: 'true'
                '401':
                    description: 'Not authenticated'
                '403':
                    description: Forbidden
                '404':
                    description: 'Workspace not found'
                '500':
                    description: 'Server Error'
components:
    schemas:
        auth:
            type: object
            properties:
                at:
                    type: string
                    description: authtoken
                    example: 1337ymca1337666.xxx13370
                ws:
                    type: integer
                    description: workspace-id
            required:
                - at
        login_request:
            type: object
            properties:
                n:
                    type: string
                    description: Username
                    example: super
                p:
                    type: string
                    description: Password
                    example: user123
        login_response:
            type: object
            properties:
                admintoken:
                    type: string
                    description: 'Token for session authentication'
                name:
                    type: string
                    description: 'Username repetition'
                    example: super
                workspaces:
                    type: array
                    description: 'List of workspaces wich are open to this user'
                    items:
                        $ref: '#/components/schemas/workspace'
                is_superadmin:
                    type: boolean
                    description: 'Flag that tells, if this user is a superadmin'
                    example: true
        workspace:
            type: object
            properties:
                id:
                    type: string
                    example: '1'
                name:
                    type: string
                    example: example_workspace
                role:
                    type: string
                    example: RW
                selected:
                    type: boolean
                    example: false
                    description: 'TODO what does this do?'
            required:
                - id
        workspace_list:
            type: array
            description: 'List of Workspaces'
            items:
                $ref: '#/components/schemas/workspace'
        user_list:
            type: array
            description: 'List of Users'
            items:
                $ref: '#/components/schemas/user'
        user:
            type: object
            description: 'a user'
            properties:
                name:
                    type: string
                    example: super
                id:
                    type: string
                    example: '1'
                email:
                    type: string
                    nullable: true
                    example: null
                is_superadmin:
                    type: string
                    example: '1'
                selected:
                    type: boolean
                    example: true
                    description: 'TODO what does this do?'
                role:
                    type: string
                    example: RW
            required:
                - id
                - name
        file:
            type: object
            description: 'information about a file'
            properties:
                filename:
                    type: string
                filesize:
                    type: integer
                    description: 'file size in byte'
                filesizestr:
                    type: string
                    description: 'human readable filesize'
                filedatetime:
                    type: integer
                    description: 'modification date as unix time stamp'
                filedatetimestr:
                    type: string
                    description: 'modification date as human readable string'
                type:
                    type: string
                    description: 'Testtakers | Booklet | Resource | Unit | SysCheck'
                typelabel:
                    type: string
                    description: 'Testtakers | Booklet | Resource | Unit | SysCheck'
        file_list:
            type: array
            description: 'List of Files'
            items:
                $ref: '#/components/schemas/file'
