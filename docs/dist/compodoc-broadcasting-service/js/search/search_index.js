var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.659,1,1.659]],["body/modules/AppModule.html",[0,2.395,1,3.133,2,2.111,3,3.282,4,2.497,5,2.497,6,1.815,7,0.049,8,1.815,9,3.282,10,2.497,11,2.497,12,0.561,13,0.561,14,0.402,15,0.139,16,3.084,17,4.053,18,1.624,19,2.675,20,2.675,21,2.675,22,2.675,23,2.675,24,1.502,25,4.053,26,0.849,27,4.053,28,2.497,29,1.435,30,1.624,31,3.084,32,3.084,33,1.435,34,1.822,35,1.822,36,2.395,37,3.084,38,3.084,39,3.084,40,3.084,41,2.111,42,3.084,43,3.084,44,3.084,45,3.084,46,0.561,47,0.561,48,0.035,49,0.035]],["title/interfaces/Command.html",[50,0.994,51,1.275]],["body/interfaces/Command.html",[7,0.049,12,0.612,13,0.612,14,0.439,15,0.151,46,0.858,48,0.037,49,0.037,50,1.191,51,2.256,52,1.737,53,1.988,54,0.36,55,1.718,56,4.969,57,4.156,58,4.969,59,1.036,60,4.024,61,1.858,62,0.615,63,2.142,64,1.737,65,2.303,66,2.724,67,2.724,68,2.724,69,2.724,70,2.724,71,1.737,72,3.364,73,2.724,74,4.287,75,2.724,76,3.364,77,2.724,78,3.364,79,3.364,80,2.724,81,3.364,82,2.724,83,1.737,84,2.724,85,1.988,86,0.813,87,3.364,88,1.891,89,3.364,90,3.364]],["title/controllers/CommandController.html",[21,1.659,91,0.678]],["body/controllers/CommandController.html",[7,0.049,8,1.635,12,0.584,13,0.584,14,0.419,15,0.187,18,1.288,21,2.46,24,1.345,26,0.885,41,2.2,46,0.584,47,0.584,48,0.036,49,0.036,51,1.459,54,0.344,59,0.776,62,0.419,71,2.149,88,1.668,91,1.006,92,2.603,93,1.302,94,4.163,95,3.214,96,3.063,97,1.459,98,4.163,99,0.885,100,3.214,101,0.776,102,0.885,103,0.885,104,1.302,105,1.899,106,1.302,107,1.459,108,1.899,109,1.659,110,2.2,111,3.214,112,1.138,113,1.302,114,1.302,115,1.115,116,3.214,117,3.214,118,3.214,119,3.214,120,2.46,121,3.214,122,1.288,123,2.46,124,4.163,125,3.214,126,2.2,127,2.603,128,3.214,129,3.214,130,2.2,131,3.214]],["title/classes/ErrorHandler.html",[36,1.659,47,0.511]],["body/classes/ErrorHandler.html",[7,0.049,12,0.497,13,0.497,14,0.356,15,0.206,24,1.261,26,0.753,28,2.213,33,1.621,36,2.208,46,0.497,47,0.497,48,0.032,49,0.032,54,0.293,55,1.497,59,0.903,62,0.487,64,2.198,93,1.168,99,1.173,101,0.903,102,1.029,103,0.753,104,0.854,106,1.432,109,1.411,112,1.323,113,1.432,114,1.432,115,0.903,132,1.615,133,3.707,134,2.213,135,3.737,136,4.259,137,4.578,138,2.733,139,2.733,140,3.737,141,1.411,142,1.241,143,3.737,144,2.733,145,3.737,146,4.259,147,4.578,148,2.733,149,2.213,150,2.733,151,3.707,152,2.733,153,2.213,154,2.733,155,2.733,156,2.733,157,4.103,158,2.733,159,4.794,160,3.737,161,3.737,162,3.737,163,3.737,164,3.737,165,3.026,166,2.733,167,2.733,168,2.733,169,2.733,170,2.733,171,2.733,172,2.733]],["title/interfaces/Monitor.html",[50,0.994,173,1.125]],["body/interfaces/Monitor.html",[7,0.048,12,0.695,13,0.695,14,0.498,15,0.172,46,0.844,48,0.04,49,0.04,50,1.353,52,1.972,54,0.409,55,1.86,61,1.918,62,0.605,83,1.972,85,2.258,86,0.923,88,1.86,173,2.003,174,2.615,175,5.198,176,2.083,177,3.094,178,3.094,179,3.821]],["title/controllers/MonitorController.html",[20,1.659,91,0.678]],["body/controllers/MonitorController.html",[6,1.303,7,0.049,12,0.486,13,0.486,14,0.348,15,0.214,18,1.07,20,2.174,24,1.249,26,0.736,29,0.946,30,1.07,35,1.578,46,0.486,47,0.486,48,0.031,49,0.031,54,0.286,59,1.095,61,1.303,62,0.591,86,0.889,91,0.889,93,1.15,96,3.301,97,2.058,99,1.249,101,1.095,102,1.249,103,1.249,104,1.418,105,1.578,106,1.15,107,1.212,108,1.578,109,1.379,112,0.946,113,1.15,114,1.15,115,1.016,120,2.174,122,1.07,123,2.174,126,1.828,130,2.518,173,1.817,176,1.474,180,2.163,181,2.979,182,3.678,183,2.979,184,3.678,185,2.671,186,3.678,187,2.671,188,2.671,189,3.678,190,2.671,191,2.671,192,3.678,193,2.671,194,2.671,195,3.678,196,2.671,197,1.828,198,2.671,199,1.828,200,2.671,201,2.671,202,2.671,203,1.828,204,2.671,205,2.163,206,2.671,207,2.671,208,2.163,209,2.671,210,2.163,211,2.671,212,2.671,213,2.671,214,2.671,215,2.671]],["title/controllers/SystemController.html",[23,1.659,91,0.678]],["body/controllers/SystemController.html",[6,1.479,7,0.049,8,1.639,12,0.587,13,0.587,14,0.421,15,0.208,18,1.294,23,2.468,24,1.348,26,0.89,29,1.144,30,1.294,33,1.479,34,1.909,35,1.909,41,2.211,46,0.587,47,0.759,48,0.036,49,0.036,54,0.346,91,1.009,93,1.447,97,1.896,99,1.15,103,1.15,104,1.53,106,1.306,107,1.466,112,1.144,113,1.53,114,1.53,115,0.78,199,2.211,216,2.616,217,3.35,218,4.894,219,4.177,220,3.23,221,3.23,222,3.23,223,3.23,224,3.23,225,3.23,226,3.23,227,3.23,228,3.23,229,3.23,230,3.23,231,3.23,232,2.616,233,2.616,234,1.909,235,2.616,236,2.616,237,3.23]],["title/controllers/TestSessionController.html",[19,1.659,91,0.678]],["body/controllers/TestSessionController.html",[6,1.44,7,0.049,12,0.563,13,0.563,14,0.404,15,0.204,18,1.242,19,2.402,24,1.327,26,0.853,29,1.097,30,1.818,35,1.831,46,0.563,47,0.563,48,0.035,49,0.035,54,0.332,59,0.748,62,0.404,86,0.748,91,0.982,93,1.271,96,3.033,97,1.846,99,1.12,101,0.748,102,0.853,103,1.12,104,1.271,105,1.831,106,1.271,107,1.407,108,1.831,109,1.6,112,1.097,113,1.271,114,1.271,115,0.982,120,1.831,122,1.242,123,1.831,199,2.121,203,2.121,238,2.681,239,2.509,240,3.9,241,4.065,242,4.065,243,2.098,244,3.099,245,3.106,246,3.099,247,4.065,248,3.674,249,3.099,250,3.099,251,1.831,252,2.509,253,3.292,254,2.509,255,3.099,256,3.099,257,3.099,258,3.099,259,3.099,260,3.099,261,3.099]],["title/injectables/TestSessionService.html",[6,0.994,262,1.449]],["body/injectables/TestSessionService.html",[6,0.846,7,0.05,12,0.272,13,0.272,14,0.195,15,0.219,24,0.937,26,0.412,29,0.53,30,1.956,33,1.403,34,0.885,46,0.272,47,0.272,48,0.02,49,0.02,54,0.16,55,0.957,59,0.957,61,1.798,62,0.595,63,0.68,64,2.046,71,2.147,86,0.898,88,1.666,93,0.747,99,1.327,101,0.957,102,1.091,103,1.226,104,1.457,106,1.064,112,0.846,113,1.56,114,1.064,115,0.577,122,0.6,141,1.539,142,1.353,173,1.979,176,0.6,183,2.414,217,2.329,232,1.213,233,1.213,234,0.885,235,1.213,238,2.884,240,2.755,243,1.539,245,3.415,251,0.885,252,1.213,253,1.213,254,1.213,262,1.233,263,1.025,264,1.025,265,2.981,266,2.389,267,2.389,268,2.389,269,2.389,270,2.755,271,3.402,272,2.389,273,1.213,274,1.497,275,2.389,276,1.497,277,2.389,278,1.497,279,3.209,280,2.389,281,1.497,282,2.389,283,1.497,284,2.389,285,1.497,286,1.497,287,1.497,288,1.497,289,2.389,290,1.497,291,1.935,292,2.389,293,1.497,294,1.635,295,1.497,296,1.497,297,1.497,298,1.025,299,3.209,300,1.935,301,1.213,302,1.935,303,1.935,304,1.935,305,1.213,306,1.213,307,1.497,308,3.367,309,1.497,310,1.497,311,1.497,312,1.497,313,1.025,314,1.497,315,1.213,316,3.402,317,1.497,318,1.497,319,1.497,320,3.402,321,1.213,322,1.213,323,1.497,324,1.497,325,1.497,326,1.497,327,1.497,328,1.497,329,1.497,330,1.213,331,1.497,332,1.497,333,1.497,334,1.497,335,1.497,336,2.389,337,1.497,338,1.213,339,1.497,340,2.389,341,1.635,342,1.497,343,1.213,344,1.497,345,1.497,346,2.389,347,2.389,348,1.497,349,2.389,350,1.497,351,1.497,352,1.497,353,1.497,354,1.497,355,1.497,356,1.497,357,1.497,358,1.497,359,1.497,360,1.497,361,1.497]],["title/interfaces/Testee.html",[50,0.994,362,1.125]],["body/interfaces/Testee.html",[7,0.048,12,0.677,13,0.677,14,0.485,15,0.167,46,0.83,48,0.039,49,0.039,50,1.318,52,1.921,54,0.399,55,1.83,61,1.906,62,0.644,63,2.243,83,1.921,85,2.199,86,0.899,88,1.83,176,2.064,178,3.014,313,3.526,362,1.98,363,2.548,364,4.172,365,3.014,366,3.722]],["title/controllers/TesteeController.html",[22,1.659,91,0.678]],["body/controllers/TesteeController.html",[7,0.049,8,1.54,12,0.518,13,0.518,14,0.371,15,0.209,18,1.141,22,2.27,24,1.282,26,0.784,46,0.518,47,0.518,48,0.033,49,0.033,54,0.305,59,1.051,62,0.567,86,0.688,91,0.928,93,1.201,96,3.271,97,1.974,99,1.198,101,1.051,102,1.198,103,1.198,104,1.456,105,1.682,106,1.201,107,1.292,108,1.682,109,1.469,112,1.008,113,1.201,114,1.201,115,1.051,120,2.27,122,1.141,123,2.27,126,1.949,130,2.63,176,1.54,203,1.949,205,2.305,208,2.305,210,2.305,362,1.866,367,2.305,368,3.842,369,2.63,370,3.842,371,2.847,372,3.842,373,2.847,374,2.847,375,3.842,376,2.847,377,2.847,378,3.842,379,2.847,380,2.847,381,1.949,382,2.305,383,2.847,384,2.847,385,2.847,386,2.847,387,2.847,388,2.847,389,2.847,390,2.847,391,2.847,392,2.847]],["title/injectables/TesteeService.html",[8,0.994,262,1.449]],["body/injectables/TesteeService.html",[7,0.049,8,1.114,12,0.39,13,0.39,14,0.28,15,0.226,24,1.131,26,0.591,33,1.619,34,1.267,46,0.39,47,0.39,48,0.027,49,0.027,51,2.075,54,0.23,55,1.261,59,1.056,61,1.716,62,0.616,63,1.692,64,1.107,71,1.624,86,0.76,88,1.261,93,0.984,99,1.362,101,1.056,102,1.204,103,1.259,104,1.572,106,1.284,112,1.114,113,1.515,114,1.284,115,0.76,127,3.018,141,1.624,142,1.429,176,0.859,217,2.811,262,1.624,263,1.468,273,1.736,294,1.468,306,1.736,313,1.468,338,1.736,341,1.468,362,2.014,364,3.018,369,2.551,382,1.736,393,1.736,394,3.147,395,3.147,396,4.106,397,3.147,398,3.147,399,2.551,400,4.106,401,2.144,402,3.147,403,2.144,404,3.147,405,2.144,406,2.144,407,2.144,408,3.147,409,2.144,410,3.727,411,3.147,412,2.144,413,3.147,414,2.144,415,2.144,416,2.144,417,2.144,418,2.144,419,2.144,420,3.727,421,2.144,422,3.147,423,3.147,424,2.144,425,2.144,426,2.548,427,2.548,428,3.147,429,1.736,430,2.144,431,2.144,432,2.144,433,2.144,434,2.144,435,2.144,436,2.144,437,2.144,438,2.144,439,1.468,440,2.144]],["title/classes/WebsocketGateway.html",[33,0.994,47,0.511]],["body/classes/WebsocketGateway.html",[7,0.049,12,0.319,13,0.319,14,0.229,15,0.227,24,1.216,26,0.483,33,1.314,46,0.319,47,0.319,48,0.023,49,0.023,52,0.905,54,0.188,55,1.083,59,0.968,61,1.769,62,0.623,63,1.684,64,1.703,71,1.395,83,0.905,86,0.896,88,1.083,93,0.845,97,1.227,99,1.376,101,0.968,102,1.104,103,1.255,104,1.493,106,1.16,113,1.595,114,1.032,115,1.023,122,1.486,132,1.036,141,1.915,142,1.684,165,3.574,176,1.606,181,2.672,270,3.004,291,2.189,294,1.2,330,1.419,341,1.85,399,1.2,441,1.2,442,2.189,443,3.3,444,3.3,445,3.3,446,3.3,447,3.429,448,2.703,449,3.709,450,2.703,451,3.709,452,2.703,453,2.703,454,2.703,455,4.008,456,2.703,457,1.753,458,1.753,459,2.703,460,1.753,461,2.703,462,1.753,463,3.3,464,1.753,465,2.703,466,4.008,467,3.004,468,1.753,469,1.753,470,2.703,471,1.753,472,1.753,473,1.753,474,4.008,475,2.703,476,5.053,477,3.709,478,1.753,479,2.703,480,1.753,481,1.753,482,2.703,483,1.753,484,1.753,485,1.753,486,1.753,487,1.753,488,1.753,489,1.753,490,1.753,491,1.753,492,1.419,493,1.753,494,1.753,495,1.753,496,1.753,497,1.419,498,1.753,499,3.709,500,2.703,501,2.703,502,1.753,503,3.709,504,2.703,505,1.753,506,1.753,507,1.753,508,1.753,509,1.753,510,1.753,511,1.753,512,2.703,513,1.753,514,1.753,515,1.753,516,1.753,517,1.753,518,1.753,519,1.753,520,1.753,521,1.753]],["title/changelog.html",[522,1.909,523,1.909,524,1.909]],["body/changelog.html",[0,0.998,7,0.034,14,0.385,15,0.044,29,0.598,48,0.022,49,0.014,50,0.598,57,1.794,59,0.833,60,1.794,63,0.767,73,1.367,75,1.367,77,0.798,80,0.798,82,2.791,86,0.535,99,0.61,101,0.535,102,0.271,107,0.767,115,1.117,122,1.578,132,0.582,142,1.463,149,0.798,151,1.794,157,0.798,173,1.457,234,0.582,236,1.367,243,0.508,248,0.798,251,1.552,308,1.794,315,1.367,321,0.798,322,1.367,362,0.888,369,0.674,426,0.798,427,1.367,429,0.798,442,0.798,524,0.798,525,0.985,526,0.985,527,0.985,528,0.985,529,0.985,530,2.216,531,2.216,532,1.794,533,1.688,534,0.985,535,0.985,536,3.19,537,0.985,538,0.985,539,1.688,540,2.216,541,3.93,542,0.985,543,0.985,544,0.985,545,0.985,546,0.985,547,2.216,548,2.954,549,0.985,550,0.985,551,2.216,552,1.688,553,1.688,554,0.798,555,4.013,556,0.985,557,0.985,558,0.985,559,0.985,560,0.985,561,1.688,562,1.688,563,2.216,564,2.216,565,2.216,566,1.688,567,0.985,568,2.626,569,3.19,570,3.939,571,1.688,572,1.688,573,2.626,574,0.985,575,1.688,576,0.985,577,0.985,578,3.447,579,2.216,580,0.985,581,0.985,582,2.626,583,1.688,584,0.985,585,0.985,586,2.216,587,0.985,588,0.985,589,0.985,590,0.985,591,3.223,592,0.985,593,1.688,594,0.985,595,0.985,596,0.985,597,3.456,598,0.985,599,0.985,600,2.216,601,2.216,602,2.954,603,1.688,604,0.985,605,0.985,606,1.688,607,0.985,608,0.985,609,0.985,610,2.626,611,2.954,612,0.985,613,2.626,614,0.985,615,0.985,616,0.985,617,0.985,618,1.688,619,0.985,620,0.985,621,0.985,622,0.985,623,0.985,624,1.688,625,0.582,626,0.985,627,0.985,628,2.127,629,2.216,630,0.985,631,1.688,632,1.688,633,2.216,634,2.626,635,4.354,636,1.688,637,2.216,638,1.688,639,2.954,640,0.985,641,0.985,642,0.985,643,0.985,644,2.626,645,2.954,646,3.799,647,0.985,648,0.985,649,0.985,650,0.985,651,0.985,652,0.985,653,2.954,654,0.985,655,1.688,656,1.688,657,0.985,658,1.688,659,3.223,660,1.688,661,1.688,662,1.688,663,1.688,664,2.626,665,0.985,666,1.688,667,1.688,668,2.954,669,0.985,670,0.985,671,0.985,672,0.985,673,0.985,674,0.985,675,0.985,676,2.216,677,0.985,678,2.216,679,1.688,680,0.985,681,1.688,682,2.216,683,0.985,684,2.216,685,0.985,686,1.688,687,1.688,688,1.688,689,0.985,690,0.985,691,0.985,692,0.985,693,0.985,694,0.985,695,0.985,696,2.216,697,2.216,698,1.688,699,0.985,700,2.954,701,0.985,702,1.688,703,0.798,704,0.985,705,1.794,706,2.954,707,2.216,708,0.985,709,2.216,710,1.688,711,0.985,712,0.985,713,1.688,714,1.688,715,0.985,716,2.626,717,0.985,718,2.791,719,1.367,720,0.985,721,0.985,722,0.985,723,1.688,724,1.688,725,1.688,726,2.393,727,1.688,728,0.985,729,0.985,730,2.626,731,1.688,732,0.985,733,1.688,734,0.985,735,0.985,736,0.985,737,0.985,738,0.985,739,0.985,740,0.985,741,0.985,742,0.985,743,0.985,744,0.985,745,0.985,746,0.985,747,0.985,748,0.985,749,0.985,750,1.688,751,1.688,752,1.367,753,0.985,754,1.688,755,0.985,756,0.985,757,0.985,758,1.688,759,0.985,760,0.985,761,0.985,762,0.985,763,0.985,764,0.985,765,0.985,766,0.985,767,0.985,768,0.985,769,0.985,770,0.985,771,0.985,772,0.985,773,0.985,774,0.985,775,2.216,776,3.939,777,2.216,778,0.985,779,0.985,780,0.985,781,0.985,782,0.985,783,1.688,784,1.688,785,0.985,786,0.985,787,1.794,788,0.985,789,0.985,790,0.985,791,0.985,792,0.985,793,0.985,794,0.985,795,0.985,796,0.985,797,1.688,798,1.688,799,0.985,800,0.985,801,0.985,802,0.985,803,0.985,804,0.985,805,0.985,806,0.985,807,0.985,808,1.367,809,1.688,810,0.985,811,0.985,812,0.985,813,2.216,814,0.985,815,0.985,816,2.954,817,0.985,818,0.985,819,0.985,820,0.985,821,0.985,822,0.985,823,0.985,824,0.985,825,0.985,826,0.985,827,0.985,828,0.985,829,0.985,830,0.985,831,0.985,832,0.985,833,0.985,834,0.985,835,2.216,836,1.688,837,0.985,838,1.688,839,0.798,840,0.985,841,0.985,842,0.985,843,0.985,844,1.688,845,0.985,846,0.985,847,0.985,848,0.985,849,0.985,850,2.626,851,0.985,852,0.985,853,0.985,854,0.985,855,0.985,856,0.985,857,0.985,858,0.798,859,0.798,860,0.985,861,0.985,862,0.985,863,1.688,864,0.985,865,0.985,866,0.985,867,0.985,868,0.985,869,0.985,870,0.985,871,0.985,872,0.985,873,0.985,874,0.985,875,0.985,876,0.985,877,0.985,878,1.688,879,0.798,880,0.985,881,0.985,882,0.985,883,0.985,884,0.985,885,2.626,886,0.985,887,0.985,888,0.985,889,0.985,890,0.985,891,0.985,892,0.985,893,0.985,894,0.985,895,0.985,896,0.798,897,0.798,898,0.985,899,1.688,900,1.688,901,1.688,902,0.985,903,1.688,904,3.223,905,0.985,906,2.626,907,0.985,908,0.985,909,0.985,910,0.985,911,0.985,912,2.216,913,0.985,914,0.985,915,0.985,916,0.985,917,0.985,918,0.985,919,0.985,920,0.985,921,0.985,922,0.985,923,0.985,924,0.985,925,0.985,926,0.985,927,0.985,928,1.688,929,0.985,930,0.985,931,0.985,932,0.985,933,0.985,934,0.985,935,0.985,936,0.798,937,1.688,938,0.985,939,0.985,940,1.688,941,0.985,942,0.985,943,0.985,944,0.985,945,0.985,946,1.688,947,0.985,948,0.985,949,0.985,950,0.985,951,0.985,952,0.985,953,0.985,954,0.985,955,0.985,956,0.985,957,0.985,958,0.985,959,0.985,960,0.985,961,1.688,962,0.985,963,0.674,964,0.985,965,0.798,966,0.985,967,0.985,968,0.985,969,0.985,970,0.985,971,0.985,972,0.798,973,0.985,974,1.688,975,0.985,976,1.688,977,0.985,978,0.985,979,0.985,980,0.985,981,0.985,982,0.985,983,0.985,984,0.985,985,0.985,986,0.985,987,0.985,988,0.985,989,0.985,990,0.985,991,0.985,992,0.985,993,0.985,994,0.985,995,0.985,996,0.985,997,0.985,998,0.985,999,0.985,1000,0.985,1001,0.985,1002,0.985,1003,0.985,1004,0.985,1005,0.985,1006,0.985,1007,0.985,1008,0.985,1009,0.985,1010,1.688,1011,0.985,1012,0.985,1013,2.216,1014,1.688,1015,0.985,1016,0.985,1017,0.985,1018,0.985,1019,0.985,1020,0.985,1021,2.626,1022,0.985,1023,0.985,1024,0.985,1025,0.985,1026,0.985,1027,0.985,1028,0.985,1029,0.985,1030,0.985,1031,0.985,1032,0.985,1033,2.216,1034,2.216,1035,0.985,1036,0.985]],["title/coverage.html",[1037,2.606]],["body/coverage.html",[6,1.042,7,0.048,8,1.042,14,0.384,15,0.252,19,1.739,20,1.739,21,1.739,22,1.739,23,1.739,30,1.772,33,1.042,36,1.739,47,0.715,48,0.034,49,0.034,50,1.566,51,1.336,53,2.614,62,0.384,65,2.015,83,2.539,91,1.188,92,2.384,110,2.015,115,0.711,133,2.384,134,2.384,173,1.18,174,2.69,180,2.384,197,2.015,216,2.384,238,2.614,239,2.384,262,2.028,264,2.69,298,2.015,343,4.544,362,1.18,363,2.69,367,2.384,381,2.015,393,2.384,441,2.69,703,2.384,1037,2.015,1038,2.384,1039,2.944,1040,2.944,1041,2.944,1042,3.93,1043,5.165,1044,3.93,1045,4.423,1046,3.93,1047,2.384,1048,2.384,1049,2.384,1050,4.423,1051,2.944,1052,2.944]],["title/miscellaneous/functions.html",[963,2.307,1053,1.07]],["body/miscellaneous/functions.html",[7,0.047,15,0.249,48,0.038,49,0.038,51,1.615,53,2.103,54,0.381,59,1.225,61,1.573,62,0.661,84,2.882,85,2.861,101,1.225,102,1.397,103,1.334,110,3.04,173,1.426,174,2.436,177,2.882,197,3.04,362,1.426,363,2.436,365,2.882,381,3.04,441,2.436,492,2.882,963,2.436,1047,3.597,1048,2.882,1049,3.921,1053,1.615,1054,3.558,1055,3.558,1056,2.882,1057,3.558,1058,3.558,1059,3.558]],["title/index.html",[54,0.253,522,1.909,523,1.909]],["body/index.html",[7,0.037,15,0.192,29,1.513,48,0.037,49,0.037,101,0.808,153,2.71,234,1.978,243,1.728,251,2.782,399,2.291,439,2.291,447,3.46,532,2.71,536,3.46,541,3.46,554,2.71,555,2.71,569,2.71,597,3.812,625,1.978,628,2.71,705,3.46,718,2.71,726,2.71,752,2.71,808,2.71,839,3.812,859,3.46,879,2.71,896,2.71,897,2.71,936,2.71,965,2.71,972,2.71,1037,2.291,1038,3.46,1060,3.347,1061,3.347,1062,3.347,1063,3.347,1064,3.347,1065,3.347,1066,3.347,1067,3.347,1068,3.347,1069,4.273,1070,3.347,1071,3.347,1072,4.273,1073,3.347,1074,3.347,1075,3.347,1076,3.347,1077,3.347,1078,3.347,1079,3.347,1080,3.347,1081,3.347,1082,3.347,1083,3.347,1084,3.347,1085,3.347,1086,3.347,1087,3.347,1088,4.273,1089,3.347,1090,3.347,1091,3.347,1092,3.347,1093,4.273,1094,3.347,1095,3.347,1096,3.347,1097,3.347,1098,3.347,1099,3.347,1100,3.347,1101,3.347,1102,3.347,1103,3.347]],["title/modules.html",[2,2.606]],["body/modules.html",[1,2.577,2,2.985,7,0.043,48,0.043,49,0.043,858,3.532,1104,4.361,1105,4.361,1106,4.361]],["title/overview.html",[625,2.249]],["body/overview.html",[0,2.362,1,3.234,3,3.862,4,3.237,5,3.237,6,1.805,7,0.045,8,1.805,9,3.862,10,3.237,11,3.237,18,1.602,48,0.041,49,0.041,52,2.064,132,2.362,263,2.736,497,3.237,625,2.362,719,3.237,787,3.862,1107,3.998]],["title/miscellaneous/typealiases.html",[1053,1.07,1108,3.37]],["body/miscellaneous/typealiases.html",[7,0.045,15,0.222,29,1.504,48,0.042,49,0.042,54,0.455,62,0.554,243,2.192,439,2.907,467,4.002,1053,1.928,1109,4.247,1110,4.247,1111,4.247]],["title/miscellaneous/variables.html",[1053,1.07,1112,2.729]],["body/miscellaneous/variables.html",[7,0.049,15,0.229,30,1.442,48,0.038,49,0.038,53,2.126,54,0.385,62,0.469,65,3.061,66,2.914,67,2.914,68,2.914,69,2.914,70,2.914,86,0.869,141,2.309,142,2.03,238,2.126,245,3.331,264,3.061,279,3.622,298,3.061,299,3.622,300,3.622,301,2.914,302,3.622,303,3.622,304,3.622,305,2.914,1053,1.633,1056,2.914,1112,2.914,1113,3.598]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":343,"title":{},"body":{"injectables/TestSessionService.html":{},"coverage.html":{}}}],["0/1",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":497,"title":{},"body":{"classes/WebsocketGateway.html":{},"overview.html":{}}}],["1.5.0",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["10.0.0",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["10h",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["11.0.0",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["11.1.0",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["11.2.0",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["11.6.0",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["12.0.0",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["12.0.1",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["12.1.0",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["12.1.1",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["12.2.2",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["12.2.3",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["1234567891",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["13.0.11",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":787,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2.0",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":719,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["30min",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["324",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["335",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["340",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["341",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["347",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["4.0.0",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["400",{"_index":123,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["5",{"_index":1107,"title":{},"body":{"overview.html":{}}}],["5.0.3",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["500",{"_index":171,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["6.0.0",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["6.1.0",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["7.0.0",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["7.4",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["7.4.0",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["8.0.0",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["9.0.0",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["9.1.0",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["9.2.0",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["__my_content__",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["__my_key__",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["a.indexof(v",{"_index":352,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["actually",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["added",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["addmonitor",{"_index":266,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["addmonitor(monitor",{"_index":275,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["adds",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["addsessionchange",{"_index":267,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["addsessionchange(sessionchange",{"_index":277,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["addtestee",{"_index":394,"title":{},"body":{"injectables/TesteeService.html":{}}}],["addtestee(testee",{"_index":402,"title":{},"body":{"injectables/TesteeService.html":{}}}],["admin",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["affect",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["alias",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["alias/{alias",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1109,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all\":\"{\\\"key",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["allmonitors",{"_index":347,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["allow",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["allow_player_to_terminate_test",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["allowed",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["allowexternalxmlschema",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["allows",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["alltestsessions",{"_index":356,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["alltestsessions.concat(object.values(grouptestsessions",{"_index":358,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["already",{"_index":321,"title":{},"body":{"injectables/TestSessionService.html":{},"changelog.html":{}}}],["alternative",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["although",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["always",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["analogous",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["angular",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["anymore.syscheck",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["anymore.unit",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["anyway",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["anywhere",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["apart",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["api",{"_index":839,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["app_filter",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":1074,"title":{},"body":{"index.html":{}}}],["apply",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["applysessionchange",{"_index":268,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["applysessionchange(sessionchange",{"_index":280,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arg",{"_index":85,"title":{},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"interfaces/Testee.html":{},"miscellaneous/functions.html":{}}}],["arg.arguments",{"_index":90,"title":{},"body":{"interfaces/Command.html":{}}}],["arg.groups",{"_index":179,"title":{},"body":{"interfaces/Monitor.html":{}}}],["arg.id",{"_index":89,"title":{},"body":{"interfaces/Command.html":{}}}],["arg.keyword",{"_index":87,"title":{},"body":{"interfaces/Command.html":{}}}],["arg.testid",{"_index":366,"title":{},"body":{"interfaces/Testee.html":{}}}],["arg.token",{"_index":178,"title":{},"body":{"interfaces/Monitor.html":{},"interfaces/Testee.html":{}}}],["arguments",{"_index":56,"title":{},"body":{"interfaces/Command.html":{}}}],["argumentshost",{"_index":147,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["around",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["arr",{"_index":493,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["arr[arr.length",{"_index":496,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["array.isarray(request.body.testids",{"_index":125,"title":{},"body":{"controllers/CommandController.html":{}}}],["ask",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["attributeendpoints",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["auth_token}/resource/{resource_name",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["backed",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":541,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bar",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["baseexceptionfilter",{"_index":136,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["before",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["beginning",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["behaviorsubject",{"_index":455,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["behaviorsubject(0",{"_index":459,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["behaviorsubject(null",{"_index":456,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["behaviour",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["below",{"_index":1071,"title":{},"body":{"index.html":{}}}],["berlin/testcenter",{"_index":897,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["between",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["big",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["block",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":208,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/TesteeController.html":{}}}],["bogus",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["boms",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["booklet",{"_index":726,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["booklet.xml",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["booklet.xsd",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["boolean",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["bootstrap",{"_index":1049,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["broadcastcommandtotestees",{"_index":395,"title":{},"body":{"injectables/TesteeService.html":{}}}],["broadcastcommandtotestees(command",{"_index":404,"title":{},"body":{"injectables/TesteeService.html":{}}}],["broadcasting",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["broadcastingevent",{"_index":467,"title":{},"body":{"classes/WebsocketGateway.html":{},"miscellaneous/typealiases.html":{}}}],["broadcastserviceuri",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["broadcastserviceuripush",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["broadcastserviceurisubscribe",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["broadcasttestsessionstogroupmonitors",{"_index":269,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["broadcasttestsessionstogroupmonitors(groupname",{"_index":282,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["broadcasttoregistered",{"_index":448,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["broadcasttoregistered(tokens",{"_index":465,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["browse",{"_index":1106,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":858,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["bug",{"_index":532,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bugfixes",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["caching",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":137,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["catch(exception",{"_index":145,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["certain",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":248,"title":{},"body":{"controllers/TestSessionController.html":{},"changelog.html":{}}}],["change.interface",{"_index":254,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{}}}],["changed",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":524,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1062,"title":{},"body":{"index.html":{}}}],["check",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["check/reports",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["checks",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["chunk",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["chunkwise",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["class",{"_index":47,"title":{"classes/ErrorHandler.html":{},"classes/WebsocketGateway.html":{}},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"coverage.html":{}}}],["classes",{"_index":132,"title":{},"body":{"classes/ErrorHandler.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"overview.html":{}}}],["clean",{"_index":217,"title":{},"body":{"controllers/SystemController.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}}}],["client",{"_index":476,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["client.count",{"_index":520,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["clientlost",{"_index":445,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["clients",{"_index":181,"title":{},"body":{"controllers/MonitorController.html":{},"classes/WebsocketGateway.html":{}}}],["clients(@req",{"_index":214,"title":{},"body":{"controllers/MonitorController.html":{}}}],["clients(request",{"_index":185,"title":{},"body":{"controllers/MonitorController.html":{}}}],["clientscount",{"_index":446,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["closing",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["codes",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["command",{"_index":51,"title":{"interfaces/Command.html":{}},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"injectables/TesteeService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["command.interface",{"_index":111,"title":{},"body":{"controllers/CommandController.html":{}}}],["command/command.controller",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["command/command.interface",{"_index":416,"title":{},"body":{"injectables/TesteeService.html":{}}}],["commandcontroller",{"_index":21,"title":{"controllers/CommandController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"coverage.html":{}}}],["commandkeywords",{"_index":65,"title":{},"body":{"interfaces/Command.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commandkeywords)[number",{"_index":72,"title":{},"body":{"interfaces/Command.html":{}}}],["commands",{"_index":439,"title":{},"body":{"injectables/TesteeService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["common/error",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["common/interfaces/test",{"_index":252,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{}}}],["common/websocket.gateway",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"controllers/SystemController.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}}}],["compatible",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["completely",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["completeness",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":1100,"title":{},"body":{"index.html":{}}}],["concat(object.values(groupmonitors",{"_index":350,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["config",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["config/system.json",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":1088,"title":{},"body":{"index.html":{}}}],["connected",{"_index":502,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["connection",{"_index":426,"title":{},"body":{"injectables/TesteeService.html":{},"changelog.html":{}}}],["consistency",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["const",{"_index":64,"title":{},"body":{"interfaces/Command.html":{},"classes/ErrorHandler.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["constellations",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["constructor",{"_index":112,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{}}}],["constructor(eventsgateway",{"_index":138,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["constructor(websocketgateway",{"_index":273,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}}}],["contain",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["contains",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["content",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["contents",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["contenttype('text",{"_index":169,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["context",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":91,"title":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{},"coverage.html":{}}}],["controllers",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{},"overview.html":{}}}],["correct",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["correctly",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["count",{"_index":521,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["coverage",{"_index":1037,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["credentials.database",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["critical",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["csv",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["csvs",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":154,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["ctx.getresponse",{"_index":156,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["current",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["currently",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["customizable",{"_index":1089,"title":{},"body":{"index.html":{}}}],["customization",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["customtexts",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["customziation",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":122,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{}}}],["data/player",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["database",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["dataloss",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["dataparts",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["dataservice",{"_index":199,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{}}}],["db",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["debouncing",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":70,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":97,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{},"classes/WebsocketGateway.html":{}}}],["deeper",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":141,"title":{},"body":{"classes/ErrorHandler.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["defined",{"_index":99,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{}}}],["defines",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["defintion",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["defunct",{"_index":534,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":341,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["demand",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["demo",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["depending",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["developer's",{"_index":1098,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1096,"title":{},"body":{"index.html":{}}}],["development",{"_index":1097,"title":{},"body":{"index.html":{}}}],["didn't",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["different",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["directdownloadurl",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":233,"title":{},"body":{"controllers/SystemController.html":{},"injectables/TestSessionService.html":{}}}],["disconnectall",{"_index":449,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["disconnectclient",{"_index":450,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["disconnectclient(monitortoken",{"_index":470,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["disconnected",{"_index":506,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["disconnectedtoken",{"_index":503,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["disconnectnotificationuri",{"_index":364,"title":{},"body":{"interfaces/Testee.html":{},"injectables/TesteeService.html":{}}}],["display",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["displayed",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1103,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1081,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1038,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["done",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["dont't",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":495,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["each",{"_index":74,"title":{},"body":{"interfaces/Command.html":{}}}],["eager",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["edited",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["eg",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["elements",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["endpoint",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["endpoints",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["enter",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["entered",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["entering",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["era",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["error",{"_index":429,"title":{},"body":{"injectables/TesteeService.html":{},"changelog.html":{}}}],["error.message",{"_index":432,"title":{},"body":{"injectables/TesteeService.html":{}}}],["errorhandler",{"_index":36,"title":{"classes/ErrorHandler.html":{}},"body":{"modules/AppModule.html":{},"classes/ErrorHandler.html":{},"coverage.html":{}}}],["escape",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["eslint",{"_index":232,"title":{},"body":{"controllers/SystemController.html":{},"injectables/TestSessionService.html":{}}}],["especially",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["even",{"_index":80,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{}}}],["event",{"_index":466,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["eventsgateway",{"_index":140,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["everything",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["everytime",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["everywhere",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["exception",{"_index":149,"title":{},"body":{"classes/ErrorHandler.html":{},"changelog.html":{}}}],["exception.message",{"_index":166,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["exception.status",{"_index":159,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["execution",{"_index":1087,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["existing",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["expect",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["express",{"_index":109,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["extended",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["extends",{"_index":135,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["external",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["fall",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["fast",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["fetch",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["fetching",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{}}}],["file's",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["filter((v",{"_index":351,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["filter(testee",{"_index":435,"title":{},"body":{"injectables/TesteeService.html":{}}}],["first",{"_index":315,"title":{},"body":{"injectables/TestSessionService.html":{},"changelog.html":{}}}],["fix",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":965,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["font",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["forbids",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["force",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["force_presentation_complete",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["force_response_complete",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["formally",{"_index":326,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["format",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["forwards",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["four",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["frist",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["front",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["frontend",{"_index":536,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["frontend.xml",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["frontend/issues/261",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":83,"title":{},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"interfaces/Testee.html":{},"classes/WebsocketGateway.html":{},"coverage.html":{}}}],["functionality",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":963,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["future",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["g",{"_index":349,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["galore",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":1060,"title":{},"body":{"index.html":{}}}],["generic",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["get('')@httpcode(200",{"_index":221,"title":{},"body":{"controllers/SystemController.html":{}}}],["get('/clients",{"_index":186,"title":{},"body":{"controllers/MonitorController.html":{}}}],["get('/monitors",{"_index":192,"title":{},"body":{"controllers/MonitorController.html":{}}}],["get('/test",{"_index":242,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["get('/testees",{"_index":375,"title":{},"body":{"controllers/TesteeController.html":{}}}],["getclienttokens",{"_index":270,"title":{},"body":{"injectables/TestSessionService.html":{},"classes/WebsocketGateway.html":{}}}],["getdisconnectionobservable",{"_index":451,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["getlasturlpart",{"_index":1047,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getlasturlpart(message.url",{"_index":498,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["getlasturlpart(url",{"_index":492,"title":{},"body":{"classes/WebsocketGateway.html":{},"miscellaneous/functions.html":{}}}],["getmonitors",{"_index":271,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["gets",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["gettestees",{"_index":396,"title":{},"body":{"injectables/TesteeService.html":{}}}],["gettestsessions",{"_index":240,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{}}}],["getting",{"_index":522,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["given",{"_index":128,"title":{},"body":{"controllers/CommandController.html":{}}}],["go",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["goal",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["goto",{"_index":67,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":308,"title":{},"body":{"injectables/TestSessionService.html":{},"changelog.html":{}}}],["groupmonitors",{"_index":348,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["groupname",{"_index":284,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["groups",{"_index":175,"title":{},"body":{"interfaces/Monitor.html":{}}}],["grouptestsessions",{"_index":357,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["guide",{"_index":1099,"title":{},"body":{"index.html":{}}}],["handle",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["handleconnection",{"_index":452,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["handleconnection(client",{"_index":475,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["handledisconnect",{"_index":453,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["handledisconnect(client",{"_index":479,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["handler",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.ts",{"_index":134,"title":{},"body":{"classes/ErrorHandler.html":{},"coverage.html":{}}}],["handler.ts:17",{"_index":144,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["handler.ts:19",{"_index":148,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["handler.ts:9",{"_index":139,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["handling",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["handy",{"_index":1075,"title":{},"body":{"index.html":{}}}],["hence",{"_index":318,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["here",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["hindering",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["hint",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":146,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["host.switchtohttp",{"_index":155,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["hosters",{"_index":1092,"title":{},"body":{"index.html":{}}}],["hotfix",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["http",{"_index":399,"title":{},"body":{"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"index.html":{}}}],["httpcode",{"_index":223,"title":{},"body":{"controllers/SystemController.html":{}}}],["httpcode(200",{"_index":231,"title":{},"body":{"controllers/SystemController.html":{}}}],["httpexception",{"_index":105,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["httpexception('invalid",{"_index":121,"title":{},"body":{"controllers/CommandController.html":{}}}],["httpexception('no",{"_index":126,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TesteeController.html":{}}}],["httpexception('not",{"_index":203,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["httpmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/iqb",{"_index":896,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["httpservice",{"_index":400,"title":{},"body":{"injectables/TesteeService.html":{}}}],["httpstatus",{"_index":150,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.bad_request",{"_index":164,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.expectation_failed",{"_index":163,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.internal_server_error",{"_index":158,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.not_acceptable",{"_index":162,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.not_found",{"_index":160,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.service_unavailable",{"_index":161,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["icons",{"_index":1084,"title":{},"body":{"index.html":{}}}],["id",{"_index":57,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{}}}],["identifier",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["iframe",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":442,"title":{},"body":{"classes/WebsocketGateway.html":{},"changelog.html":{}}}],["import",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["improved",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["improvement",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["incomingmessage",{"_index":477,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["index",{"_index":54,"title":{"index.html":{}},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["information",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["init/install",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["injectable",{"_index":262,"title":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"coverage.html":{}}}],["injectables",{"_index":263,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"overview.html":{}}}],["insert",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":1072,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1093,"title":{},"body":{"index.html":{}}}],["installations",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["instead",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":1070,"title":{},"body":{"index.html":{}}}],["interface",{"_index":50,"title":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"interfaces/Testee.html":{}},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"interfaces/Testee.html":{},"changelog.html":{},"coverage.html":{}}}],["interfaces",{"_index":52,"title":{},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"interfaces/Testee.html":{},"classes/WebsocketGateway.html":{},"overview.html":{}}}],["introduced",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["iqb",{"_index":1069,"title":{},"body":{"index.html":{}}}],["iscommand",{"_index":110,"title":{},"body":{"controllers/CommandController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["iscommand(arg",{"_index":84,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/functions.html":{}}}],["iscommand(request.body.command",{"_index":119,"title":{},"body":{"controllers/CommandController.html":{}}}],["ismonitor",{"_index":197,"title":{},"body":{"controllers/MonitorController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ismonitor(arg",{"_index":177,"title":{},"body":{"interfaces/Monitor.html":{},"miscellaneous/functions.html":{}}}],["ismonitor(request.body",{"_index":202,"title":{},"body":{"controllers/MonitorController.html":{}}}],["issessionchange",{"_index":250,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["issessionchange(request.body",{"_index":257,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["issues",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["istestee",{"_index":381,"title":{},"body":{"controllers/TesteeController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istestee(arg",{"_index":365,"title":{},"body":{"interfaces/Testee.html":{},"miscellaneous/functions.html":{}}}],["istestee(request.body",{"_index":385,"title":{},"body":{"controllers/TesteeController.html":{}}}],["it's",{"_index":752,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["items",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["itself",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["json.stringify",{"_index":508,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["json.stringify(request.body",{"_index":259,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["keep",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["keyword",{"_index":58,"title":{},"body":{"interfaces/Command.html":{}}}],["known",{"_index":322,"title":{},"body":{"injectables/TestSessionService.html":{},"changelog.html":{}}}],["label",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["labels",{"_index":1090,"title":{},"body":{"index.html":{}}}],["landing",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["leaving",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["led",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["legal",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["len",{"_index":355,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["limbo",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":235,"title":{},"body":{"controllers/SystemController.html":{},"injectables/TestSessionService.html":{}}}],["links",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["list",{"_index":1085,"title":{},"body":{"index.html":{}}}],["lite",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":294,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["live",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["loaded",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["lock_test_on_termination",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["locked",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["logger",{"_index":106,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["logger(commandcontroller.name",{"_index":116,"title":{},"body":{"controllers/CommandController.html":{}}}],["logger(errorhandler.name",{"_index":143,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["logger(monitorcontroller.name",{"_index":200,"title":{},"body":{"controllers/MonitorController.html":{}}}],["logger(systemcontroller.name",{"_index":225,"title":{},"body":{"controllers/SystemController.html":{}}}],["logger(testeecontroller.name",{"_index":383,"title":{},"body":{"controllers/TesteeController.html":{}}}],["logger(testeeservice.name",{"_index":413,"title":{},"body":{"injectables/TesteeService.html":{}}}],["logger(testsessioncontroller.name",{"_index":255,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["logger(testsessionservice.name",{"_index":292,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["logger(websocketgateway.name",{"_index":461,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["login",{"_index":551,"title":{},"body":{"changelog.html":{}}}],["logins",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["logs",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["lost",{"_index":427,"title":{},"body":{"injectables/TesteeService.html":{},"changelog.html":{}}}],["made",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["main",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["maintain",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":75,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{}}}],["makes",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["management",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["mandatory",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["manipulate",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":879,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["map",{"_index":489,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["map(testee",{"_index":437,"title":{},"body":{"injectables/TesteeService.html":{}}}],["massive",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":354,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["mergesessionchanges",{"_index":298,"title":{},"body":{"injectables/TestSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mergesessionchanges(testsession",{"_index":325,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["message",{"_index":165,"title":{},"body":{"classes/ErrorHandler.html":{},"classes/WebsocketGateway.html":{}}}],["messagebody",{"_index":484,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["metadata",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":93,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["migrated",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["migration",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["minutes",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["misc",{"_index":1102,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1053,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":82,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{}}}],["modes",{"_index":1086,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"changelog.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["moment",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["monitor",{"_index":173,"title":{"interfaces/Monitor.html":{}},"body":{"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"injectables/TestSessionService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["monitor.groups.foreach((group",{"_index":335,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["monitor.interface",{"_index":198,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitor/group/{group_name}/tests/unlock",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["monitor/monitor.controller",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["monitor/monitor.interface",{"_index":297,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["monitorcontroller",{"_index":20,"title":{"controllers/MonitorController.html":{}},"body":{"modules/AppModule.html":{},"controllers/MonitorController.html":{},"coverage.html":{}}}],["monitored",{"_index":319,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["monitorregister",{"_index":182,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitorregister(@req",{"_index":201,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitorregister(request",{"_index":188,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitors",{"_index":183,"title":{},"body":{"controllers/MonitorController.html":{},"injectables/TestSessionService.html":{}}}],["monitors(@req",{"_index":212,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitors(request",{"_index":191,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitortoken",{"_index":291,"title":{},"body":{"injectables/TestSessionService.html":{},"classes/WebsocketGateway.html":{}}}],["monitorunregister",{"_index":184,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitorunregister(@req",{"_index":207,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitorunregister(request",{"_index":194,"title":{},"body":{"controllers/MonitorController.html":{}}}],["more",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":102,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["navigation",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["navigational",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["navigationleaverestrictions",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":323,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["nestjs/core",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorHandler.html":{}}}],["nestjs/websockets",{"_index":487,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["never",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":115,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{}}}],["newer",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":234,"title":{},"body":{"controllers/SystemController.html":{},"injectables/TestSessionService.html":{},"changelog.html":{},"index.html":{}}}],["nonamespaceschemalocation",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["noteworthy",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["notify",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["notifydisconnection",{"_index":397,"title":{},"body":{"injectables/TesteeService.html":{}}}],["notifydisconnection(testeetoken",{"_index":408,"title":{},"body":{"injectables/TesteeService.html":{}}}],["now",{"_index":555,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["now.config",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["number",{"_index":63,"title":{},"body":{"interfaces/Command.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{}}}],["numbers",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["object.keys(this.clients",{"_index":517,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["object.keys(this.clients).foreach((token",{"_index":504,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["object.keys(this.monitors).foreach((group",{"_index":339,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["object.keys(this.monitors[group]).length",{"_index":342,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["object.keys(this.monitors[groupname",{"_index":331,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["object.values(this.monitors",{"_index":345,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["object.values(this.testees",{"_index":422,"title":{},"body":{"injectables/TesteeService.html":{}}}],["object.values(this.testsessions",{"_index":353,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["object.values(this.testsessions[groupname",{"_index":333,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["observable",{"_index":474,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["obtain",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["oder",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["ofunits",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["older",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["once",{"_index":79,"title":{},"body":{"interfaces/Command.html":{}}}],["one",{"_index":77,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{}}}],["ones",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["ongatewayconnection",{"_index":443,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["ongatewaydisconnect",{"_index":444,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["optional",{"_index":59,"title":{},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["otherwise",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["out",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["output",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":625,"title":{"overview.html":{}},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["page",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["paradigm",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["parameter",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":101,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["paremater",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["part",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["patch",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["patching",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["pause",{"_index":66,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":507,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["performance",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["performed",{"_index":78,"title":{},"body":{"interfaces/Command.html":{}}}],["php",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["player",{"_index":628,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["player's",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["players",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":1066,"title":{},"body":{"index.html":{}}}],["polling",{"_index":81,"title":{},"body":{"interfaces/Command.html":{}}}],["possible",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["post",{"_index":107,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{},"changelog.html":{}}}],["post('/command",{"_index":98,"title":{},"body":{"controllers/CommandController.html":{}}}],["post('/monitor/register",{"_index":189,"title":{},"body":{"controllers/MonitorController.html":{}}}],["post('/monitor/unregister",{"_index":195,"title":{},"body":{"controllers/MonitorController.html":{}}}],["post('/push/session",{"_index":247,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["post('/system/clean",{"_index":219,"title":{},"body":{"controllers/SystemController.html":{}}}],["post('/testee/register",{"_index":372,"title":{},"body":{"controllers/TesteeController.html":{}}}],["post('/testee/unregister",{"_index":378,"title":{},"body":{"controllers/TesteeController.html":{}}}],["postcommand",{"_index":94,"title":{},"body":{"controllers/CommandController.html":{}}}],["postcommand(@req",{"_index":117,"title":{},"body":{"controllers/CommandController.html":{}}}],["postcommand(request",{"_index":95,"title":{},"body":{"controllers/CommandController.html":{}}}],["presentation",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":113,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["proceed",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["program",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["progress",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":55,"title":{},"body":{"interfaces/Command.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["provide",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":17,"title":{},"body":{"modules/AppModule.html":{}}}],["provides",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["pushsessionchange",{"_index":241,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["pushsessionchange(@req",{"_index":256,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["pushsessionchange(request",{"_index":246,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["put",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["readable",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":114,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["ready",{"_index":1065,"title":{},"body":{"index.html":{}}}],["redesign",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":346,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["refactoring",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["refactors",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":1067,"title":{},"body":{"index.html":{}}}],["reference",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["regardless",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["registered:${json.stringify(request.body",{"_index":205,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/TesteeController.html":{}}}],["relaod/re",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["reload",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["remaining",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["remainsbooklet",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["removed",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["removemonitor",{"_index":272,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["removemonitor(monitortoken",{"_index":289,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["removetestee",{"_index":398,"title":{},"body":{"injectables/TesteeService.html":{}}}],["removetestee(testeetoken",{"_index":411,"title":{},"body":{"injectables/TesteeService.html":{}}}],["renamed",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["repaired",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["reports",{"_index":808,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["repository",{"_index":1061,"title":{},"body":{"index.html":{}}}],["req",{"_index":108,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["request",{"_index":96,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["request.body",{"_index":130,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TesteeController.html":{}}}],["request.body.command",{"_index":118,"title":{},"body":{"controllers/CommandController.html":{}}}],["request.body.testids",{"_index":124,"title":{},"body":{"controllers/CommandController.html":{}}}],["requiredendpoints",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["requirements",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["resemble",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resources",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["responded",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["response",{"_index":151,"title":{},"body":{"classes/ErrorHandler.html":{},"changelog.html":{}}}],["responses",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["rest",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["restore",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["restore_current_page_on_return",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["restored",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["results",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":69,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["retrieved",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["retrieving",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["return",{"_index":86,"title":{},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["returns",{"_index":103,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"miscellaneous/functions.html":{}}}],["reviews",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["rid",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":1063,"title":{},"body":{"index.html":{}}}],["roboto",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["role",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":218,"title":{},"body":{"controllers/SystemController.html":{}}}],["run",{"_index":972,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["running",{"_index":1083,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":488,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["rxjs/operators",{"_index":490,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["sample",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["sandboxing",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["schema/patches.mysql.d/11.0.0",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["schema/patches.mysql.d/11.1.0",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["schema/patches.mysql.d/12.0.0",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["schema/patches.mysql.sql",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["schemas",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["scripts/sql",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["sdh",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["second",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["seen",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":431,"title":{},"body":{"injectables/TesteeService.html":{}}}],["send(message",{"_index":170,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["sense",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":447,"title":{},"body":{"classes/WebsocketGateway.html":{},"index.html":{}}}],["server's",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":859,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["service/.../command.interface.ts",{"_index":1056,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/.../interfaces.ts",{"_index":1110,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["service/.../main.ts",{"_index":1054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/.../monitor.interface.ts",{"_index":1057,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/.../test",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service/.../testee.interface.ts",{"_index":1058,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/.../websocket.gateway.ts",{"_index":1055,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/src/app.module.ts",{"_index":16,"title":{},"body":{"modules/AppModule.html":{}}}],["service/src/command/command.controller.ts",{"_index":92,"title":{},"body":{"controllers/CommandController.html":{},"coverage.html":{}}}],["service/src/command/command.controller.ts:17",{"_index":100,"title":{},"body":{"controllers/CommandController.html":{}}}],["service/src/command/command.interface.ts",{"_index":53,"title":{},"body":{"interfaces/Command.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/src/common/error",{"_index":133,"title":{},"body":{"classes/ErrorHandler.html":{},"coverage.html":{}}}],["service/src/common/interfaces.ts",{"_index":1111,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["service/src/common/websocket.gateway.ts",{"_index":441,"title":{},"body":{"classes/WebsocketGateway.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["service/src/common/websocket.gateway.ts:22",{"_index":462,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:25",{"_index":464,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:27",{"_index":458,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:28",{"_index":460,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:29",{"_index":457,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:31",{"_index":478,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:39",{"_index":480,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:55",{"_index":468,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:66",{"_index":471,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:74",{"_index":469,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:80",{"_index":473,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:84",{"_index":472,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:89",{"_index":483,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/main.ts",{"_index":1048,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["service/src/monitor/monitor.controller.ts",{"_index":180,"title":{},"body":{"controllers/MonitorController.html":{},"coverage.html":{}}}],["service/src/monitor/monitor.controller.ts:17",{"_index":190,"title":{},"body":{"controllers/MonitorController.html":{}}}],["service/src/monitor/monitor.controller.ts:27",{"_index":196,"title":{},"body":{"controllers/MonitorController.html":{}}}],["service/src/monitor/monitor.controller.ts:37",{"_index":193,"title":{},"body":{"controllers/MonitorController.html":{}}}],["service/src/monitor/monitor.controller.ts:42",{"_index":187,"title":{},"body":{"controllers/MonitorController.html":{}}}],["service/src/monitor/monitor.interface.ts",{"_index":174,"title":{},"body":{"interfaces/Monitor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["service/src/system/system.controller.ts",{"_index":216,"title":{},"body":{"controllers/SystemController.html":{},"coverage.html":{}}}],["service/src/system/system.controller.ts:19",{"_index":220,"title":{},"body":{"controllers/SystemController.html":{}}}],["service/src/system/system.controller.ts:29",{"_index":222,"title":{},"body":{"controllers/SystemController.html":{}}}],["service/src/test",{"_index":238,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["service/src/testee/testee.controller.ts",{"_index":367,"title":{},"body":{"controllers/TesteeController.html":{},"coverage.html":{}}}],["service/src/testee/testee.controller.ts:18",{"_index":373,"title":{},"body":{"controllers/TesteeController.html":{}}}],["service/src/testee/testee.controller.ts:28",{"_index":379,"title":{},"body":{"controllers/TesteeController.html":{}}}],["service/src/testee/testee.controller.ts:38",{"_index":376,"title":{},"body":{"controllers/TesteeController.html":{}}}],["service/src/testee/testee.interface.ts",{"_index":363,"title":{},"body":{"interfaces/Testee.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["service/src/testee/testee.service.ts",{"_index":393,"title":{},"body":{"injectables/TesteeService.html":{},"coverage.html":{}}}],["service/src/testee/testee.service.ts:18",{"_index":414,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:20",{"_index":415,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:22",{"_index":403,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:26",{"_index":412,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:36",{"_index":407,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:40",{"_index":409,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:57",{"_index":405,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:69",{"_index":406,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:7",{"_index":401,"title":{},"body":{"injectables/TesteeService.html":{}}}],["services",{"_index":1078,"title":{},"body":{"index.html":{}}}],["session",{"_index":253,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{}}}],["session.controller",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["session.controller.ts",{"_index":239,"title":{},"body":{"controllers/TestSessionController.html":{},"coverage.html":{}}}],["session.controller.ts:17",{"_index":249,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["session.controller.ts:27",{"_index":244,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["session.service",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{}}}],["session.service.ts",{"_index":264,"title":{},"body":{"injectables/TestSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["session.service.ts:105",{"_index":287,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:114",{"_index":288,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:122",{"_index":286,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:126",{"_index":285,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:18",{"_index":274,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:27",{"_index":293,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:29",{"_index":296,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:35",{"_index":295,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:41",{"_index":281,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:46",{"_index":278,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:66",{"_index":283,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:77",{"_index":276,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:89",{"_index":290,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session/test",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sessionchange",{"_index":279,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["sessionchange.groupname",{"_index":312,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["sessionchange.testid",{"_index":314,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["sessionchange.teststate",{"_index":304,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["sessionchange.unitname",{"_index":300,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["sessionchange.unitstate",{"_index":303,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["sessionid",{"_index":309,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["sessions",{"_index":243,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["set",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["setup",{"_index":1068,"title":{},"body":{"index.html":{}}}],["shall",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["shooting",{"_index":1095,"title":{},"body":{"index.html":{}}}],["show",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["show_end_button_in_player",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["showtimeleft",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["signal",{"_index":428,"title":{},"body":{"injectables/TesteeService.html":{}}}],["significantly",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["special",{"_index":1080,"title":{},"body":{"index.html":{}}}],["specific",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["specs",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1076,"title":{},"body":{"index.html":{}}}],["started",{"_index":523,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["starter",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["state",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["statements",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["statereportpolicy",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["states",{"_index":1082,"title":{},"body":{"index.html":{}}}],["status",{"_index":157,"title":{},"body":{"classes/ErrorHandler.html":{},"changelog.html":{}}}],["status(status",{"_index":168,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["still",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["stop",{"_index":1077,"title":{},"body":{"index.html":{}}}],["store",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["stored",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":61,"title":{},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"miscellaneous/functions.html":{}}}],["stringified",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["structure",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["study",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["subscribeclientcount",{"_index":454,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["subscribeclientcount(@messagebody",{"_index":518,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["subscribeclientcount(data",{"_index":481,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["subscribemessage",{"_index":485,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["subscribemessage('subscribe:client.count",{"_index":482,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["super",{"_index":153,"title":{},"body":{"classes/ErrorHandler.html":{},"index.html":{}}}],["support",{"_index":1104,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["supporting",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["sure",{"_index":76,"title":{},"body":{"interfaces/Command.html":{}}}],["svg",{"_index":1105,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["sys",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":227,"title":{},"body":{"controllers/SystemController.html":{}}}],["system/config",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["system/config/app",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["system/config/custom",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["system/system.controller",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["system/time",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["systemcontroller",{"_index":23,"title":{"controllers/SystemController.html":{}},"body":{"modules/AppModule.html":{},"controllers/SystemController.html":{},"coverage.html":{}}}],["table",{"_index":703,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["teh",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["tells",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["terminate",{"_index":68,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/variables.html":{}}}],["terminated",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["test/{test_id}/connection",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["test\\{test_id}\\log",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["test\\{test_id}\\state",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["test\\{test_id}\\unit\\{unit_name}\\logwere",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["test\\{test_id}\\unit\\{unit_name}\\state",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["test_data",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["testcenter",{"_index":251,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"changelog.html":{},"index.html":{}}}],["testcontroller",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["testee",{"_index":362,"title":{"interfaces/Testee.html":{}},"body":{"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["testee.interface",{"_index":382,"title":{},"body":{"controllers/TesteeController.html":{},"injectables/TesteeService.html":{}}}],["testee.service",{"_index":380,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testee.testid",{"_index":436,"title":{},"body":{"injectables/TesteeService.html":{}}}],["testee.token",{"_index":438,"title":{},"body":{"injectables/TesteeService.html":{}}}],["testee/testee.controller",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["testee/testee.service",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"controllers/SystemController.html":{}}}],["testeecontroller",{"_index":22,"title":{"controllers/TesteeController.html":{}},"body":{"modules/AppModule.html":{},"controllers/TesteeController.html":{},"coverage.html":{}}}],["testeeregister",{"_index":368,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testeeregister(@req",{"_index":384,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testeeregister(request",{"_index":371,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testees",{"_index":369,"title":{},"body":{"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"changelog.html":{}}}],["testees(@req",{"_index":391,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testees(request",{"_index":374,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testeeservice",{"_index":8,"title":{"injectables/TesteeService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"controllers/SystemController.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"coverage.html":{},"overview.html":{}}}],["testeetoken",{"_index":410,"title":{},"body":{"injectables/TesteeService.html":{}}}],["testeeunregister",{"_index":370,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testeeunregister(@req",{"_index":388,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testeeunregister(request",{"_index":377,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testid",{"_index":313,"title":{},"body":{"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"injectables/TesteeService.html":{}}}],["testids",{"_index":127,"title":{},"body":{"controllers/CommandController.html":{},"injectables/TesteeService.html":{}}}],["testids.foreach((testid",{"_index":433,"title":{},"body":{"injectables/TesteeService.html":{}}}],["testlet",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["testlets",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["tests",{"_index":705,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["testsession",{"_index":299,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["testsession.teststate",{"_index":305,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["testsession.unitname",{"_index":301,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["testsession.unitstate",{"_index":302,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["testsessionchange",{"_index":245,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["testsessioncontroller",{"_index":19,"title":{"controllers/TestSessionController.html":{}},"body":{"modules/AppModule.html":{},"controllers/TestSessionController.html":{},"coverage.html":{}}}],["testsessions",{"_index":265,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["testsessionservice",{"_index":6,"title":{"injectables/TestSessionService.html":{}},"body":{"modules/AppModule.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"coverage.html":{},"overview.html":{}}}],["teststudio",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["testtakers",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["tets",{"_index":1101,"title":{},"body":{"index.html":{}}}],["texts",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["thing",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["this.addsessionchange(sessionchange",{"_index":310,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.broadcasttestsessionstogroupmonitors(sessionchange.groupname",{"_index":311,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.clientlost$.asobservable",{"_index":516,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clientlost$.next(disconnectedtoken",{"_index":505,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clients[monitortoken",{"_index":512,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clients[monitortoken].close",{"_index":514,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clients[token",{"_index":499,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clients[token].send(payload",{"_index":511,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clientscount$.next(object.values(this.clients).length",{"_index":500,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clientscount$.pipe(map((count",{"_index":519,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.dataservice.addmonitor(request.body",{"_index":206,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.dataservice.applysessionchange(request.body",{"_index":260,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["this.dataservice.clean",{"_index":229,"title":{},"body":{"controllers/SystemController.html":{}}}],["this.dataservice.getclienttokens",{"_index":215,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.dataservice.getmonitors",{"_index":213,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.dataservice.gettestsessions",{"_index":261,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["this.dataservice.removemonitor(request.body.token",{"_index":211,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.disconnectclient(token",{"_index":515,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.eventsgateway.disconnectall",{"_index":172,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["this.http.post(this.testees[testeetoken].disconnectnotificationuri).subscribe",{"_index":424,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.logger.error(`(${status",{"_index":167,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["this.logger.log(\"broadcasting",{"_index":329,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.logger.log(\"skipping",{"_index":317,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.logger.log('/command",{"_index":129,"title":{},"body":{"controllers/CommandController.html":{}}}],["this.logger.log('/push/session",{"_index":258,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["this.logger.log('monitor",{"_index":209,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.logger.log('ping",{"_index":237,"title":{},"body":{"controllers/SystemController.html":{}}}],["this.logger.log('testee",{"_index":389,"title":{},"body":{"controllers/TesteeController.html":{}}}],["this.logger.log(`client",{"_index":501,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.logger.log(`disconnect",{"_index":513,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.logger.log(`monitor",{"_index":204,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.logger.log(`remove",{"_index":338,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}}}],["this.logger.log(`sending",{"_index":510,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.logger.log(`sent",{"_index":425,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.logger.log(`testee",{"_index":386,"title":{},"body":{"controllers/TesteeController.html":{}}}],["this.logger.warn('clean",{"_index":226,"title":{},"body":{"controllers/SystemController.html":{}}}],["this.logger.warn(`could",{"_index":430,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.monitors",{"_index":360,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.monitors[group",{"_index":336,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.monitors[group][monitor.token",{"_index":337,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.monitors[group][monitortoken",{"_index":340,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.monitors[groupname",{"_index":328,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.notifydisconnection(disconnected",{"_index":417,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.removemonitor(disconnected",{"_index":307,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.removetestee(disconnected",{"_index":418,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.testees",{"_index":440,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.testees[testee.token",{"_index":419,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.testees[testeetoken",{"_index":420,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.testees[testeetoken].disconnectnotificationuri",{"_index":423,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.testeeservice.addtestee(request.body",{"_index":387,"title":{},"body":{"controllers/TesteeController.html":{}}}],["this.testeeservice.broadcastcommandtotestees(request.body.command",{"_index":131,"title":{},"body":{"controllers/CommandController.html":{}}}],["this.testeeservice.clean",{"_index":230,"title":{},"body":{"controllers/SystemController.html":{}}}],["this.testeeservice.gettestees",{"_index":392,"title":{},"body":{"controllers/TesteeController.html":{}}}],["this.testeeservice.removetestee(request.body.token",{"_index":390,"title":{},"body":{"controllers/TesteeController.html":{}}}],["this.testsessions",{"_index":361,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.testsessions[group",{"_index":316,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.testsessions[group][testid",{"_index":320,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.testsessions[groupname",{"_index":332,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.websocketgateway.broadcasttoregistered",{"_index":434,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.websocketgateway.broadcasttoregistered(tokens",{"_index":334,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.websocketgateway.disconnectclient(monitortoken",{"_index":344,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.websocketgateway.disconnectclient(testeetoken",{"_index":421,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.websocketgateway.getclienttokens",{"_index":359,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.websocketgateway.getdisconnectionobservable().subscribe((disconnected",{"_index":306,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}}}],["this.wsgateway.disconnectall",{"_index":228,"title":{},"body":{"controllers/SystemController.html":{}}}],["those",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":120,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["ths",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["timed",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["timeout",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["timer",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["timestamp",{"_index":60,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{}}}],["token",{"_index":176,"title":{},"body":{"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["tokens",{"_index":330,"title":{},"body":{"injectables/TestSessionService.html":{},"classes/WebsocketGateway.html":{}}}],["tokens.foreach((token",{"_index":509,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["triggered",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["trouble",{"_index":1094,"title":{},"body":{"index.html":{}}}],["true",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":62,"title":{},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1108,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":71,"title":{},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["ui",{"_index":1091,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":88,"title":{},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"interfaces/Monitor.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["under",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["unique",{"_index":73,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{}}}],["unit",{"_index":597,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["units",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":327,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["unregistered",{"_index":210,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/TesteeController.html":{}}}],["until",{"_index":1064,"title":{},"body":{"index.html":{}}}],["update",{"_index":569,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["updated",{"_index":324,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["updates",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":1059,"title":{},"body":{"miscellaneous/functions.html":{}}}],["url.split('/').filter(e",{"_index":494,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["urls",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":236,"title":{},"body":{"controllers/SystemController.html":{},"changelog.html":{}}}],["useclass",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["useful",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["user's",{"_index":1079,"title":{},"body":{"index.html":{}}}],["users",{"_index":554,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["validates",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["validation",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["validity",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":142,"title":{},"body":{"classes/ErrorHandler.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["variable",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1112,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["verona",{"_index":718,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["verona2",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["verona3",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["verona4",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["versioned",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["very",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["visible",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["visited",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":104,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["want",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["way",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["web",{"_index":1073,"title":{},"body":{"index.html":{}}}],["websocket.gateway",{"_index":152,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["websocketgateway",{"_index":33,"title":{"classes/WebsocketGateway.html":{}},"body":{"modules/AppModule.html":{},"classes/ErrorHandler.html":{},"controllers/SystemController.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"coverage.html":{}}}],["websocketserver",{"_index":463,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["well",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["well.database",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["wether",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["whatever",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["whites",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":936,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["won't",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["workspace",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["workspace/{id}/file",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["workspace/{id}/files",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["workspace/{id}/validation",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/logs",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/report/log",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/report/response",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/report/review",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/report/sys",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/responses",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/reviews",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/sys",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["workspacemonitor",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["workspaces",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["wrong",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["wrongly",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["ws",{"_index":491,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["ws_id}/booklets/started",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["ws_id}/status",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["ws_id}/tests/lock",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["ws_id}/tests/unlock",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["wsgateway",{"_index":224,"title":{},"body":{"controllers/SystemController.html":{}}}],["wsresponse",{"_index":486,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["xml",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["xsd",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["zone",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nTestSessionService\n\nTestSessionService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTestSessionService->AppModule\n\n\n\n\n\nTesteeService\n\nTesteeService\n\nAppModule -->\n\nTesteeService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            broadcasting-service/src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TestSessionService\n                        \n                        \n                            TesteeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TestSessionController\n                        \n                        \n                            MonitorController\n                        \n                        \n                            CommandController\n                        \n                        \n                            TesteeController\n                        \n                        \n                            SystemController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule, Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { TestSessionController } from './test-session/test-session.controller';\nimport { MonitorController } from './monitor/monitor.controller';\nimport { WebsocketGateway } from './common/websocket.gateway';\nimport { TestSessionService } from './test-session/test-session.service';\nimport { ErrorHandler } from './common/error-handler';\nimport { CommandController } from './command/command.controller';\nimport { TesteeController } from './testee/testee.controller';\nimport { TesteeService } from './testee/testee.service';\nimport { SystemController } from './system/system.controller';\n\n@Module({\n  controllers: [\n    TestSessionController,\n    MonitorController,\n    CommandController,\n    TesteeController,\n    SystemController\n  ],\n  providers: [\n    WebsocketGateway,\n    TestSessionService,\n    TesteeService,\n    {\n      provide: APP_FILTER,\n      useClass: ErrorHandler\n    }\n  ],\n  imports: [\n    HttpModule\n  ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Command.html":{"url":"interfaces/Command.html","title":"interface - Command","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Command\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/command/command.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            arguments\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            keyword\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arguments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arguments:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keyword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keyword:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const commandKeywords = [\n  'pause',\n  'goto',\n  'terminate',\n  'resume',\n  'debug'\n];\n\nexport interface Command {\n  keyword: (typeof commandKeywords)[number];\n  id: string; // a unique id for each command, to make sure each one get only performed once (even in polling mode)\n  arguments: string[];\n  timestamp?: number;\n}\n\nexport function isCommand(arg: any): arg is Command {\n  return (arg.keyword !== undefined) && (arg.id !== undefined) && (arg.arguments !== undefined);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CommandController.html":{"url":"controllers/CommandController.html","title":"controller - CommandController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CommandController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/command/command.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postCommand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        postCommand\n                        \n                    \n                \n            \n            \n                \npostCommand(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/command')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/command/command.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, HttpException, Logger, Post, Req\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { isCommand } from './command.interface';\nimport { TesteeService } from '../testee/testee.service';\n\n@Controller()\nexport class CommandController {\n  constructor(\n    private readonly testeeService: TesteeService\n  ) {}\n\n  private readonly logger = new Logger(CommandController.name);\n\n  @Post('/command')\n  postCommand(@Req() request: Request): void {\n    if ((typeof request.body.command === 'undefined') || !isCommand(request.body.command)) {\n      throw new HttpException('invalid command data', 400);\n    }\n\n    if ((typeof request.body.testIds === 'undefined') || !Array.isArray(request.body.testIds)) {\n      throw new HttpException('no testIds given', 400);\n    }\n\n    this.logger.log('/command', request.body);\n\n    this.testeeService.broadcastCommandToTestees(request.body.command, request.body.testIds);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorHandler.html":{"url":"classes/ErrorHandler.html","title":"class - ErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/common/error-handler.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventsGateway: WebsocketGateway)\n                    \n                \n                        \n                            \n                                Defined in broadcasting-service/src/common/error-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventsGateway\n                                                  \n                                                        \n                                                                        WebsocketGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ErrorHandler.name)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/error-handler.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/error-handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Catch, ArgumentsHost, HttpStatus, Logger\n} from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\nimport { Response } from 'express';\nimport { WebsocketGateway } from './websocket.gateway';\n\n@Catch()\nexport class ErrorHandler extends BaseExceptionFilter {\n\n  constructor(\n    private readonly eventsGateway: WebsocketGateway\n  ) {\n    super();\n  }\n\n  private readonly logger = new Logger(ErrorHandler.name);\n\n  catch(exception: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response: Response = ctx.getResponse();\n\n    let status = HttpStatus.INTERNAL_SERVER_ERROR;\n\n    if (exception.status === HttpStatus.NOT_FOUND) {\n      status = HttpStatus.NOT_FOUND;\n    }\n\n    if (exception.status === HttpStatus.SERVICE_UNAVAILABLE) {\n      status = HttpStatus.SERVICE_UNAVAILABLE;\n    }\n\n    if (exception.status === HttpStatus.NOT_ACCEPTABLE) {\n      status = HttpStatus.NOT_ACCEPTABLE;\n    }\n\n    if (exception.status === HttpStatus.EXPECTATION_FAILED) {\n      status = HttpStatus.EXPECTATION_FAILED;\n    }\n\n    if (exception.status === HttpStatus.BAD_REQUEST) {\n      status = HttpStatus.BAD_REQUEST;\n    }\n\n    const message = exception.message;\n\n    this.logger.error(`(${status}) ${message}`);\n\n    response\n      .status(status)\n      .contentType('text')\n      .send(message);\n\n    if (status >= 500) {\n      this.eventsGateway.disconnectAll();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Monitor.html":{"url":"interfaces/Monitor.html","title":"interface - Monitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Monitor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/monitor/monitor.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            groups\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groups:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Monitor {\n  token: string;\n  groups: string[]\n}\n\nexport function isMonitor(arg: any): arg is Monitor {\n  return (arg.token !== undefined) && (arg.groups !== undefined);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MonitorController.html":{"url":"controllers/MonitorController.html","title":"controller - MonitorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MonitorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/monitor/monitor.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clients\n                            \n                            \n                                monitorRegister\n                            \n                            \n                                monitors\n                            \n                            \n                                monitorUnregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clients\n                        \n                    \n                \n            \n            \n                \nclients(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/clients')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/monitor/monitor.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        monitorRegister\n                        \n                    \n                \n            \n            \n                \nmonitorRegister(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/monitor/register')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/monitor/monitor.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        monitors\n                        \n                    \n                \n            \n            \n                \nmonitors(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/monitors')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/monitor/monitor.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Monitor[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        monitorUnregister\n                        \n                    \n                \n            \n            \n                \nmonitorUnregister(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/monitor/unregister')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/monitor/monitor.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Get, HttpException, Logger, Post, Req\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { isMonitor, Monitor } from './monitor.interface';\nimport { TestSessionService } from '../test-session/test-session.service';\n\n@Controller()\nexport class MonitorController {\n  constructor(\n    private readonly dataService: TestSessionService\n  ) {}\n\n  private readonly logger = new Logger(MonitorController.name);\n\n  @Post('/monitor/register')\n  monitorRegister(@Req() request: Request): void {\n    if (!isMonitor(request.body)) {\n      throw new HttpException('not monitor data', 400);\n    }\n\n    this.logger.log(`monitor registered:${JSON.stringify(request.body)}`);\n    this.dataService.addMonitor(request.body);\n  }\n\n  @Post('/monitor/unregister')\n  monitorUnregister(@Req() request: Request): void {\n    if (!('token' in request.body)) {\n      throw new HttpException('no token in body', 400);\n    }\n\n    this.logger.log('monitor unregistered:', request.body);\n    this.dataService.removeMonitor(request.body.token);\n  }\n\n  @Get('/monitors')\n  monitors(@Req() request: Request): Monitor[] {\n    return this.dataService.getMonitors();\n  }\n\n  @Get('/clients')\n  clients(@Req() request: Request): string[] {\n    return this.dataService.getClientTokens();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SystemController.html":{"url":"controllers/SystemController.html","title":"controller - SystemController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SystemController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/system/system.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clean\n                            \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clean\n                        \n                    \n                \n            \n            \n                \nclean()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/system/clean')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/system/system.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        root\n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/system/system.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Post, Logger, Get, HttpCode\n} from '@nestjs/common';\nimport { TestSessionService } from '../test-session/test-session.service';\nimport { TesteeService } from '../testee/testee.service';\nimport { WebsocketGateway } from '../common/websocket.gateway';\n\n@Controller()\nexport class SystemController {\n  constructor(\n    private readonly dataService: TestSessionService,\n    private readonly testeeService: TesteeService,\n    private readonly wsGateway: WebsocketGateway\n  ) {}\n\n  private readonly logger = new Logger(SystemController.name);\n\n  @Post('/system/clean')\n  clean(): void {\n    this.logger.warn('clean system');\n    this.wsGateway.disconnectAll();\n    this.dataService.clean();\n    this.testeeService.clean();\n  }\n\n  @Get('')\n  @HttpCode(200)\n  // eslint-disable-next-line class-methods-use-this\n  root(): void {\n    this.logger.log('ping');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TestSessionController.html":{"url":"controllers/TestSessionController.html","title":"controller - TestSessionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TestSessionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/test-session/test-session.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTestSessions\n                            \n                            \n                                pushSessionChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTestSessions\n                        \n                    \n                \n            \n            \n                \ngetTestSessions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/test-sessions')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TestSessionChange[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pushSessionChange\n                        \n                    \n                \n            \n            \n                \npushSessionChange(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/push/session-change')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Get, HttpException, Logger, Post, Req\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { isSessionChange, TestSessionChange } from 'testcenter-common/interfaces/test-session-change.interface';\nimport { TestSessionService } from './test-session.service';\n\n@Controller()\nexport class TestSessionController {\n  constructor(\n    private readonly dataService: TestSessionService\n  ) {}\n\n  private readonly logger = new Logger(TestSessionController.name);\n\n  @Post('/push/session-change')\n  pushSessionChange(@Req() request: Request): void {\n    if (!isSessionChange(request.body)) {\n      throw new HttpException('not session data', 400);\n    }\n\n    this.logger.log('/push/session-change', JSON.stringify(request.body));\n    this.dataService.applySessionChange(request.body);\n  }\n\n  @Get('/test-sessions')\n  getTestSessions(): TestSessionChange[] {\n    return this.dataService.getTestSessions();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestSessionService.html":{"url":"injectables/TestSessionService.html","title":"injectable - TestSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/test-session/test-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                monitors\n                            \n                            \n                                    Private\n                                testSessions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMonitor\n                            \n                            \n                                    Private\n                                addSessionChange\n                            \n                            \n                                applySessionChange\n                            \n                            \n                                    Private\n                                broadcastTestSessionsToGroupMonitors\n                            \n                            \n                                clean\n                            \n                            \n                                getClientTokens\n                            \n                            \n                                getMonitors\n                            \n                            \n                                getTestSessions\n                            \n                            \n                                removeMonitor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(websocketGateway: WebsocketGateway)\n                    \n                \n                        \n                            \n                                Defined in broadcasting-service/src/test-session/test-session.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        websocketGateway\n                                                  \n                                                        \n                                                                        WebsocketGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMonitor\n                        \n                    \n                \n            \n            \n                \naddMonitor(monitor: Monitor)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                                Monitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addSessionChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSessionChange(sessionChange: TestSessionChange)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sessionChange\n                                    \n                                            TestSessionChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applySessionChange\n                        \n                    \n                \n            \n            \n                \napplySessionChange(sessionChange: TestSessionChange)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sessionChange\n                                    \n                                            TestSessionChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        broadcastTestSessionsToGroupMonitors\n                        \n                    \n                \n            \n            \n                \n                    \n                    broadcastTestSessionsToGroupMonitors(groupName: string)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clean\n                        \n                    \n                \n            \n            \n                \nclean()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getClientTokens\n                        \n                    \n                \n            \n            \n                \ngetClientTokens()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMonitors\n                        \n                    \n                \n            \n            \n                \ngetMonitors()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Monitor[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTestSessions\n                        \n                    \n                \n            \n            \n                \ngetTestSessions()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TestSessionChange[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMonitor\n                        \n                    \n                \n            \n            \n                \nremoveMonitor(monitorToken: string)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitorToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TestSessionService.name)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/test-session/test-session.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        monitors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/test-session/test-session.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testSessions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/test-session/test-session.service.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { TestSessionChange } from 'testcenter-common/interfaces/test-session-change.interface';\nimport { Monitor } from '../monitor/monitor.interface';\nimport { WebsocketGateway } from '../common/websocket.gateway';\n\nconst mergeSessionChanges = (testSession: TestSessionChange, sessionChange: TestSessionChange): TestSessionChange => {\n  if ((sessionChange.unitName) && (sessionChange.unitName !== testSession.unitName)) {\n    testSession.unitState = {};\n  }\n\n  sessionChange.unitState = { ...testSession.unitState, ...sessionChange.unitState };\n  sessionChange.testState = { ...testSession.testState, ...sessionChange.testState };\n\n  return { ...testSession, ...sessionChange };\n};\n\n@Injectable()\nexport class TestSessionService {\n  constructor(\n    private readonly websocketGateway: WebsocketGateway\n  ) {\n    this.websocketGateway.getDisconnectionObservable().subscribe((disconnected: string) => {\n      this.removeMonitor(disconnected);\n    });\n  }\n\n  private readonly logger = new Logger(TestSessionService.name);\n\n  private testSessions: {\n    [group: string]: {\n      [sessionId: string]: TestSessionChange\n    }\n  } = {};\n\n  private monitors: {\n    [group: string]: {\n      [token: string]: Monitor\n    }\n  } = {};\n\n  applySessionChange(sessionChange: TestSessionChange): void {\n    this.addSessionChange(sessionChange);\n    this.broadcastTestSessionsToGroupMonitors(sessionChange.groupName);\n  }\n\n  private addSessionChange(sessionChange: TestSessionChange): void {\n    const group: string = sessionChange.groupName;\n    const testId = sessionChange.testId;\n\n    // testSession is first of group\n    if (typeof this.testSessions[group] === 'undefined') {\n      // this.logger.log(\"skipping group hence not monitored: \" + group);\n      return;\n    }\n\n    if (typeof this.testSessions[group][testId] !== 'undefined') {\n      // testSession is already known and needs to be updated\n      const testSession = this.testSessions[group][testId];\n      this.testSessions[group][testId] = mergeSessionChanges(testSession, sessionChange);\n    } else {\n      // formally unknown testSession\n      this.testSessions[group][testId] = sessionChange;\n    }\n  }\n\n  private broadcastTestSessionsToGroupMonitors(groupName: string) {\n    if (typeof this.monitors[groupName] !== 'undefined') {\n      // this.logger.log(\"broadcasting data about group: \" + groupName);\n      const tokens = Object.keys(this.monitors[groupName]);\n      const sessions = (typeof this.testSessions[groupName] !== 'undefined') ?\n        Object.values(this.testSessions[groupName]) :\n        [];\n      this.websocketGateway.broadcastToRegistered(tokens, 'test-sessions', sessions);\n    }\n  }\n\n  addMonitor(monitor: Monitor): void {\n    monitor.groups.forEach((group: string) => {\n      if (typeof this.monitors[group] === 'undefined') {\n        this.monitors[group] = {};\n      }\n      if (typeof this.testSessions[group] === 'undefined') {\n        this.testSessions[group] = {};\n      }\n      this.monitors[group][monitor.token] = monitor;\n    });\n  }\n\n  removeMonitor(monitorToken: string): void {\n    this.logger.log(`remove monitor: ${monitorToken}`);\n\n    Object.keys(this.monitors).forEach((group: string) => {\n      if (typeof this.monitors[group][monitorToken] !== 'undefined') {\n        delete this.monitors[group][monitorToken];\n\n        if (Object.keys(this.monitors[group]).length === 0) {\n          delete this.testSessions[group];\n        }\n      }\n    });\n\n    this.websocketGateway.disconnectClient(monitorToken);\n  }\n\n  getMonitors(): Monitor[] {\n    return Object.values(this.monitors)\n      .reduce(\n        (allMonitors: Monitor[], groupMonitors: { [g: string]: Monitor }): Monitor[] => allMonitors\n          .concat(Object.values(groupMonitors)), []\n      )\n      .filter((v: Monitor, i: number, a: Monitor[]) => a.indexOf(v) === i);\n  }\n\n  getTestSessions(): TestSessionChange[] {\n    return Object.values(this.testSessions)\n      .reduce(\n        // eslint-disable-next-line max-len\n        (allTestSessions: TestSessionChange[], groupTestSessions: { [g: string]: TestSessionChange }): TestSessionChange[] => allTestSessions.concat(Object.values(groupTestSessions)), []\n      );\n  }\n\n  getClientTokens(): string[] {\n    return this.websocketGateway.getClientTokens();\n  }\n\n  clean(): void {\n    this.monitors = {};\n    this.testSessions = {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Testee.html":{"url":"interfaces/Testee.html","title":"interface - Testee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Testee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/testee/testee.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            disconnectNotificationUri\n                                        \n                                \n                                \n                                        \n                                            testId\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disconnectNotificationUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disconnectNotificationUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Testee {\n  token: string;\n  testId: number;\n  disconnectNotificationUri: string;\n}\n\nexport function isTestee(arg: any): arg is Testee {\n  return (arg.token !== undefined) && (arg.testId !== undefined);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TesteeController.html":{"url":"controllers/TesteeController.html","title":"controller - TesteeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TesteeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/testee/testee.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                testeeRegister\n                            \n                            \n                                testees\n                            \n                            \n                                testeeUnregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        testeeRegister\n                        \n                    \n                \n            \n            \n                \ntesteeRegister(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/testee/register')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testees\n                        \n                    \n                \n            \n            \n                \ntestees(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/testees')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Testee[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testeeUnregister\n                        \n                    \n                \n            \n            \n                \ntesteeUnregister(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/testee/unregister')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Get, HttpException, Logger, Post, Req\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { TesteeService } from './testee.service';\nimport { isTestee, Testee } from './testee.interface';\n\n@Controller()\nexport class TesteeController {\n  constructor(\n    private readonly testeeService: TesteeService\n  ) {\n  }\n\n  private readonly logger = new Logger(TesteeController.name);\n\n  @Post('/testee/register')\n  testeeRegister(@Req() request: Request): void {\n    if (!isTestee(request.body)) {\n      throw new HttpException('not testee data', 400);\n    }\n\n    this.logger.log(`testee registered:${JSON.stringify(request.body)}`);\n    this.testeeService.addTestee(request.body);\n  }\n\n  @Post('/testee/unregister')\n  testeeUnregister(@Req() request: Request): void {\n    if (!('token' in request.body)) {\n      throw new HttpException('no token in body', 400);\n    }\n\n    this.logger.log('testee unregistered:', request.body);\n    this.testeeService.removeTestee(request.body.token);\n  }\n\n  @Get('/testees')\n  testees(@Req() request: Request): Testee[] {\n    return this.testeeService.getTestees();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TesteeService.html":{"url":"injectables/TesteeService.html","title":"injectable - TesteeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TesteeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/testee/testee.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                testees\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTestee\n                            \n                            \n                                broadcastCommandToTestees\n                            \n                            \n                                clean\n                            \n                            \n                                getTestees\n                            \n                            \n                                notifyDisconnection\n                            \n                            \n                                removeTestee\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(websocketGateway: WebsocketGateway, http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in broadcasting-service/src/testee/testee.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        websocketGateway\n                                                  \n                                                        \n                                                                        WebsocketGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTestee\n                        \n                    \n                \n            \n            \n                \naddTestee(testee: Testee)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testee\n                                    \n                                                Testee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastCommandToTestees\n                        \n                    \n                \n            \n            \n                \nbroadcastCommandToTestees(command: Command, testIds: number[])\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                Command\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    testIds\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clean\n                        \n                    \n                \n            \n            \n                \nclean()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTestees\n                        \n                    \n                \n            \n            \n                \ngetTestees()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Testee[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifyDisconnection\n                        \n                    \n                \n            \n            \n                \nnotifyDisconnection(testeeToken: string)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testeeToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTestee\n                        \n                    \n                \n            \n            \n                \nremoveTestee(testeeToken: string)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testeeToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TesteeService.name)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/testee/testee.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testees\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/testee/testee.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService, Injectable, Logger } from '@nestjs/common';\nimport { Testee } from './testee.interface';\nimport { WebsocketGateway } from '../common/websocket.gateway';\nimport { Command } from '../command/command.interface';\n\n@Injectable()\nexport class TesteeService {\n  constructor(\n    private readonly websocketGateway: WebsocketGateway,\n    private http: HttpService\n  ) {\n    this.websocketGateway.getDisconnectionObservable().subscribe((disconnected: string) => {\n      this.notifyDisconnection(disconnected);\n      this.removeTestee(disconnected);\n    });\n  }\n\n  private readonly logger = new Logger(TesteeService.name);\n\n  private testees: { [token: string]: Testee } = {};\n\n  addTestee(testee: Testee): void {\n    this.testees[testee.token] = testee;\n  }\n\n  removeTestee(testeeToken: string): void {\n    this.logger.log(`remove testee: ${testeeToken}`);\n\n    if (typeof this.testees[testeeToken] !== 'undefined') {\n      delete this.testees[testeeToken];\n    }\n\n    this.websocketGateway.disconnectClient(testeeToken);\n  }\n\n  getTestees(): Testee[] {\n    return Object.values(this.testees);\n  }\n\n  notifyDisconnection(testeeToken: string): void {\n    if (typeof this.testees[testeeToken] === 'undefined') {\n      return;\n    }\n    if (this.testees[testeeToken].disconnectNotificationUri) {\n      const disconnectNotificationUri = this.testees[testeeToken].disconnectNotificationUri;\n      this.http.post(this.testees[testeeToken].disconnectNotificationUri).subscribe(\n        () => {\n          this.logger.log(`sent connection-lost signal to ${disconnectNotificationUri}`);\n        },\n        error => {\n          this.logger.warn(`could not send connection-lost signal to ${disconnectNotificationUri}: ${error.message}`);\n        }\n      );\n    }\n  }\n\n  broadcastCommandToTestees(command: Command, testIds: number[]) : void {\n    testIds.forEach((testId => {\n      this.websocketGateway.broadcastToRegistered(\n        Object.values(this.testees)\n          .filter(testee => testee.testId === testId)\n          .map(testee => testee.token),\n        'commands',\n        [command]\n      );\n    }));\n  }\n\n  clean(): void {\n    this.testees = {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WebsocketGateway.html":{"url":"classes/WebsocketGateway.html","title":"class - WebsocketGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WebsocketGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/common/websocket.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayConnection\n                        OnGatewayDisconnect\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clientLost$\n                            \n                            \n                                    Private\n                                clients\n                            \n                            \n                                    Private\n                                clientsCount$\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                broadcastToRegistered\n                            \n                            \n                                disconnectAll\n                            \n                            \n                                disconnectClient\n                            \n                            \n                                getClientTokens\n                            \n                            \n                                getDisconnectionObservable\n                            \n                            \n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                            \n                                subscribeClientCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clientLost$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/websocket.gateway.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clients\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/websocket.gateway.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clientsCount$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/websocket.gateway.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(WebsocketGateway.name)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/websocket.gateway.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/websocket.gateway.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastToRegistered\n                        \n                    \n                \n            \n            \n                \nbroadcastToRegistered(tokens: string[], event: BroadcastingEvent, message: any)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tokens\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                BroadcastingEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAll\n                        \n                    \n                \n            \n            \n                \ndisconnectAll()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectClient\n                        \n                    \n                \n            \n            \n                \ndisconnectClient(monitorToken: string)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitorToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getClientTokens\n                        \n                    \n                \n            \n            \n                \ngetClientTokens()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisconnectionObservable\n                        \n                    \n                \n            \n            \n                \ngetDisconnectionObservable()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleConnection\n                        \n                    \n                \n            \n            \n                \nhandleConnection(client: Client, message: IncomingMessage)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Client\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                            IncomingMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(client: Client)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Client\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeClientCount\n                        \n                    \n                \n            \n            \n                \nsubscribeClientCount(data: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('subscribe:client.count')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MessageBody, OnGatewayConnection, OnGatewayDisconnect,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n  WsResponse\n} from '@nestjs/websockets';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Server, Client } from 'ws';\nimport { IncomingMessage } from 'http';\nimport { Logger } from '@nestjs/common';\nimport { BroadcastingEvent } from './interfaces';\n\nfunction getLastUrlPart(url: string) {\n  const arr = url.split('/').filter(e => e);\n  return arr[arr.length - 1];\n}\n\n@WebSocketGateway()\nexport class WebsocketGateway implements OnGatewayConnection, OnGatewayDisconnect {\n  private readonly logger = new Logger(WebsocketGateway.name);\n\n  @WebSocketServer()\n  private server: Server;\n\n  private clients: { [token: string] : Client } = {};\n  private clientsCount$: BehaviorSubject = new BehaviorSubject(0);\n  private clientLost$: BehaviorSubject = new BehaviorSubject(null);\n\n  handleConnection(client: Client, message: IncomingMessage): void {\n    const token = getLastUrlPart(message.url);\n\n    this.clients[token] = client;\n    this.clientsCount$.next(Object.values(this.clients).length);\n    this.logger.log(`client connected: ${token}`);\n  }\n\n  handleDisconnect(client: Client): void {\n    let disconnectedToken = '';\n    Object.keys(this.clients).forEach((token: string) => {\n      if (this.clients[token] === client) {\n        delete this.clients[token];\n        disconnectedToken = token;\n      }\n    });\n\n    if (disconnectedToken !== '') {\n      this.clientLost$.next(disconnectedToken);\n      this.clientsCount$.next(Object.values(this.clients).length);\n      this.logger.log(`client disconnected: ${disconnectedToken}`);\n    }\n  }\n\n  broadcastToRegistered(tokens: string[], event: BroadcastingEvent, message: any): void {\n    const payload = JSON.stringify({ event, data: message });\n\n    tokens.forEach((token: string) => {\n      if (typeof this.clients[token] !== 'undefined') {\n        this.logger.log(`sending to client: ${token}`);\n        this.clients[token].send(payload);\n      }\n    });\n  }\n\n  disconnectClient(monitorToken: string): void {\n    if (typeof this.clients[monitorToken] !== 'undefined') {\n      this.logger.log(`disconnect client: ${monitorToken}`);\n      this.clients[monitorToken].close();\n      delete this.clients[monitorToken];\n    }\n  }\n\n  disconnectAll(): void {\n    Object.keys(this.clients).forEach((token: string) => {\n      this.disconnectClient(token);\n    });\n  }\n\n  getDisconnectionObservable(): Observable {\n    return this.clientLost$.asObservable();\n  }\n\n  getClientTokens(): string[] {\n    return Object.keys(this.clients);\n  }\n\n  @SubscribeMessage('subscribe:client.count')\n  subscribeClientCount(@MessageBody() data: number): Observable> {\n    return this.clientsCount$.pipe(map((count: number) => ({ event: 'client.count', data: count })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n#Changelog\n[next]\nsdh\n13.0.11\nbig thing\n12.2.3\n\nFix critical bug which made the group monitor defunct in live-Mode!\n\nFrontend 12.1.1\n\nFix critical bug in debouncing responses between frontend and backend which led to dataloss in case of very fast \n navigation between units\n\nFrontend 12.1.0\n\nThere are different login-button for admin-users and for testees now.\n\nBackend 12.2.2\n\nmassive performance improvement by caching file information in the DB.\n\nBackend 12.0.2\nFixes data-migration from versions before 12.0.0. With the update to version 12.0.0 the way, response-data is stored\nchanged. Data from existing units should be migrated, but that might fail in some installations. With this patch\n12.0.2 this state will be repaired and the remaining data will get migrated.\nFrontend 12.0.2\nVarious Bugfixes:\n\n(#341) When you visited a test in demo-mode as a monitor, and terminated it, you returned to the starter but didn't see the monitor-monitor button again. That got fixed.\n(#340) After reload you return to the correct unit now\n(#335) Order of checks when leaving a unit is fixed: First check completeness, then ask for leaving the timed block\n(#347) Dont't check navigationLeaveRestrictions if unit is already time-locked.\n\nMinor Changes\n\nIn \"demo\" mode \"showTimeLeft\" is off now\nUse Font Roboto everywhere\n\nBackend 12.0.1\n\nTimeout for admin sessions was extended to 10h (from 30min)\n\nBugfixes:\n\nWrong numbers in Results overview\nHandle bogus Player-Metadata\n\nFrontend 12.0.1\nFix critical bug in login\nBackend 12.0.0\nThis update makes the Teststudio Verona3- and 4 compatible.\nEndpoints\n\nthe responses-output from /workspace/{ws_id}/responses and /workspace/{ws_id}/report/response\nnow contains the chunk names. eg: {\"all\":\"{\\\"key\\\": \\\"value\\\"}\" instead of {\\\"key\\\": \\\"value\\\"}\nnew Endpoint /{auth_token}/resource/{resource_name} is an alternative way for fetching resources. It can be used as\ndirectDownloadUrl-parameter (see here)\nin Verona4-players.\nThose deprecated endpoints are removed\n[GET] /workspace/{ws_id}/logs\n[GET] /workspace/{ws_id}/reviews\n[GET] /workspace/{ws_id}/responses\n[GET] /workspace/{ws_id}/sys-check/reports\n\n\n\nXSD\n\nin the Booklet.xml-format a new restriction is allowed: . It forbids the leaving ofunits of a testlet under certain circumstances: if the unit was not presented oder responded completely. The attributes\npresentation and response may have the values OFF, ON and ALWAYS. Always tells the testcenter, to check\nthe completeness and response-progress everytime the unit shall be left regardless of teh direction. ON only checks\nif the testee want to proceed forwards.\nThe Booklet.xsd now validates correctly that -id must only be unique if no alias is set and otherwise the\nalias must be unique.\n\nDatabase\n\nThe unit-data now gets stored in an additional table test_data, not in tests anymore to allow chunkwise updates.\nThere will be a data-migration, but depending on the specific format of the player it can be possible, that\npreviously edited units will not be restored correctly.\nSee scripts/sql-schema/patches.mysql.d/12.0.0.\n\nFrontend 12.0.0\nThis Version implements Verona 3 and Verona 4 specs.\nVersion-Number\nWe synchronize version-numbers of front- and backend to 12 because there will be only one version-number in the future anyway.\nFixes\n\n(Almost) all defined booklet-parameters should work now.\nRedesign of the Unit- and Page-Navigation.\nImproved error-handling (especially while loading tests).\nImproved behaviour while loading, make progress bar actually show progress.\nThe sandboxing of the player's iframe is improved to maintain security and also allow links into new tabs.\n\nNew Features\n\nVerona 3 and Verona 4 compatible!\nNew Navigation-paradigm:\nInstead of hindering the user to enter a unit which is locked (by timer, by code oder because it's not loaded yet), it can now regardless\nbe entered but will not be displayed. This allows the testee to go back or do whatever she wants when entering a locked unit instead of landing in\na navigational limbo with no escape.\nUnits, that have no timer get never locked now, and the testee is always allowed to return to them - even if (and this is new) there is a locked block\nbetween ths current and the target unit.\n\n\nYou can now restrict your units to can only be left when everything was seen and/or edited. For this there are\nbooklet-parameter force_presentation_complete and force_response_complete as well as new Restriction-Element called .\nnew useful booklet-parameters restore_current_page_on_return, show_end_button_in_player, allow_player_to_terminate_test, lock_test_on_termination.\n\nKnown Issues\n\nThis version of the Testcenter is compatible with all known players that use the Verona2, Verona3 oder Verona4 interface. A noteworthy exception is the simple player 2.\nBecause the dataParts where implemented wrongly (not stringified), it will not be able to restore previously entered unit data after relaod/re-login anymore\n(but apart from that work correctly).\nIn Verona 2+ there is mode for stateReportPolicy called on-demand- This can be set in the\nbooklet is still not supported by the testcenter. (It will fall back to eager). #324\n\nBackend 11.6.0\nThis update refactors the CSV-output for various data: logs, reviews, test-results and sys-check-reports.\nThe CSVs can now all be generated in the backend and retrieved via analogous endpoints. The data is also available\nas JSON. All CSVs contain BOMs now.\nEndpoints\n\nThe four new endpoints for retrieving reports:\n[GET] /workspace/{ws_id}/report/log\n[GET] /workspace/{ws_id}/report/review\n[GET] /workspace/{ws_id}/report/response\n[GET] /workspace/{ws_id}/report/sys-check\n\n\nThe old ones are now deprecated and will be removed soon:\n[GET] /workspace/{ws_id}/logs\n[GET] /workspace/{ws_id}/reviews\n[GET] /workspace/{ws_id}/responses\n[GET] /workspace/{ws_id}/sys-check/reports\n\n\n\nBackend 1.5.0\nFixes some issues in the file-management.\nBackend 11.2.0\nAdds the missing second endpoint for the customization-module.\nEndpoints\n\ncontains the new endpoint [PATCH] /system/config/custom-texts, which updates the key-value-store for the frontend analogous to customTexts.\n\nBackend 11.1.0\nThis update provides the API for the customziation-module.\nEndpoints\n\ncontains the new endpoint [PATCH] /system/config/app, which updates the key-value-store for the frontend analogous to customTexts.\n[GET] /system/config provides the key-value store 'app-config' as well.Database\n\nSee scripts/sql-schema/patches.mysql.d/11.1.0\n\nBackend 11.0.0\nThis update contains various changes around the improved Group-Monitor.\nEndpoints\n\nA new endpoint [GET] /system/time was added to retrieve the server's time and time zone.\nA new endpoint where added: /monitor/group/{group_name}/tests/unlock\nA new endpoint was added: [POST] /test/{test_id}/connection-lost. It can be triggered by a closing browser as well\nas from the broadcasting-service to notify a lost connection to the testController. Note: This endpoint does not\nneed any credentials.Database\n\nSee scripts/sql-schema/patches.mysql.d/11.0.0\n\nBackend 10.0.0\nThis update does not contain new functionality. It's about the init/install script, which can do database-migration from\nolder to newer versions by itself now. The version 10 indicates the beginning of an era with versioned database-schemas.\nThere is no manual patching necessary anymore after an update. So changes in the DB does not force a new major-version\nanymore.\nBackend 9.2.0\nXSD\n\nAdditional elements and attributes needed by teststudio-lite where added. They have no affect for the testcenter at\nthe moment.\n\nBackend 9.1.0\nEndpoints\n\nYou can now insert an optional parameter /alias/{alias} in the end to obtain data if unit is defined with\nan alias in the booklet. This is an HotFix for https://github.com/iqb-berlin/testcenter-frontend/issues/261.\n\nBackend 9.0.0\nThe main content of this update is a complete refactoring of the (XML-)File-classes,\nWorkspace validation and XML-File-Handling. The main goal was to keep validity and\nconsistency of the workspaces. The refactoring shall also allow more and deeper validation\nchecks, update scripts and more in the future. The whole part of the software is now backed\nwith unit-tests galore.\nRequirements\n\nPHP 7.4 is now requiredEndpoints\n\nThe [GET] /workspace/{id}/validation endpoint was removed completely.\nValidation takes now place on file upload and on [GET] /workspace/{id}/files.\nReturn-Values and Status-Codes of [POST] /workspace/{id}/file\nand [GET] /workspace/{id}/files where changed significantly to contain the\nfile's validation information as well as some metadata to display in the frontend.XML\n\nXML-files without a reference to a XSD-Schema generate a warning now. Currently,\nthe reference can only be done with the noNamespaceSchemaLocation-tag!\nPlayer-Metadata as defined in verona2\nis supported now.Config\n\nconfig/system.json contains a new (optional) value: allowExternalXMLSchema\n(boolean, defaults to true) . It defines wether the program is allowed to fetch\nXSD schemas from external URLs.\n\nFrontend 9.0.0\n\nUpdate Angular version from 9 to 12\n\nBackend 8.0.0\nThe role monitor-study / workspaceMonitor was removed completely and all functions and endpoints depending on it.\nXML\n\nMode monitor-study was removed from the mode-attributeEndpoints\n\nThe following endpoints where removed\n[PATCH] /{ws_id}/tests/unlock\n[PATCH] /{ws_id}/tests/lock\n[GET] /{ws_id}/status\n[GET] /{ws_id}/booklets/started\n\nBackend 7.4.0\nXML\n\nA new mode for logins is allowed now: run-demo\n\nBackend 7.0.0\nEndpoints\n\nLog- and State-Endpoints\n[patch] \\test\\{test_id}\\state\n[put] \\test\\{test_id}\\log\n[patch] \\test\\{test_id}\\unit\\{unit_name}\\state\n[put] \\test\\{test_id}\\unit\\{unit_name}\\logwere changed:\nThey all take items in the form[\n  {\n \"key\": __my_key__,\n \"content\": __my_content__,\n \"timeStamp\": 1234567891\n  }\n]\nA state change automatically whites a log now.\n\n\nTimestamp parameter in various endpoints is now timeStamp to resemble the Verona 2 Standard\n\nBackend 6.1.0\nDatabase\n\nYou have to apply database structure changes,\nsee scripts/sql-schema/patches.mysql.sql\n\nBackend 6.0.0\n\nHint: Sample Data/Player is still not supporting Verona 2.0 Interface,\nalthough compatible frontend version expect them!\n\nBackend 5.0.3\nConfig\n\nYou have to manipulate the contents of config/system.json: You need now two parameters\nbroadcastServiceUriPush and broadcastServiceUriSubscribe instead of just broadcastServiceUri.\n\nBackend 4.0.0\nIntroduced the group-monitor for the frist time.\nXML\nTesttakers\n\nname-attribute of -element is now called \nintroduced optional attribute label for -element\nin -element, only the optional  field remainsBooklet\n\nchanged defintion of -element to get rid of a warning,\nthat  was not allowed in some legal constellations\nid-attribute is now mandatory for testlets\n-element can not contain id or label (since it won't be\nvisible anywhere anyway), and first  can not contain\n, which would not make any sense\nMade  more readable: generic parameter-paremater is\nnow renamed to minutes in context of  and to code for\n-element.\nin -element, the elements  and  are mandatory,\nand  is optional, the rest does not exist anymore.SysCheck\n\nin -element, the elements  and  are mandatory,\nand  is optional, the rest does not exist anymore.Unit\n\nin -element, the elements  and  are mandatory,\nand  is optional, the rest does not exist anymore.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                broadcasting-service/src/command/command.controller.ts\n            \n            controller\n            CommandController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                broadcasting-service/src/command/command.interface.ts\n            \n            interface\n            Command\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                broadcasting-service/src/command/command.interface.ts\n            \n            function\n            isCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/command/command.interface.ts\n            \n            variable\n            commandKeywords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/common/error-handler.ts\n            \n            class\n            ErrorHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                broadcasting-service/src/common/websocket.gateway.ts\n            \n            class\n            WebsocketGateway\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                broadcasting-service/src/common/websocket.gateway.ts\n            \n            function\n            getLastUrlPart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/monitor/monitor.controller.ts\n            \n            controller\n            MonitorController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                broadcasting-service/src/monitor/monitor.interface.ts\n            \n            interface\n            Monitor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                broadcasting-service/src/monitor/monitor.interface.ts\n            \n            function\n            isMonitor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/system/system.controller.ts\n            \n            controller\n            SystemController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                broadcasting-service/src/test-session/test-session.controller.ts\n            \n            controller\n            TestSessionController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                broadcasting-service/src/test-session/test-session.service.ts\n            \n            injectable\n            TestSessionService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                broadcasting-service/src/test-session/test-session.service.ts\n            \n            variable\n            mergeSessionChanges\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/testee/testee.controller.ts\n            \n            controller\n            TesteeController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                broadcasting-service/src/testee/testee.interface.ts\n            \n            interface\n            Testee\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                broadcasting-service/src/testee/testee.interface.ts\n            \n            function\n            isTestee\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/testee/testee.service.ts\n            \n            injectable\n            TesteeService\n            \n                0 %\n                (0/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (broadcasting-service/.../main.ts)\n                        \n                        \n                            getLastUrlPart   (broadcasting-service/.../websocket.gateway.ts)\n                        \n                        \n                            isCommand   (broadcasting-service/.../command.interface.ts)\n                        \n                        \n                            isMonitor   (broadcasting-service/.../monitor.interface.ts)\n                        \n                        \n                            isTestee   (broadcasting-service/.../testee.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    broadcasting-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    broadcasting-service/src/common/websocket.gateway.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLastUrlPart\n                        \n                    \n                \n            \n            \n                \ngetLastUrlPart(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    broadcasting-service/src/command/command.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isCommand\n                        \n                    \n                \n            \n            \n                \nisCommand(arg: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Command\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    broadcasting-service/src/monitor/monitor.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMonitor\n                        \n                    \n                \n            \n            \n                \nisMonitor(arg: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Monitor\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    broadcasting-service/src/testee/testee.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isTestee\n                        \n                    \n                \n            \n            \n                \nisTestee(arg: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Testee\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nThis is the next-generation repository of Testcenter which is not in charge right now. Until it's ready please \nrefer to https://github.com/iqb-berlin/testcenter-setup.\n\n\n\n\nIQB-Testcenter\nFollowing the instructions below, you will install the web-application \"IQB-Testcenter\" on your server. \nYou will get handy commands to start and stop the services.\nFor Users\n\nUser's Manual\nBug Reports\n\nSpecial docs\n\nOverview about super-states of running sessions and their icons\nList of modes of test-execution\nParameters of booklet-configuration\nCustomizable Labels in the UI\n\nFor Hosters\n\nInstallation and Update\nServer Configuration\nTrouble Shooting\n\nFor Developers\n\nInstallation for Development\nDeveloper's Guide\n\nAPI Documentation\n\nHTTP API Backend\nVerona Player API\n\nCompodoc Documentation\n\nFrontend\nBroadcasting-Service\n\nTest Coverage\n\nBackend by Unit-Tests\nFrontend by Unit-Tests\nBroadcasting-Service by Unit-Tets\n\nMisc\n\nInstall and run without docker\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nTestSessionService\n\nTestSessionService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTestSessionService->AppModule\n\n\n\n\n\nTesteeService\n\nTesteeService\n\nAppModule -->\n\nTesteeService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BroadcastingEvent   (broadcasting-service/.../interfaces.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    broadcasting-service/src/common/interfaces.ts\n    \n    \n        \n            \n                \n                    \n                    BroadcastingEvent\n                \n            \n            \n                \n                        \"test-sessions\" | \"commands\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            commandKeywords   (broadcasting-service/.../command.interface.ts)\n                        \n                        \n                            mergeSessionChanges   (broadcasting-service/.../test-session.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    broadcasting-service/src/command/command.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        commandKeywords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'pause',\n  'goto',\n  'terminate',\n  'resume',\n  'debug'\n]\n                    \n                \n\n\n        \n    \n\n    broadcasting-service/src/test-session/test-session.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mergeSessionChanges\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (testSession: TestSessionChange, sessionChange: TestSessionChange): TestSessionChange => {\n  if ((sessionChange.unitName) && (sessionChange.unitName !== testSession.unitName)) {\n    testSession.unitState = {};\n  }\n\n  sessionChange.unitState = { ...testSession.unitState, ...sessionChange.unitState };\n  sessionChange.testState = { ...testSession.testState, ...sessionChange.testState };\n\n  return { ...testSession, ...sessionChange };\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
