var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.586,1,1.796]],["body/modules/AppModule.html",[0,2.295,1,3.39,2,1.983,3,3.49,4,2.663,5,2.663,6,2.063,7,0.043,8,2.063,9,3.49,10,2.663,11,1.983,12,0.553,13,0.48,14,0.348,15,0.174,16,3.253,17,4.265,18,1.635,19,2.9,20,2.9,21,2.9,22,2.9,23,2.9,24,2.9,25,1.589,26,4.265,27,0.898,28,4.265,29,2.663,30,1.635,31,1.825,32,3.253,33,3.253,34,1.635,35,1.983,36,1.983,37,2.599,38,3.253,39,3.253,40,3.253,41,3.253,42,3.253,43,2.273,44,3.253,45,3.253,46,3.253,47,3.253,48,0.48,49,0.63,50,0.031,51,0.031]],["title/interfaces/Command.html",[52,0.909,53,1.261]],["body/interfaces/Command.html",[7,0.043,12,0.61,13,0.53,14,0.384,15,0.192,48,0.736,50,0.033,51,0.033,52,1.107,53,2.243,54,1.719,55,2.188,56,0.384,57,1.742,58,5.24,59,4.425,60,5.24,61,0.88,62,3.662,63,1.703,64,0.44,65,2.134,66,1.932,67,2.508,68,2.938,69,2.938,70,2.508,71,2.938,72,2.938,73,1.932,74,3.589,75,2.938,76,4.544,77,2.508,78,2.938,79,2.508,80,3.589,81,3.589,82,2.508,83,3.589,84,2.188,85,1.719,86,2.938,87,1.932,88,0.786,89,3.589,90,1.912,91,3.589,92,3.589]],["title/controllers/CommandController.html",[22,1.796,93,0.646]],["body/controllers/CommandController.html",[7,0.043,8,1.873,12,0.584,13,0.508,14,0.368,15,0.237,18,1.318,22,2.694,25,1.423,27,0.949,43,2.402,48,0.508,49,0.666,50,0.032,51,0.032,53,1.471,56,0.368,61,0.666,64,0.304,73,2.379,90,1.695,93,0.968,94,2.813,95,1.363,96,4.42,97,3.437,98,2.615,99,1.471,100,4.42,101,0.949,102,3.437,103,0.753,104,0.753,105,0.949,106,1.52,107,2.095,108,1.52,109,1.646,110,1.646,111,1.318,112,2.402,113,3.437,114,1.318,115,1.52,116,1.52,117,1.348,118,3.437,119,3.437,120,3.437,121,3.437,122,2.694,123,3.437,124,1.318,125,2.694,126,4.42,127,3.437,128,2.402,129,2.813,130,3.437,131,3.437,132,2.402,133,3.437]],["title/classes/ErrorHandler.html",[37,1.796,49,0.571]],["body/classes/ErrorHandler.html",[7,0.043,12,0.5,13,0.435,14,0.315,15,0.26,25,1.339,27,0.813,29,2.41,34,1.861,37,2.432,48,0.435,49,0.57,50,0.029,51,0.029,56,0.315,57,1.53,61,0.773,64,0.352,66,2.436,95,1.23,101,1.249,103,0.874,104,0.874,105,0.813,106,1.013,108,1.669,111,1.129,114,1.53,115,1.669,116,1.669,117,1.101,134,1.795,135,3.971,136,2.41,137,3.991,138,4.527,139,4.853,140,2.945,141,2.945,142,3.991,143,1.585,144,1.41,145,3.991,146,2.945,147,3.991,148,3.705,149,4.853,150,2.945,151,2.41,152,2.945,153,3.971,154,2.945,155,2.41,156,2.945,157,2.945,158,2.945,159,4.377,160,2.945,161,5.072,162,3.991,163,3.991,164,3.991,165,3.991,166,3.991,167,3.266,168,2.945,169,2.945,170,2.945,171,2.945,172,2.945,173,2.945,174,2.945]],["title/interfaces/Monitor.html",[52,0.909,175,1.13]],["body/interfaces/Monitor.html",[7,0.042,12,0.688,13,0.598,14,0.433,15,0.217,48,0.723,50,0.035,51,0.035,52,1.248,54,1.938,56,0.433,57,1.877,63,1.754,64,0.432,85,1.938,87,2.178,88,0.887,90,1.877,175,2.018,176,2.829,177,5.466,178,2.339,179,3.313,180,3.313,181,4.048]],["title/controllers/MonitorController.html",[20,1.796,93,0.646]],["body/controllers/MonitorController.html",[6,1.508,7,0.043,12,0.489,13,0.425,14,0.308,15,0.27,18,1.105,20,2.396,25,1.327,27,0.795,30,1.105,31,1.233,36,1.756,48,0.425,49,0.558,50,0.028,51,0.028,56,0.308,61,0.931,63,1.212,64,0.425,88,0.861,93,0.861,95,1.212,98,2.81,99,2.058,101,1.327,103,1.053,104,1.053,105,1.327,106,1.654,107,1.756,108,1.352,109,1.379,110,1.379,111,1.105,114,1.105,115,1.352,116,1.352,117,1.235,122,2.396,124,1.105,125,2.396,128,2.013,132,2.747,175,1.844,178,1.682,182,2.358,183,3.218,184,3.931,185,2.747,186,3.931,187,2.881,188,3.931,189,2.881,190,2.881,191,3.931,192,2.881,193,2.358,194,3.931,195,2.881,196,2.881,197,3.931,198,2.881,199,2.013,200,2.881,201,2.013,202,2.881,203,2.881,204,2.881,205,2.013,206,2.881,207,2.358,208,2.881,209,2.881,210,2.358,211,2.881,212,2.358,213,2.881,214,2.358,215,2.881,216,2.881,217,2.881]],["title/interfaces/SessionChange.html",[52,0.909,218,1.261]],["body/interfaces/SessionChange.html",[7,0.043,12,0.506,13,0.44,14,0.319,15,0.16,48,0.594,50,0.029,51,0.029,52,0.919,54,1.427,56,0.319,57,1.543,61,1.1,62,3.408,63,1.838,64,0.514,65,2.366,84,2.973,85,1.427,87,1.604,88,0.653,90,1.747,218,1.949,219,1.427,220,2.083,221,2.083,222,4.877,223,4.877,224,3.991,225,4.877,226,4.877,227,2.973,228,4.877,229,5.093,230,4.877,231,4.877,232,4.877,233,2.973,234,2.981,235,2.439,236,2.981,237,2.981,238,2.981]],["title/controllers/SystemController.html",[24,1.796,93,0.646]],["body/controllers/SystemController.html",[6,1.729,7,0.043,8,1.901,12,0.602,13,0.524,14,0.379,15,0.242,18,1.36,24,2.748,25,1.487,27,0.979,30,1.36,31,1.517,34,1.729,35,2.161,36,2.161,43,2.478,48,0.524,49,0.687,50,0.032,51,0.032,56,0.379,61,0.687,64,0.313,93,0.987,95,1.39,98,2.636,99,1.517,101,0.979,103,0.777,104,0.777,105,0.979,106,1.551,108,1.551,109,1.698,110,1.698,111,1.36,114,1.36,115,1.794,116,1.794,117,0.979,201,2.478,239,2.902,240,3.151,241,3.546,242,4.509,243,3.546,244,3.546,245,3.546,246,3.546,247,3.546,248,2.902,249,3.546,250,3.546,251,3.546]],["title/controllers/TestSessionController.html",[19,1.796,93,0.646]],["body/controllers/TestSessionController.html",[6,1.662,7,0.043,12,0.567,13,0.493,14,0.357,15,0.258,18,1.279,19,2.642,25,1.407,27,0.92,30,1.279,31,2.061,36,2.033,48,0.493,49,0.646,50,0.031,51,0.031,56,0.357,61,0.646,64,0.295,88,0.73,93,0.949,95,1.337,98,2.594,99,1.855,101,1.196,103,0.73,104,0.73,105,1.196,106,1.491,107,2.033,108,1.491,109,1.597,110,1.597,111,1.279,114,1.279,115,1.491,116,1.491,117,1.196,122,2.033,124,1.279,125,2.033,201,2.331,205,2.331,218,2.061,219,2.306,252,2.729,253,4.173,254,4.335,255,4.335,256,2.642,257,3.335,258,3.335,259,4.335,260,3.365,261,3.335,262,2.331,263,3.548,264,2.729,265,3.335,266,3.335,267,3.335,268,3.335,269,3.335,270,3.335,271,3.335]],["title/injectables/TestSessionService.html",[6,1.13,272,1.586]],["body/injectables/TestSessionService.html",[6,0.999,7,0.044,12,0.28,13,0.244,14,0.177,15,0.277,25,1.012,27,0.455,30,0.632,31,2.214,34,1.627,35,1.005,48,0.244,49,0.319,50,0.019,51,0.019,56,0.177,57,0.999,61,0.821,63,1.655,64,0.429,65,0.706,66,2.283,73,2.391,88,0.874,90,1.703,95,0.803,101,1.41,103,0.929,104,0.929,105,1.308,106,1.703,108,1.261,114,0.999,115,1.816,116,1.261,117,0.719,124,0.632,143,1.737,144,1.545,175,2.005,178,0.706,185,2.256,218,2.354,219,2.477,224,2.132,227,1.005,233,1.588,240,2.562,253,3.001,256,1.967,263,1.35,264,1.35,272,1.402,273,1.153,274,1.153,275,3.228,276,2.605,277,2.605,278,2.605,279,2.605,280,3.001,281,3.666,282,2.605,283,1.35,284,1.649,285,2.605,286,1.649,287,2.605,288,1.649,289,2.605,290,1.649,291,2.605,292,1.649,293,1.649,294,1.649,295,1.649,296,1.649,297,2.605,298,1.649,299,2.132,300,2.605,301,1.649,302,1.649,303,1.649,304,1.649,305,1.153,306,3.472,307,2.132,308,1.35,309,2.132,310,2.132,311,2.132,312,1.35,313,1.35,314,1.649,315,3.636,316,1.649,317,1.649,318,1.649,319,1.649,320,1.649,321,1.153,322,3.666,323,1.649,324,1.649,325,1.649,326,3.666,327,1.35,328,1.35,329,1.35,330,1.649,331,1.649,332,1.649,333,1.649,334,1.649,335,1.649,336,1.35,337,1.649,338,1.649,339,1.649,340,1.649,341,1.649,342,2.605,343,1.649,344,1.35,345,1.649,346,2.605,347,1.588,348,1.649,349,1.35,350,1.649,351,1.649,352,2.605,353,2.605,354,1.649,355,2.605,356,1.649,357,1.649,358,1.649,359,1.649,360,1.649,361,1.649,362,1.649,363,1.35,364,1.649,365,1.649,366,1.649,367,1.649,368,1.649,369,1.649,370,1.649,371,1.649]],["title/interfaces/Testee.html",[52,0.909,372,1.261]],["body/interfaces/Testee.html",[7,0.042,12,0.671,13,0.583,14,0.423,15,0.212,48,0.712,50,0.035,51,0.035,52,1.218,54,1.891,56,0.423,57,1.849,63,1.744,64,0.46,65,2.227,85,1.891,87,2.125,88,0.865,90,1.849,178,2.32,180,3.232,227,3.304,372,2.227,373,2.76,374,4.436,375,3.232,376,3.949]],["title/controllers/TesteeController.html",[23,1.796,93,0.646]],["body/controllers/TesteeController.html",[7,0.043,8,1.771,12,0.52,13,0.452,14,0.328,15,0.264,18,1.174,23,2.497,25,1.361,27,0.845,48,0.452,49,0.593,50,0.029,51,0.029,56,0.328,61,0.894,64,0.408,88,0.671,93,0.897,95,1.263,98,2.786,99,1.976,101,1.274,103,1.011,104,1.011,105,1.274,106,1.696,107,1.866,108,1.409,109,1.466,110,1.466,111,1.174,114,1.174,115,1.409,116,1.409,117,1.274,122,2.497,124,1.174,125,2.497,128,2.14,132,2.863,178,1.753,205,2.14,207,2.506,210,2.506,212,2.506,372,2.11,377,2.506,378,4.097,379,3.353,380,4.097,381,3.062,382,4.097,383,3.062,384,3.062,385,4.097,386,3.062,387,3.062,388,4.097,389,3.062,390,3.062,391,2.14,392,2.506,393,3.062,394,3.062,395,3.062,396,3.062,397,3.062,398,3.062,399,3.062,400,3.062,401,3.062,402,3.062]],["title/injectables/TesteeService.html",[8,1.13,272,1.586]],["body/injectables/TesteeService.html",[7,0.044,8,1.299,12,0.396,13,0.344,14,0.25,15,0.285,25,1.209,27,0.644,34,1.861,35,1.422,48,0.344,49,0.452,50,0.024,51,0.024,53,2.076,56,0.25,57,1.299,61,0.901,63,1.582,64,0.442,65,1.708,66,1.255,73,1.823,88,0.742,90,1.299,95,1.045,101,1.443,103,1.019,104,1.019,105,1.339,106,1.827,108,1.506,114,1.299,115,1.764,116,1.506,117,0.935,129,3.266,143,1.823,144,1.622,178,0.998,227,1.422,233,1.422,240,3.06,272,1.823,273,1.63,283,1.909,313,1.909,344,1.909,347,1.422,372,2.273,374,3.266,379,3.266,392,1.909,403,1.909,404,3.388,405,3.388,406,4.379,407,3.388,408,3.388,409,3.266,410,4.379,411,2.332,412,3.388,413,2.332,414,3.388,415,2.332,416,2.332,417,2.332,418,3.388,419,2.332,420,3.99,421,3.388,422,2.332,423,3.388,424,2.332,425,2.332,426,2.332,427,2.332,428,2.332,429,2.332,430,3.99,431,2.332,432,3.388,433,3.388,434,2.332,435,2.332,436,2.065,437,2.773,438,3.388,439,1.63,440,2.332,441,2.332,442,2.332,443,2.332,444,2.332,445,2.332,446,2.332,447,2.332,448,2.332,449,1.63,450,2.332]],["title/controllers/VersionController.html",[21,1.796,93,0.646]],["body/controllers/VersionController.html",[7,0.043,12,0.664,13,0.577,14,0.418,15,0.257,18,1.498,21,2.92,25,1.43,27,1.078,48,0.577,49,0.756,50,0.034,51,0.034,56,0.418,61,0.756,63,1.477,64,0.345,88,0.856,93,1.049,95,1.477,98,2.701,99,1.672,101,1.078,103,0.856,104,0.856,105,1.078,110,1.871,111,1.498,185,3.347,193,3.197,214,3.197,451,3.197,452,4.79,453,3.907,454,3.347,455,3.907]],["title/classes/WebsocketGateway.html",[34,1.13,49,0.571]],["body/classes/WebsocketGateway.html",[7,0.043,12,0.326,13,0.283,14,0.205,15,0.286,25,1.296,27,0.529,34,1.525,48,0.283,49,0.371,50,0.021,51,0.021,54,0.918,56,0.205,57,1.123,61,0.829,63,1.629,64,0.447,65,1.702,66,1.912,73,1.576,85,0.918,88,0.871,90,1.123,95,0.903,99,1.253,101,1.459,103,0.938,104,0.938,105,1.336,106,1.741,108,1.367,115,1.854,116,1.222,117,1.246,124,1.525,134,1.169,143,2.14,144,1.904,167,3.843,178,1.833,183,2.908,233,1.169,280,3.254,299,2.397,336,1.57,347,1.785,409,1.57,456,1.341,457,2.397,458,3.553,459,3.553,460,3.553,461,3.553,462,3.695,463,2.929,464,3.976,465,2.929,466,3.976,467,2.929,468,2.929,469,2.929,470,4.282,471,2.929,472,1.918,473,1.918,474,2.929,475,1.918,476,2.929,477,1.918,478,3.553,479,1.918,480,2.929,481,3.505,482,3.254,483,1.918,484,1.918,485,2.929,486,1.918,487,1.918,488,1.918,489,4.282,490,2.929,491,5.34,492,3.976,493,1.918,494,2.929,495,1.918,496,1.918,497,2.929,498,1.918,499,1.918,500,1.918,501,1.918,502,1.918,503,1.918,504,1.918,505,1.918,506,1.918,507,1.57,508,1.918,509,1.918,510,1.918,511,1.918,512,1.341,513,1.918,514,3.976,515,2.929,516,2.929,517,1.918,518,3.976,519,2.929,520,1.918,521,1.918,522,1.918,523,1.918,524,1.918,525,1.918,526,1.918,527,2.929,528,1.918,529,1.918,530,1.918,531,1.918,532,1.918,533,1.918,534,1.918,535,1.918,536,1.918]],["title/changelog.html",[537,1.73,538,1.73,539,2.026]],["body/changelog.html",[0,1.032,7,0.031,14,0.313,15,0.061,30,0.735,50,0.021,51,0.014,52,0.591,59,2.039,61,0.732,62,1.741,65,0.821,75,1.57,77,1.34,79,0.793,82,0.793,84,2.165,88,0.546,101,0.688,103,0.546,104,0.249,109,0.918,117,1.369,124,1.642,134,0.692,144,1.701,151,0.929,153,2.039,159,0.929,175,1.45,256,0.692,260,0.793,315,1.57,321,1.34,327,0.929,328,1.57,372,1.066,436,0.692,437,1.57,439,0.793,454,2.992,457,0.929,539,0.929,540,4.179,541,2.491,542,2.491,543,2.491,544,1.57,545,0.929,546,2.928,547,3.505,548,1.57,549,1.918,550,2.397,551,1.135,552,2.928,553,1.918,554,1.135,555,1.135,556,3.782,557,2.039,558,1.135,559,1.135,560,3.096,561,2.928,562,1.918,563,1.135,564,1.135,565,2.491,566,1.135,567,1.135,568,1.135,569,1.135,570,2.907,571,1.135,572,1.135,573,1.57,574,1.135,575,1.135,576,1.135,577,3.773,578,4.3,579,1.135,580,0.929,581,2.491,582,2.491,583,2.679,584,1.918,585,1.135,586,1.135,587,1.918,588,1.135,589,1.135,590,1.135,591,2.928,592,3.273,593,1.135,594,2.928,595,1.135,596,1.34,597,1.135,598,1.135,599,1.135,600,1.918,601,0.929,602,0.929,603,1.135,604,1.135,605,1.135,606,1.135,607,1.918,608,0.793,609,0.929,610,1.135,611,2.928,612,2.491,613,1.135,614,1.135,615,1.135,616,1.57,617,1.135,618,1.918,619,1.918,620,2.039,621,2.928,622,4.695,623,1.135,624,1.918,625,2.491,626,1.918,627,2.679,628,1.135,629,1.135,630,1.135,631,1.135,632,2.928,633,3.273,634,4.14,635,1.135,636,1.135,637,1.135,638,1.135,639,0.929,640,1.135,641,3.273,642,0.929,643,1.918,644,1.918,645,1.135,646,1.918,647,3.552,648,1.918,649,1.918,650,1.918,651,1.918,652,2.928,653,1.135,654,1.918,655,1.57,656,3.273,657,1.135,658,1.135,659,1.135,660,0.929,661,1.135,662,1.135,663,1.135,664,2.491,665,1.135,666,2.491,667,1.918,668,1.135,669,1.57,670,2.491,671,1.135,672,2.397,673,2.491,674,1.135,675,1.57,676,1.918,677,1.918,678,1.135,679,1.135,680,0.929,681,1.135,682,1.135,683,1.135,684,1.135,685,2.491,686,2.491,687,1.57,688,0.793,689,2.679,690,1.135,691,1.57,692,0.929,693,1.135,694,2.039,695,3.273,696,2.491,697,1.135,698,2.491,699,1.57,700,0.929,701,1.135,702,1.918,703,1.918,704,1.135,705,2.928,706,1.135,707,3.782,708,1.57,709,1.135,710,1.135,711,1.135,712,1.918,713,1.918,714,1.918,715,3.273,716,1.57,717,1.135,718,0.929,719,1.918,720,2.928,721,1.57,722,1.135,723,1.918,724,1.135,725,1.135,726,1.135,727,1.135,728,1.135,729,1.135,730,1.135,731,1.135,732,1.135,733,1.135,734,1.135,735,1.135,736,1.135,737,1.135,738,0.929,739,1.135,740,1.918,741,1.57,742,1.918,743,0.929,744,1.918,745,1.135,746,1.135,747,0.929,748,1.918,749,1.135,750,1.135,751,1.135,752,1.135,753,1.135,754,1.135,755,1.135,756,1.135,757,1.135,758,0.929,759,0.929,760,1.135,761,0.929,762,1.135,763,0.929,764,1.135,765,1.135,766,2.039,767,4.282,768,2.491,769,1.135,770,1.135,771,1.135,772,1.135,773,1.135,774,1.918,775,1.918,776,1.135,777,1.135,778,2.039,779,1.135,780,1.135,781,1.135,782,1.135,783,1.135,784,1.135,785,1.135,786,1.135,787,1.135,788,1.918,789,1.918,790,1.135,791,1.135,792,1.135,793,1.135,794,1.135,795,1.135,796,0.929,797,1.135,798,1.135,799,1.918,800,1.918,801,0.929,802,1.135,803,0.929,804,2.491,805,1.135,806,1.135,807,3.273,808,1.135,809,1.135,810,1.135,811,1.135,812,1.135,813,1.135,814,1.135,815,1.135,816,1.135,817,1.135,818,1.135,819,1.135,820,1.135,821,1.135,822,1.135,823,1.135,824,1.135,825,1.135,826,2.491,827,1.918,828,1.135,829,1.918,830,0.929,831,1.135,832,1.135,833,1.135,834,1.135,835,1.57,836,1.135,837,1.135,838,1.135,839,1.135,840,1.135,841,2.928,842,1.135,843,1.135,844,1.135,845,1.135,846,1.135,847,1.135,848,1.135,849,0.793,850,0.929,851,1.135,852,1.135,853,1.135,854,1.57,855,1.135,856,1.135,857,1.135,858,1.135,859,1.135,860,0.929,861,1.135,862,1.135,863,1.135,864,1.135,865,1.135,866,1.135,867,1.135,868,1.135,869,1.918,870,1.135,871,1.135,872,1.135,873,1.135,874,1.135,875,1.135,876,1.135,877,2.928,878,1.135,879,1.135,880,1.135,881,1.135,882,1.135,883,1.135,884,1.135,885,0.929,886,1.135,887,1.135,888,1.135,889,0.929,890,1.135,891,1.918,892,1.918,893,1.918,894,1.135,895,1.918,896,3.552,897,1.135,898,2.928,899,1.135,900,1.135,901,1.135,902,1.135,903,1.135,904,2.039,905,1.135,906,0.929,907,0.929,908,1.135,909,0.793,910,1.135,911,1.135,912,0.929,913,0.929,914,1.135,915,1.135,916,1.135,917,1.135,918,1.135,919,1.135,920,1.918,921,1.135,922,1.135,923,1.135,924,1.135,925,0.929,926,1.135,927,1.135,928,0.793,929,0.929,930,1.918,931,1.135,932,1.135,933,1.57,934,1.135,935,0.929,936,1.135,937,0.929,938,1.135,939,1.918,940,1.135,941,1.135,942,1.135,943,1.135,944,1.135,945,1.135,946,1.135,947,1.135,948,1.135,949,1.135,950,0.929,951,1.135,952,1.135,953,1.135,954,1.918,955,1.135,956,0.793,957,1.135,958,0.793,959,1.135,960,1.135,961,1.135,962,1.135,963,1.135,964,0.929,965,0.929,966,1.135,967,1.57,968,1.135,969,1.57,970,1.135,971,1.135,972,1.135,973,1.135,974,1.135,975,1.135,976,1.135,977,1.135,978,1.135,979,1.135,980,1.135,981,1.135,982,1.135,983,1.135,984,1.135,985,0.929,986,1.135,987,1.135,988,1.135,989,1.135,990,1.135,991,1.135,992,1.135,993,0.929,994,1.135,995,1.135,996,1.135,997,0.929,998,0.929,999,1.135,1000,1.135,1001,1.135,1002,1.135,1003,1.918,1004,1.135,1005,1.135,1006,2.491,1007,1.918,1008,1.135,1009,1.135,1010,1.135,1011,1.135,1012,1.135,1013,1.135,1014,2.928,1015,1.135,1016,1.135,1017,1.135,1018,1.135,1019,1.135,1020,0.929,1021,1.135,1022,1.135,1023,1.135,1024,1.135,1025,1.135,1026,1.135,1027,2.491,1028,2.491,1029,1.135,1030,1.135]],["title/coverage.html",[1031,3.268]],["body/coverage.html",[6,1.15,7,0.043,8,1.15,14,0.321,15,0.317,19,1.828,20,1.828,21,1.828,22,1.828,23,1.828,24,1.828,31,1.955,34,1.15,37,1.828,49,0.782,50,0.029,51,0.029,52,1.508,53,1.283,55,2.785,64,0.265,67,2.096,85,2.517,93,1.151,94,2.454,112,2.096,117,0.828,135,2.454,136,2.454,175,1.15,176,2.824,182,2.454,199,2.096,218,1.283,219,2.444,220,2.824,221,2.824,239,2.454,252,2.454,262,2.096,272,2.174,274,2.824,305,2.096,349,4.832,372,1.283,373,2.824,377,2.454,391,2.096,403,2.454,451,2.454,456,2.824,692,2.454,1031,2.454,1032,2.096,1033,2.999,1034,2.999,1035,4.569,1036,4.04,1037,5.463,1038,3.307,1039,4.569,1040,4.569,1041,2.454,1042,2.454,1043,2.454,1044,4.04,1045,2.999,1046,2.999]],["title/miscellaneous/functions.html",[956,2.472,1047,1.185]],["body/miscellaneous/functions.html",[7,0.042,15,0.313,50,0.033,51,0.033,53,1.544,55,2.199,56,0.386,61,1.048,63,1.405,64,0.478,86,2.952,87,2.825,103,1.186,104,1.186,105,1.449,112,3.185,175,1.383,176,2.521,179,2.952,199,3.185,218,1.544,219,1.727,220,2.521,221,3.185,235,2.952,262,3.185,372,1.544,373,2.521,375,2.952,391,3.185,456,2.521,507,2.952,956,2.521,1041,3.73,1042,2.952,1043,4.09,1047,1.727,1048,3.607,1049,3.607,1050,2.952,1051,3.607,1052,3.607,1053,3.607,1054,3.607]],["title/index.html",[56,0.265,537,1.73,538,1.73]],["body/index.html",[0,0.771,2,0.873,7,0.029,11,0.873,13,0.499,14,0.398,15,0.077,30,1.126,48,0.212,50,0.017,51,0.017,53,1.257,64,0.205,70,1.001,77,3.388,78,2.404,79,2.934,82,1.001,84,2.061,103,0.509,104,0.741,124,0.549,148,1.904,155,2.404,175,0.549,248,2.404,260,2.363,321,1.001,329,1.172,347,1.418,363,1.172,436,1.418,439,2.053,449,2.784,454,1.626,462,3.436,512,1.626,540,2.768,544,1.172,545,1.172,547,2.404,548,2.404,550,1.172,557,1.172,560,2.768,570,1.172,573,1.172,577,1.172,578,1.904,580,1.172,583,2.404,596,2.053,601,1.172,602,1.904,609,1.904,616,1.172,627,1.172,639,2.404,642,3.261,660,2.768,669,1.172,672,3.044,680,1.172,687,1.904,688,1.001,689,2.768,691,1.172,694,1.172,699,1.172,700,1.904,708,1.904,716,1.172,718,1.904,721,1.904,738,2.768,741,3.436,743,1.172,747,2.768,758,1.172,759,2.404,761,1.172,766,1.172,796,2.404,801,1.172,803,1.904,830,2.404,835,1.172,849,1.626,850,1.904,854,3.044,860,2.768,885,1.904,889,1.172,904,2.404,906,1.904,907,1.904,909,2.053,912,1.172,913,1.172,925,1.904,928,2.053,933,1.172,935,2.404,937,1.172,950,1.904,958,1.626,964,1.904,965,3.7,967,1.172,969,2.404,985,1.172,993,1.172,997,1.172,998,1.172,1020,1.172,1032,1.001,1038,1.904,1055,4.374,1056,2.326,1057,2.937,1058,4.646,1059,2.326,1060,4.754,1061,1.904,1062,1.432,1063,3.382,1064,3.984,1065,1.432,1066,1.432,1067,1.432,1068,1.432,1069,2.326,1070,2.937,1071,2.937,1072,1.432,1073,3.382,1074,2.937,1075,1.432,1076,1.432,1077,1.432,1078,1.432,1079,1.432,1080,1.432,1081,1.432,1082,2.937,1083,1.432,1084,1.432,1085,2.326,1086,1.432,1087,1.432,1088,2.937,1089,1.432,1090,1.432,1091,1.432,1092,1.432,1093,1.432,1094,1.432,1095,3.382,1096,1.432,1097,2.937,1098,1.432,1099,1.432,1100,1.432,1101,1.432,1102,1.432,1103,5.178,1104,4.848,1105,2.326,1106,1.432,1107,1.432,1108,1.432,1109,1.432,1110,1.432,1111,2.326,1112,1.432,1113,1.432,1114,3.719,1115,2.326,1116,2.937,1117,1.432,1118,1.432,1119,1.432,1120,2.326,1121,1.432,1122,1.432,1123,1.432,1124,2.937,1125,1.432,1126,1.432,1127,1.432,1128,1.432,1129,1.432,1130,1.432,1131,1.432,1132,1.432,1133,1.432,1134,1.432,1135,2.326,1136,2.937,1137,1.432,1138,1.432,1139,2.937,1140,2.326,1141,1.432,1142,2.937,1143,3.382,1144,1.432,1145,2.326,1146,2.326,1147,1.432,1148,1.432,1149,1.432,1150,3.382,1151,1.432,1152,1.432,1153,1.432,1154,1.432,1155,1.432,1156,2.326,1157,1.432,1158,2.326,1159,3.984,1160,1.432,1161,1.432,1162,1.432,1163,1.432,1164,1.432,1165,1.432,1166,1.432,1167,1.432,1168,1.432,1169,1.432,1170,2.326,1171,1.432,1172,2.937,1173,2.937,1174,1.432,1175,1.432,1176,2.937,1177,1.432,1178,1.432,1179,1.432,1180,1.432,1181,1.432,1182,1.432,1183,2.326,1184,1.432,1185,1.432,1186,1.432,1187,1.432,1188,2.326,1189,2.326,1190,1.432,1191,1.432,1192,2.937,1193,1.432,1194,3.382,1195,1.432,1196,1.432,1197,2.937,1198,1.432,1199,2.326,1200,1.432,1201,1.432,1202,1.432,1203,1.432,1204,3.719,1205,1.432,1206,1.432,1207,1.432,1208,1.432,1209,1.432,1210,1.432,1211,1.432,1212,3.984,1213,1.432,1214,1.432,1215,1.432,1216,2.937,1217,2.937,1218,1.432,1219,1.432,1220,1.432,1221,1.432,1222,1.432,1223,1.432,1224,1.432,1225,1.432,1226,2.326,1227,2.326,1228,1.432,1229,1.432,1230,1.432,1231,1.432,1232,2.326,1233,3.382,1234,1.432,1235,1.432,1236,1.432,1237,1.432,1238,2.326,1239,1.432,1240,1.432,1241,1.432,1242,1.432,1243,1.432,1244,1.432,1245,2.326,1246,2.937,1247,2.326,1248,1.432,1249,1.432,1250,1.432,1251,1.432,1252,1.432,1253,1.432,1254,1.432,1255,1.432,1256,1.432,1257,2.326,1258,1.432,1259,2.937,1260,1.432,1261,2.937,1262,1.172,1263,2.937,1264,1.432,1265,1.432,1266,1.432,1267,1.432,1268,1.432,1269,1.432,1270,1.432,1271,1.432,1272,1.432,1273,1.432,1274,1.432,1275,1.432,1276,1.432,1277,1.432,1278,1.432,1279,1.432,1280,1.432,1281,1.432,1282,1.432,1283,2.326,1284,1.432,1285,1.432,1286,1.432,1287,1.432,1288,1.432,1289,1.432,1290,1.432,1291,1.432,1292,1.432,1293,1.432,1294,1.432,1295,1.432,1296,1.432,1297,1.432,1298,1.432,1299,1.432,1300,1.432,1301,1.432,1302,1.432,1303,1.432,1304,1.432,1305,1.432,1306,1.432,1307,1.432,1308,1.432,1309,1.432,1310,1.432,1311,1.432,1312,2.326,1313,1.432,1314,1.432]],["title/license.html",[537,1.73,538,1.73,1315,2.026]],["body/license.html",[7,0.033,11,2.177,50,0.033,51,0.033,111,1.37,436,2.177,481,2.923,596,3.166,655,2.923,675,3.707,688,2.496,763,2.923,909,4,928,2.496,929,4.071,958,2.496,1032,2.496,1061,2.923,1262,2.923,1315,2.923,1316,3.572,1317,4.974,1318,3.572,1319,3.572,1320,3.572,1321,3.572,1322,3.572,1323,3.572,1324,4.53,1325,3.572,1326,3.572,1327,3.572,1328,3.572,1329,3.572,1330,4.53,1331,3.572,1332,3.572,1333,4.53,1334,3.572,1335,3.572,1336,3.572,1337,3.572,1338,3.572,1339,3.572,1340,3.572,1341,3.572,1342,4.53,1343,3.572,1344,3.572,1345,3.572,1346,3.572,1347,3.572,1348,3.572,1349,4.53,1350,3.572,1351,3.572,1352,3.572,1353,3.572,1354,3.572,1355,3.572,1356,3.572,1357,3.572,1358,3.572,1359,3.572,1360,3.572,1361,3.572,1362,3.572,1363,3.572,1364,3.572,1365,3.572,1366,3.572,1367,3.572,1368,3.572,1369,3.572,1370,3.572,1371,3.572,1372,3.572,1373,3.572,1374,3.572,1375,3.572]],["title/modules.html",[2,2.434]],["body/modules.html",[1,2.793,2,2.793,7,0.038,50,0.038,51,0.038,849,3.202,1376,4.582,1377,4.582,1378,4.582]],["title/overview.html",[608,2.791]],["body/overview.html",[0,2.273,1,3.501,3,4.109,4,3.457,5,3.457,6,2.055,7,0.04,8,2.055,9,4.109,10,3.457,11,2.574,18,1.62,50,0.036,51,0.036,54,2.022,134,2.574,273,2.952,512,2.952,608,2.952,620,3.457,778,4.109,1379,4.223]],["title/miscellaneous/typealiases.html",[1047,1.185,1380,3.537]],["body/miscellaneous/typealiases.html",[7,0.039,15,0.278,30,1.714,50,0.037,51,0.037,56,0.478,64,0.395,256,2.724,449,3.123,482,4.248,1047,2.14,1381,4.469,1382,4.469,1383,4.469]],["title/miscellaneous/variables.html",[1047,1.185,1384,2.895]],["body/miscellaneous/variables.html",[7,0.043,15,0.287,31,1.637,50,0.034,51,0.034,55,2.331,56,0.409,64,0.338,67,3.304,68,3.13,69,3.13,70,2.673,71,3.13,72,3.13,88,0.838,143,2.544,144,2.264,218,2.357,219,1.831,274,3.304,305,3.304,306,3.869,307,3.869,308,3.13,309,3.869,310,3.869,311,3.869,312,3.13,1047,1.831,1050,3.13,1384,3.13,1385,3.825]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"interfaces/SessionChange.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":349,"title":{},"body":{"injectables/TestSessionService.html":{},"coverage.html":{}}}],["0/1",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":512,"title":{},"body":{"classes/WebsocketGateway.html":{},"index.html":{},"overview.html":{}}}],["1.5.0",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["10.0.0",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["10h",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["11.0.0",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["11.1.0",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["11.2.0",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["11.6.0",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["12.0.0",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["12.0.1",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["1234567891",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":778,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2.0",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["2019",{"_index":1319,"title":{},"body":{"license.html":{}}}],["3",{"_index":708,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["30min",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["324",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["335",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["340",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["341",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["347",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":620,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["4.0.0",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["400",{"_index":125,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["5",{"_index":1179,"title":{},"body":{"index.html":{}}}],["5.0.3",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["500",{"_index":173,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["6",{"_index":1379,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["6.1.0",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["7.0.0",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["7.4",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["7.4.0",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["8.0.0",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["9.0.0",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["9.1.0",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["9.2.0",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["__my_content__",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["__my_key__",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["a.indexof(v",{"_index":358,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["above",{"_index":1348,"title":{},"body":{"license.html":{}}}],["access",{"_index":1197,"title":{},"body":{"index.html":{}}}],["accessing",{"_index":1230,"title":{},"body":{"index.html":{}}}],["action",{"_index":1371,"title":{},"body":{"license.html":{}}}],["actual",{"_index":1241,"title":{},"body":{"index.html":{}}}],["actually",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["added",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":691,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["addmonitor",{"_index":276,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["addmonitor(monitor",{"_index":285,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["address",{"_index":1237,"title":{},"body":{"index.html":{}}}],["adds",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["addsessionchange",{"_index":277,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["addsessionchange(sessionchange",{"_index":287,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["addtestee",{"_index":404,"title":{},"body":{"injectables/TesteeService.html":{}}}],["addtestee(testee",{"_index":412,"title":{},"body":{"injectables/TesteeService.html":{}}}],["admin",{"_index":602,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["affect",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["alias",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["alias/{alias",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1381,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all\":\"{\\\"key",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["allmonitors",{"_index":353,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["allow",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["allow_player_to_terminate_test",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["allowed",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["allowexternalxmlschema",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["allows",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["alltestsessions",{"_index":366,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["alltestsessions.concat(object.values(grouptestsessions",{"_index":368,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["already",{"_index":327,"title":{},"body":{"injectables/TestSessionService.html":{},"changelog.html":{}}}],["alternative",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["alternatively",{"_index":1187,"title":{},"body":{"index.html":{}}}],["although",{"_index":993,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["always",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["analogous",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["analyses",{"_index":1131,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":763,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["angular",{"_index":950,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["another",{"_index":1120,"title":{},"body":{"index.html":{}}}],["anymore",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["anymore.syscheck",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["anymore.unit",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["anyway",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["anywhere",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["apart",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["api",{"_index":830,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["app_filter",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":1060,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1116,"title":{},"body":{"index.html":{}}}],["apply",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["applysessionchange",{"_index":278,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["applysessionchange(sessionchange",{"_index":289,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arg",{"_index":87,"title":{},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"interfaces/SessionChange.html":{},"interfaces/Testee.html":{},"miscellaneous/functions.html":{}}}],["arg.arguments",{"_index":92,"title":{},"body":{"interfaces/Command.html":{}}}],["arg.groupname",{"_index":238,"title":{},"body":{"interfaces/SessionChange.html":{}}}],["arg.groups",{"_index":181,"title":{},"body":{"interfaces/Monitor.html":{}}}],["arg.id",{"_index":91,"title":{},"body":{"interfaces/Command.html":{}}}],["arg.keyword",{"_index":89,"title":{},"body":{"interfaces/Command.html":{}}}],["arg.personid",{"_index":236,"title":{},"body":{"interfaces/SessionChange.html":{}}}],["arg.testid",{"_index":376,"title":{},"body":{"interfaces/Testee.html":{}}}],["arg.timestamp",{"_index":237,"title":{},"body":{"interfaces/SessionChange.html":{}}}],["arg.token",{"_index":180,"title":{},"body":{"interfaces/Monitor.html":{},"interfaces/Testee.html":{}}}],["arguments",{"_index":58,"title":{},"body":{"interfaces/Command.html":{}}}],["argumentshost",{"_index":149,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["arising",{"_index":1374,"title":{},"body":{"license.html":{}}}],["around",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["arr",{"_index":508,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["arr[arr.length",{"_index":511,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["array.isarray(request.body.testids",{"_index":127,"title":{},"body":{"controllers/CommandController.html":{}}}],["ask",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":1331,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1274,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["attributeendpoints",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["auth_token}/resource/{resource_name",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1364,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":1098,"title":{},"body":{"index.html":{}}}],["back",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["backed",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":540,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["backend/src/vo_data",{"_index":1305,"title":{},"body":{"index.html":{}}}],["backends",{"_index":1164,"title":{},"body":{"index.html":{}}}],["background",{"_index":1271,"title":{},"body":{"index.html":{}}}],["bar",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":1070,"title":{},"body":{"index.html":{}}}],["baseexceptionfilter",{"_index":138,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["bash",{"_index":1142,"title":{},"body":{"index.html":{}}}],["before",{"_index":545,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["beginning",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["behaviorsubject",{"_index":470,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["behaviorsubject(0",{"_index":474,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["behaviorsubject(null",{"_index":471,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["behaviour",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["behind",{"_index":1127,"title":{},"body":{"index.html":{}}}],["below",{"_index":1057,"title":{},"body":{"index.html":{}}}],["berlin/iqb",{"_index":1147,"title":{},"body":{"index.html":{}}}],["berlin/testcenter",{"_index":889,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["between",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["beyond",{"_index":1117,"title":{},"body":{"index.html":{}}}],["binds",{"_index":1108,"title":{},"body":{"index.html":{}}}],["block",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["blocking",{"_index":1264,"title":{},"body":{"index.html":{}}}],["body",{"_index":210,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/TesteeController.html":{}}}],["bogus",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["boms",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["booklet",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["booklet.xml",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["booklet.xsd",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["bookletname",{"_index":222,"title":{},"body":{"interfaces/SessionChange.html":{}}}],["boolean",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["bootstrap",{"_index":1043,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["broadcast_service_uri_subscribe",{"_index":1240,"title":{},"body":{"index.html":{}}}],["broadcastcommandtotestees",{"_index":405,"title":{},"body":{"injectables/TesteeService.html":{}}}],["broadcastcommandtotestees(command",{"_index":414,"title":{},"body":{"injectables/TesteeService.html":{}}}],["broadcasting",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"interfaces/SessionChange.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["broadcastingevent",{"_index":482,"title":{},"body":{"classes/WebsocketGateway.html":{},"miscellaneous/typealiases.html":{}}}],["broadcastserviceuri",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["broadcastserviceuripush",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["broadcastserviceurisubscribe",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["broadcasttestsessionstogroupmonitors",{"_index":279,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["broadcasttestsessionstogroupmonitors(groupname",{"_index":291,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["broadcasttoregistered",{"_index":463,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["broadcasttoregistered(tokens",{"_index":480,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["browse",{"_index":1378,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":849,"title":{},"body":{"changelog.html":{},"index.html":{},"modules.html":{}}}],["bug",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["bugfixes",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1200,"title":{},"body":{"index.html":{}}}],["build",{"_index":1204,"title":{},"body":{"index.html":{}}}],["building",{"_index":1293,"title":{},"body":{"index.html":{}}}],["built",{"_index":1138,"title":{},"body":{"index.html":{}}}],["button",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1318,"title":{},"body":{"license.html":{}}}],["called",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":139,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["catch(exception",{"_index":147,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["certain",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["certificates",{"_index":1247,"title":{},"body":{"index.html":{}}}],["change",{"_index":260,"title":{},"body":{"controllers/TestSessionController.html":{},"changelog.html":{},"index.html":{}}}],["change.interface",{"_index":264,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{}}}],["change.interface.ts",{"_index":221,"title":{},"body":{"interfaces/SessionChange.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["changed",{"_index":550,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changelog",{"_index":539,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["changing",{"_index":1178,"title":{},"body":{"index.html":{}}}],["charge",{"_index":1327,"title":{},"body":{"license.html":{}}}],["check",{"_index":583,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["check/reports",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["checked",{"_index":1153,"title":{},"body":{"index.html":{}}}],["checks",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["choice",{"_index":1144,"title":{},"body":{"index.html":{}}}],["chunk",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["chunkwise",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1367,"title":{},"body":{"license.html":{}}}],["class",{"_index":49,"title":{"classes/ErrorHandler.html":{},"classes/WebsocketGateway.html":{}},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"coverage.html":{}}}],["classes",{"_index":134,"title":{},"body":{"classes/ErrorHandler.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"overview.html":{}}}],["clean",{"_index":240,"title":{},"body":{"controllers/SystemController.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}}}],["clean(@req",{"_index":246,"title":{},"body":{"controllers/SystemController.html":{}}}],["clean(request",{"_index":241,"title":{},"body":{"controllers/SystemController.html":{}}}],["client",{"_index":491,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["client.count",{"_index":535,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["clientlost",{"_index":460,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["clients",{"_index":183,"title":{},"body":{"controllers/MonitorController.html":{},"classes/WebsocketGateway.html":{}}}],["clients(@req",{"_index":216,"title":{},"body":{"controllers/MonitorController.html":{}}}],["clients(request",{"_index":187,"title":{},"body":{"controllers/MonitorController.html":{}}}],["clientscount",{"_index":461,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["clone",{"_index":1088,"title":{},"body":{"index.html":{}}}],["closing",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":741,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["codes",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["command",{"_index":53,"title":{"interfaces/Command.html":{}},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"injectables/TesteeService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["command.interface",{"_index":113,"title":{},"body":{"controllers/CommandController.html":{}}}],["command/command.controller",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["command/command.interface",{"_index":426,"title":{},"body":{"injectables/TesteeService.html":{}}}],["commandcontroller",{"_index":22,"title":{"controllers/CommandController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"coverage.html":{}}}],["commandkeywords",{"_index":67,"title":{},"body":{"interfaces/Command.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commandkeywords)[number",{"_index":74,"title":{},"body":{"interfaces/Command.html":{}}}],["commands",{"_index":449,"title":{},"body":{"injectables/TesteeService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["common/error",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["common/websocket.gateway",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"controllers/SystemController.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}}}],["compare",{"_index":1181,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["completely",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["completeness",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":1082,"title":{},"body":{"index.html":{}}}],["components",{"_index":1071,"title":{},"body":{"index.html":{}}}],["compose",{"_index":1114,"title":{},"body":{"index.html":{}}}],["compose.prod.nontls.yml",{"_index":1314,"title":{},"body":{"index.html":{}}}],["compose.prod.yml",{"_index":1190,"title":{},"body":{"index.html":{}}}],["compose.yml",{"_index":1313,"title":{},"body":{"index.html":{}}}],["compose_http_timeout=300",{"_index":1297,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1167,"title":{},"body":{"index.html":{}}}],["concat(object.values(groupmonitors",{"_index":356,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["conditions",{"_index":1347,"title":{},"body":{"license.html":{}}}],["config",{"_index":835,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["config/cert_config.yml",{"_index":1251,"title":{},"body":{"index.html":{}}}],["config/certs",{"_index":1250,"title":{},"body":{"index.html":{}}}],["config/system.json",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":1150,"title":{},"body":{"index.html":{}}}],["connected",{"_index":517,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["connection",{"_index":436,"title":{},"body":{"injectables/TesteeService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["connects",{"_index":1077,"title":{},"body":{"index.html":{}}}],["consist",{"_index":1101,"title":{},"body":{"index.html":{}}}],["consistency",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["console",{"_index":1263,"title":{},"body":{"index.html":{}}}],["const",{"_index":66,"title":{},"body":{"interfaces/Command.html":{},"classes/ErrorHandler.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["constellations",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["constraint",{"_index":1300,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":114,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{}}}],["constructor(eventsgateway",{"_index":140,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["constructor(websocketgateway",{"_index":283,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}}}],["contain",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["containers",{"_index":1163,"title":{},"body":{"index.html":{}}}],["contains",{"_index":627,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["content",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["contents",{"_index":997,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["contenttype('text",{"_index":171,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["context",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1372,"title":{},"body":{"license.html":{}}}],["controller",{"_index":93,"title":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{},"controllers/VersionController.html":{}},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{},"controllers/VersionController.html":{},"coverage.html":{}}}],["controllers",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{},"controllers/VersionController.html":{},"overview.html":{}}}],["copies",{"_index":1342,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1330,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1317,"title":{},"body":{"license.html":{}}}],["correct",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["correctly",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["count",{"_index":536,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["coverage",{"_index":1031,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":1220,"title":{},"body":{"index.html":{}}}],["credentials.database",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["critical",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["csv",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["csvs",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["ctrl+c",{"_index":1276,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":156,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["ctx.getresponse",{"_index":158,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["current",{"_index":758,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["currently",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["curtain",{"_index":1128,"title":{},"body":{"index.html":{}}}],["customization",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["customize",{"_index":1223,"title":{},"body":{"index.html":{}}}],["customtexts",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["customziation",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1368,"title":{},"body":{"license.html":{}}}],["data",{"_index":124,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"index.html":{}}}],["data/player",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["database",{"_index":689,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dataparts",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["dataservice",{"_index":201,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{}}}],["db",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1332,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1375,"title":{},"body":{"license.html":{}}}],["debug",{"_index":72,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":99,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{}}}],["deeper",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":143,"title":{},"body":{"classes/ErrorHandler.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["defined",{"_index":101,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{}}}],["defines",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["defintion",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":347,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"index.html":{}}}],["demand",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["demo",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["depending",{"_index":699,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deprecated",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["detached",{"_index":1261,"title":{},"body":{"index.html":{}}}],["detachedstopping",{"_index":1273,"title":{},"body":{"index.html":{}}}],["detail",{"_index":1199,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1219,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1205,"title":{},"body":{"index.html":{}}}],["development",{"_index":1194,"title":{},"body":{"index.html":{}}}],["didn't",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["different",{"_index":1253,"title":{},"body":{"index.html":{}}}],["directdownloadurl",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["directly",{"_index":1287,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1143,"title":{},"body":{"index.html":{}}}],["disable",{"_index":361,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["disconnectall",{"_index":464,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["disconnectclient",{"_index":465,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["disconnectclient(monitortoken",{"_index":485,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["disconnected",{"_index":521,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["disconnectedtoken",{"_index":518,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["disconnectnotificationuri",{"_index":374,"title":{},"body":{"interfaces/Testee.html":{},"injectables/TesteeService.html":{}}}],["display",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["displayed",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["distribute",{"_index":1339,"title":{},"body":{"license.html":{}}}],["docker",{"_index":1103,"title":{},"body":{"index.html":{}}}],["document",{"_index":1105,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1032,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":1080,"title":{},"body":{"index.html":{}}}],["done",{"_index":935,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dont't",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["download",{"_index":1136,"title":{},"body":{"index.html":{}}}],["e",{"_index":510,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["e2e",{"_index":1210,"title":{},"body":{"index.html":{}}}],["each",{"_index":76,"title":{},"body":{"interfaces/Command.html":{}}}],["eager",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["ease",{"_index":1096,"title":{},"body":{"index.html":{}}}],["edit",{"_index":1189,"title":{},"body":{"index.html":{}}}],["edited",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["editing",{"_index":1214,"title":{},"body":{"index.html":{}}}],["educational",{"_index":1321,"title":{},"body":{"license.html":{}}}],["eg",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["elements",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":885,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["endpoint",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["endpoints",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["enjoy",{"_index":1168,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":1154,"title":{},"body":{"index.html":{}}}],["enter",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["entered",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["entering",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["env",{"_index":1227,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1122,"title":{},"body":{"index.html":{}}}],["era",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["erroneous",{"_index":1306,"title":{},"body":{"index.html":{}}}],["error",{"_index":439,"title":{},"body":{"injectables/TesteeService.html":{},"changelog.html":{},"index.html":{}}}],["error.message",{"_index":442,"title":{},"body":{"injectables/TesteeService.html":{}}}],["errorhandler",{"_index":37,"title":{"classes/ErrorHandler.html":{}},"body":{"modules/AppModule.html":{},"classes/ErrorHandler.html":{},"coverage.html":{}}}],["escape",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["eslint",{"_index":360,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["especially",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":1095,"title":{},"body":{"index.html":{}}}],["even",{"_index":82,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{},"index.html":{}}}],["event",{"_index":481,"title":{},"body":{"classes/WebsocketGateway.html":{},"license.html":{}}}],["eventsgateway",{"_index":142,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["everyone",{"_index":1174,"title":{},"body":{"index.html":{}}}],["everything",{"_index":761,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["everytime",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["everywhere",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["example",{"_index":1308,"title":{},"body":{"index.html":{}}}],["exception",{"_index":151,"title":{},"body":{"classes/ErrorHandler.html":{},"changelog.html":{}}}],["exception.message",{"_index":168,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["exception.status",{"_index":161,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["exist",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["existing",{"_index":551,"title":{},"body":{"changelog.html":{}}}],["expect",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["explain",{"_index":1115,"title":{},"body":{"index.html":{}}}],["export",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"interfaces/SessionChange.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"index.html":{}}}],["express",{"_index":111,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{},"controllers/VersionController.html":{},"license.html":{}}}],["extended",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["extends",{"_index":137,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["external",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":1312,"title":{},"body":{"index.html":{}}}],["fail",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["fall",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["familiar",{"_index":1211,"title":{},"body":{"index.html":{}}}],["feature",{"_index":1085,"title":{},"body":{"index.html":{}}}],["features",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["fetch",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["fetching",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["fewer",{"_index":1132,"title":{},"body":{"index.html":{}}}],["field",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"interfaces/SessionChange.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["file's",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":928,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["filter((v",{"_index":357,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["filter(testee",{"_index":445,"title":{},"body":{"injectables/TesteeService.html":{}}}],["find",{"_index":1073,"title":{},"body":{"index.html":{}}}],["first",{"_index":321,"title":{},"body":{"injectables/TestSessionService.html":{},"changelog.html":{},"index.html":{}}}],["fitness",{"_index":1360,"title":{},"body":{"license.html":{}}}],["fix",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":573,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fixes",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":1102,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1113,"title":{},"body":{"index.html":{}}}],["following",{"_index":958,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["font",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["forbids",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["force",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["force_presentation_complete",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["force_response_complete",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["formally",{"_index":332,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["format",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["forwards",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["four",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":1206,"title":{},"body":{"index.html":{}}}],["free",{"_index":1262,"title":{},"body":{"index.html":{},"license.html":{}}}],["fresh",{"_index":1294,"title":{},"body":{"index.html":{}}}],["frist",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["front",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["frontend",{"_index":560,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["frontend.xml",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["frontend/issues/261",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["frontend/src/environments/environment.ts",{"_index":1229,"title":{},"body":{"index.html":{}}}],["function",{"_index":85,"title":{},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"interfaces/SessionChange.html":{},"interfaces/Testee.html":{},"classes/WebsocketGateway.html":{},"coverage.html":{}}}],["functionality",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":956,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":1345,"title":{},"body":{"license.html":{}}}],["future",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["g",{"_index":355,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["galore",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":801,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["generic",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["get('/clients",{"_index":188,"title":{},"body":{"controllers/MonitorController.html":{}}}],["get('/monitors",{"_index":194,"title":{},"body":{"controllers/MonitorController.html":{}}}],["get('/test",{"_index":255,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["get('/testees",{"_index":385,"title":{},"body":{"controllers/TesteeController.html":{}}}],["get('/version",{"_index":452,"title":{},"body":{"controllers/VersionController.html":{}}}],["getclienttokens",{"_index":280,"title":{},"body":{"injectables/TestSessionService.html":{},"classes/WebsocketGateway.html":{}}}],["getdisconnectionobservable",{"_index":466,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["getlasturlpart",{"_index":1041,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getlasturlpart(message.url",{"_index":513,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["getlasturlpart(url",{"_index":507,"title":{},"body":{"classes/WebsocketGateway.html":{},"miscellaneous/functions.html":{}}}],["getmonitors",{"_index":281,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["gets",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["gettestees",{"_index":406,"title":{},"body":{"injectables/TesteeService.html":{}}}],["gettestsessions",{"_index":253,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{}}}],["getting",{"_index":537,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":1212,"title":{},"body":{"index.html":{}}}],["given",{"_index":130,"title":{},"body":{"controllers/CommandController.html":{}}}],["gives",{"_index":1195,"title":{},"body":{"index.html":{}}}],["go",{"_index":747,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["goal",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["goto",{"_index":69,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/variables.html":{}}}],["granted",{"_index":1326,"title":{},"body":{"license.html":{}}}],["great",{"_index":1202,"title":{},"body":{"index.html":{}}}],["group",{"_index":315,"title":{},"body":{"injectables/TestSessionService.html":{},"changelog.html":{}}}],["grouplabel",{"_index":223,"title":{},"body":{"interfaces/SessionChange.html":{}}}],["groupmonitors",{"_index":354,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["groupname",{"_index":224,"title":{},"body":{"interfaces/SessionChange.html":{},"injectables/TestSessionService.html":{}}}],["groups",{"_index":177,"title":{},"body":{"interfaces/Monitor.html":{}}}],["grouptestsessions",{"_index":367,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["handle",{"_index":609,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["handleconnection",{"_index":467,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["handleconnection(client",{"_index":490,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["handledisconnect",{"_index":468,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["handledisconnect(client",{"_index":494,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["handler",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.ts",{"_index":136,"title":{},"body":{"classes/ErrorHandler.html":{},"coverage.html":{}}}],["handler.ts:17",{"_index":146,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["handler.ts:19",{"_index":150,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["handler.ts:9",{"_index":141,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["handling",{"_index":721,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["handy",{"_index":1062,"title":{},"body":{"index.html":{}}}],["hence",{"_index":324,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["here",{"_index":642,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["hereby",{"_index":1325,"title":{},"body":{"license.html":{}}}],["hindering",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["hint",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1365,"title":{},"body":{"license.html":{}}}],["host",{"_index":148,"title":{},"body":{"classes/ErrorHandler.html":{},"index.html":{}}}],["host.switchtohttp",{"_index":157,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["hostname",{"_index":1233,"title":{},"body":{"index.html":{}}}],["hotfix",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["http",{"_index":409,"title":{},"body":{"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["http://localhost",{"_index":1281,"title":{},"body":{"index.html":{}}}],["http://localhost/api",{"_index":1289,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":107,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["httpexception('invalid",{"_index":123,"title":{},"body":{"controllers/CommandController.html":{}}}],["httpexception('no",{"_index":128,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TesteeController.html":{}}}],["httpexception('not",{"_index":205,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["httpmodule",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["https",{"_index":1248,"title":{},"body":{"index.html":{}}}],["https://github.com/iqb",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["https://raw.githubusercontent.com/iqb",{"_index":1146,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":410,"title":{},"body":{"injectables/TesteeService.html":{}}}],["httpstatus",{"_index":152,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.bad_request",{"_index":166,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.expectation_failed",{"_index":165,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.internal_server_error",{"_index":160,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.not_acceptable",{"_index":164,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.not_found",{"_index":162,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.service_unavailable",{"_index":163,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["hub",{"_index":1140,"title":{},"body":{"index.html":{}}}],["id",{"_index":59,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{}}}],["identifier",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["iframe",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":1193,"title":{},"body":{"index.html":{}}}],["images",{"_index":1139,"title":{},"body":{"index.html":{}}}],["implement",{"_index":1083,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":457,"title":{},"body":{"classes/WebsocketGateway.html":{},"changelog.html":{}}}],["implied",{"_index":1356,"title":{},"body":{"license.html":{}}}],["import",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{}}}],["important",{"_index":1226,"title":{},"body":{"index.html":{}}}],["importantly",{"_index":1224,"title":{},"body":{"index.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["improved",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["improvement",{"_index":1323,"title":{},"body":{"license.html":{}}}],["include",{"_index":1209,"title":{},"body":{"index.html":{}}}],["included",{"_index":1350,"title":{},"body":{"license.html":{}}}],["including",{"_index":1333,"title":{},"body":{"license.html":{}}}],["incomingmessage",{"_index":492,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["increase",{"_index":1296,"title":{},"body":{"index.html":{}}}],["index",{"_index":56,"title":{"index.html":{}},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"interfaces/SessionChange.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"interfaces/SessionChange.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{}}}],["information",{"_index":925,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["init",{"_index":1216,"title":{},"body":{"index.html":{}}}],["init/install",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["injectable",{"_index":272,"title":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"coverage.html":{}}}],["injectables",{"_index":273,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"overview.html":{}}}],["insert",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":1058,"title":{},"body":{"index.html":{}}}],["install.shnow",{"_index":1152,"title":{},"body":{"index.html":{}}}],["install/compose",{"_index":1092,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1104,"title":{},"body":{"index.html":{}}}],["installations",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["installed",{"_index":1207,"title":{},"body":{"index.html":{}}}],["instead",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["institute",{"_index":1320,"title":{},"body":{"license.html":{}}}],["instructions",{"_index":1056,"title":{},"body":{"index.html":{}}}],["interface",{"_index":52,"title":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"interfaces/SessionChange.html":{},"interfaces/Testee.html":{}},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"interfaces/SessionChange.html":{},"interfaces/Testee.html":{},"changelog.html":{},"coverage.html":{}}}],["interfaces",{"_index":54,"title":{},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"interfaces/SessionChange.html":{},"interfaces/Testee.html":{},"classes/WebsocketGateway.html":{},"overview.html":{}}}],["introduced",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["ip",{"_index":1234,"title":{},"body":{"index.html":{}}}],["iqb",{"_index":1061,"title":{},"body":{"index.html":{},"license.html":{}}}],["iscommand",{"_index":112,"title":{},"body":{"controllers/CommandController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["iscommand(arg",{"_index":86,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/functions.html":{}}}],["iscommand(request.body.command",{"_index":121,"title":{},"body":{"controllers/CommandController.html":{}}}],["ismonitor",{"_index":199,"title":{},"body":{"controllers/MonitorController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ismonitor(arg",{"_index":179,"title":{},"body":{"interfaces/Monitor.html":{},"miscellaneous/functions.html":{}}}],["ismonitor(request.body",{"_index":204,"title":{},"body":{"controllers/MonitorController.html":{}}}],["issessionchange",{"_index":262,"title":{},"body":{"controllers/TestSessionController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["issessionchange(arg",{"_index":235,"title":{},"body":{"interfaces/SessionChange.html":{},"miscellaneous/functions.html":{}}}],["issessionchange(request.body",{"_index":267,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["issues",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["ist",{"_index":1078,"title":{},"body":{"index.html":{}}}],["istestee",{"_index":391,"title":{},"body":{"controllers/TesteeController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istestee(arg",{"_index":375,"title":{},"body":{"interfaces/Testee.html":{},"miscellaneous/functions.html":{}}}],["istestee(request.body",{"_index":395,"title":{},"body":{"controllers/TesteeController.html":{}}}],["it's",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["items",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["itself",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["json.stringify",{"_index":523,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["json.stringify(request.body",{"_index":269,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["keep",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["kept",{"_index":1231,"title":{},"body":{"index.html":{}}}],["key",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["keyword",{"_index":60,"title":{},"body":{"interfaces/Command.html":{}}}],["kind",{"_index":1355,"title":{},"body":{"license.html":{}}}],["known",{"_index":328,"title":{},"body":{"injectables/TestSessionService.html":{},"changelog.html":{}}}],["label",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["landing",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["later",{"_index":1156,"title":{},"body":{"index.html":{}}}],["latest",{"_index":1183,"title":{},"body":{"index.html":{}}}],["leaving",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["legal",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["len",{"_index":365,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["liability",{"_index":1369,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1366,"title":{},"body":{"license.html":{}}}],["license",{"_index":1315,"title":{"license.html":{}},"body":{"license.html":{}}}],["limbo",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":1334,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1357,"title":{},"body":{"license.html":{}}}],["line",{"_index":363,"title":{},"body":{"injectables/TestSessionService.html":{},"index.html":{}}}],["lines",{"_index":1191,"title":{},"body":{"index.html":{}}}],["links",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["linux",{"_index":1277,"title":{},"body":{"index.html":{}}}],["lite",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":233,"title":{},"body":{"interfaces/SessionChange.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["loaded",{"_index":743,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loading",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":1182,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":1239,"title":{},"body":{"index.html":{}}}],["lock_test_on_termination",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["locked",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":967,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["logger",{"_index":108,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["logger(commandcontroller.name",{"_index":118,"title":{},"body":{"controllers/CommandController.html":{}}}],["logger(errorhandler.name",{"_index":145,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["logger(monitorcontroller.name",{"_index":202,"title":{},"body":{"controllers/MonitorController.html":{}}}],["logger(systemcontroller.name",{"_index":245,"title":{},"body":{"controllers/SystemController.html":{}}}],["logger(testeecontroller.name",{"_index":393,"title":{},"body":{"controllers/TesteeController.html":{}}}],["logger(testeeservice.name",{"_index":423,"title":{},"body":{"injectables/TesteeService.html":{}}}],["logger(testsessioncontroller.name",{"_index":265,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["logger(testsessionservice.name",{"_index":300,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["logger(websocketgateway.name",{"_index":476,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["logging",{"_index":1267,"title":{},"body":{"index.html":{}}}],["login",{"_index":616,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["logins",{"_index":964,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["logs",{"_index":796,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["look",{"_index":1126,"title":{},"body":{"index.html":{}}}],["lost",{"_index":437,"title":{},"body":{"injectables/TesteeService.html":{},"changelog.html":{}}}],["machine",{"_index":1235,"title":{},"body":{"index.html":{}}}],["made",{"_index":1020,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["main",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["maintain",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":77,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{},"index.html":{}}}],["makefile",{"_index":1257,"title":{},"body":{"index.html":{}}}],["makes",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["management",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["mandatory",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["manipulate",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":1188,"title":{},"body":{"index.html":{}}}],["map",{"_index":504,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["map(testee",{"_index":447,"title":{},"body":{"injectables/TesteeService.html":{}}}],["matching",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"interfaces/SessionChange.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":364,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["means",{"_index":1125,"title":{},"body":{"index.html":{}}}],["meant",{"_index":1221,"title":{},"body":{"index.html":{}}}],["meet",{"_index":1201,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1359,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1337,"title":{},"body":{"license.html":{}}}],["mergesessionchanges",{"_index":305,"title":{},"body":{"injectables/TestSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mergesessionchanges(testsession",{"_index":331,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["mess",{"_index":1099,"title":{},"body":{"index.html":{}}}],["message",{"_index":167,"title":{},"body":{"classes/ErrorHandler.html":{},"classes/WebsocketGateway.html":{}}}],["messagebody",{"_index":499,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["metadata",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":95,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{}}}],["migrated",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["migration",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["minutes",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1047,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1316,"title":{},"body":{"license.html":{}}}],["mode",{"_index":84,"title":{},"body":{"interfaces/Command.html":{},"interfaces/SessionChange.html":{},"changelog.html":{},"index.html":{}}}],["modify",{"_index":1336,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["moment",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["monitor",{"_index":175,"title":{"interfaces/Monitor.html":{}},"body":{"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"injectables/TestSessionService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["monitor.groups.foreach((group",{"_index":341,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["monitor.interface",{"_index":200,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitor/group/{group_name}/tests/unlock",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["monitor/monitor.controller",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["monitor/monitor.interface",{"_index":304,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["monitorcontroller",{"_index":20,"title":{"controllers/MonitorController.html":{}},"body":{"modules/AppModule.html":{},"controllers/MonitorController.html":{},"coverage.html":{}}}],["monitored",{"_index":325,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["monitorregister",{"_index":184,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitorregister(@req",{"_index":203,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitorregister(request",{"_index":190,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitors",{"_index":185,"title":{},"body":{"controllers/MonitorController.html":{},"injectables/TestSessionService.html":{},"controllers/VersionController.html":{}}}],["monitors(@req",{"_index":214,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/VersionController.html":{}}}],["monitors(request",{"_index":193,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/VersionController.html":{}}}],["monitortoken",{"_index":299,"title":{},"body":{"injectables/TestSessionService.html":{},"classes/WebsocketGateway.html":{}}}],["monitorunregister",{"_index":186,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitorunregister(@req",{"_index":209,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitorunregister(request",{"_index":196,"title":{},"body":{"controllers/MonitorController.html":{}}}],["more",{"_index":904,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mysql",{"_index":1157,"title":{},"body":{"index.html":{}}}],["name",{"_index":104,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["navigation",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["navigational",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["navigationleaverestrictions",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":854,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["needed",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":329,"title":{},"body":{"injectables/TestSessionService.html":{},"index.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{}}}],["nestjs/core",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorHandler.html":{}}}],["nestjs/websockets",{"_index":502,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["never",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":117,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{}}}],["newer",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":362,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["node.js",{"_index":1081,"title":{},"body":{"index.html":{}}}],["nonamespaceschemalocation",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["noninfringement",{"_index":1363,"title":{},"body":{"license.html":{}}}],["nontls",{"_index":1311,"title":{},"body":{"index.html":{}}}],["note",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["noteworthy",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["notice",{"_index":1349,"title":{},"body":{"license.html":{}}}],["notify",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["notifydisconnection",{"_index":407,"title":{},"body":{"injectables/TesteeService.html":{}}}],["notifydisconnection(testeetoken",{"_index":418,"title":{},"body":{"injectables/TesteeService.html":{}}}],["now",{"_index":578,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["now.config",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":1091,"title":{},"body":{"index.html":{}}}],["number",{"_index":65,"title":{},"body":{"interfaces/Command.html":{},"interfaces/SessionChange.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{}}}],["numbers",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["object.keys(this.clients",{"_index":532,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["object.keys(this.clients).foreach((token",{"_index":519,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["object.keys(this.monitors).foreach((group",{"_index":345,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["object.keys(this.monitors[group]).length",{"_index":348,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["object.keys(this.monitors[groupname",{"_index":337,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["object.values(this.monitors",{"_index":351,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["object.values(this.testees",{"_index":432,"title":{},"body":{"injectables/TesteeService.html":{}}}],["object.values(this.testsessions",{"_index":359,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["object.values(this.testsessions[groupname",{"_index":339,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["observable",{"_index":489,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["obtain",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":1329,"title":{},"body":{"license.html":{}}}],["oder",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["ofunits",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["older",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["once",{"_index":81,"title":{},"body":{"interfaces/Command.html":{}}}],["one",{"_index":79,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{},"index.html":{}}}],["ones",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["ongatewayconnection",{"_index":458,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["ongatewaydisconnect",{"_index":459,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["open",{"_index":1280,"title":{},"body":{"index.html":{}}}],["operating",{"_index":1121,"title":{},"body":{"index.html":{}}}],["operator's",{"_index":1086,"title":{},"body":{"index.html":{}}}],["optional",{"_index":61,"title":{},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"interfaces/SessionChange.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1196,"title":{},"body":{"index.html":{}}}],["order",{"_index":580,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["os",{"_index":1268,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":688,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["out",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":608,"title":{"overview.html":{}},"body":{"changelog.html":{},"overview.html":{}}}],["package.json",{"_index":455,"title":{},"body":{"controllers/VersionController.html":{}}}],["page",{"_index":718,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["paradigm",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["parameter",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":103,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["paremater",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["part",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1361,"title":{},"body":{"license.html":{}}}],["password",{"_index":1159,"title":{},"body":{"index.html":{}}}],["passwords",{"_index":1225,"title":{},"body":{"index.html":{}}}],["patch",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["patching",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":1288,"title":{},"body":{"index.html":{}}}],["pause",{"_index":68,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":522,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["perfect",{"_index":1203,"title":{},"body":{"index.html":{}}}],["performance",{"_index":1130,"title":{},"body":{"index.html":{}}}],["performed",{"_index":80,"title":{},"body":{"interfaces/Command.html":{}}}],["permission",{"_index":1324,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1343,"title":{},"body":{"license.html":{}}}],["person",{"_index":1328,"title":{},"body":{"license.html":{}}}],["personid",{"_index":225,"title":{},"body":{"interfaces/SessionChange.html":{}}}],["personlabel",{"_index":226,"title":{},"body":{"interfaces/SessionChange.html":{}}}],["persons",{"_index":1344,"title":{},"body":{"license.html":{}}}],["php",{"_index":913,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["php+database",{"_index":1075,"title":{},"body":{"index.html":{}}}],["place",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["placed",{"_index":1249,"title":{},"body":{"index.html":{}}}],["player",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["player's",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["players",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":1171,"title":{},"body":{"index.html":{}}}],["polling",{"_index":83,"title":{},"body":{"interfaces/Command.html":{}}}],["portions",{"_index":1352,"title":{},"body":{"license.html":{}}}],["possible",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["post",{"_index":109,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{},"changelog.html":{}}}],["post('/command",{"_index":100,"title":{},"body":{"controllers/CommandController.html":{}}}],["post('/monitor/register",{"_index":191,"title":{},"body":{"controllers/MonitorController.html":{}}}],["post('/monitor/unregister",{"_index":197,"title":{},"body":{"controllers/MonitorController.html":{}}}],["post('/push/session",{"_index":259,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["post('/system/clean",{"_index":242,"title":{},"body":{"controllers/SystemController.html":{}}}],["post('/testee/register",{"_index":382,"title":{},"body":{"controllers/TesteeController.html":{}}}],["post('/testee/unregister",{"_index":388,"title":{},"body":{"controllers/TesteeController.html":{}}}],["postcommand",{"_index":96,"title":{},"body":{"controllers/CommandController.html":{}}}],["postcommand(@req",{"_index":119,"title":{},"body":{"controllers/CommandController.html":{}}}],["postcommand(request",{"_index":97,"title":{},"body":{"controllers/CommandController.html":{}}}],["pre",{"_index":1137,"title":{},"body":{"index.html":{}}}],["preconditions",{"_index":1112,"title":{},"body":{"index.html":{}}}],["prepared",{"_index":1172,"title":{},"body":{"index.html":{}}}],["presentation",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":1303,"title":{},"body":{"index.html":{}}}],["previously",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":115,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["procedures",{"_index":1109,"title":{},"body":{"index.html":{}}}],["proceed",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["process",{"_index":1097,"title":{},"body":{"index.html":{}}}],["processes",{"_index":1270,"title":{},"body":{"index.html":{}}}],["prod",{"_index":1310,"title":{},"body":{"index.html":{}}}],["produce",{"_index":1307,"title":{},"body":{"index.html":{}}}],["production",{"_index":1124,"title":{},"body":{"index.html":{}}}],["program",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["progress",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":1149,"title":{},"body":{"index.html":{}}}],["properties",{"_index":57,"title":{},"body":{"interfaces/Command.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"interfaces/SessionChange.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["provide",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":1353,"title":{},"body":{"license.html":{}}}],["providers",{"_index":17,"title":{},"body":{"modules/AppModule.html":{}}}],["provides",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":1338,"title":{},"body":{"license.html":{}}}],["published",{"_index":1079,"title":{},"body":{"index.html":{}}}],["pull",{"_index":1243,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1362,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1222,"title":{},"body":{"index.html":{}}}],["pushsessionchange",{"_index":254,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["pushsessionchange(@req",{"_index":266,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["pushsessionchange(request",{"_index":258,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["put",{"_index":969,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["quality",{"_index":1322,"title":{},"body":{"license.html":{}}}],["ran",{"_index":1309,"title":{},"body":{"index.html":{}}}],["re",{"_index":1301,"title":{},"body":{"index.html":{}}}],["reach",{"_index":1286,"title":{},"body":{"index.html":{}}}],["reachable",{"_index":1236,"title":{},"body":{"index.html":{}}}],["read",{"_index":1175,"title":{},"body":{"index.html":{}}}],["readable",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["reading",{"_index":1107,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":116,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["ready",{"_index":1155,"title":{},"body":{"index.html":{}}}],["rebuild",{"_index":1302,"title":{},"body":{"index.html":{}}}],["recursivemore",{"_index":1244,"title":{},"body":{"index.html":{}}}],["redesign",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":352,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["refactoring",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["refactors",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":1259,"title":{},"body":{"index.html":{}}}],["reference",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["regard",{"_index":1133,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["registered:${json.stringify(request.body",{"_index":207,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/TesteeController.html":{}}}],["relaod/re",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":1184,"title":{},"body":{"index.html":{}}}],["reload",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["remaining",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["remainsbooklet",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["removed",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["removemonitor",{"_index":282,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["removemonitor(monitortoken",{"_index":297,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["removetestee",{"_index":408,"title":{},"body":{"injectables/TesteeService.html":{}}}],["removetestee(testeetoken",{"_index":421,"title":{},"body":{"injectables/TesteeService.html":{}}}],["renamed",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["repaired",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":1238,"title":{},"body":{"index.html":{}}}],["reports",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["repositories",{"_index":1089,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1074,"title":{},"body":{"index.html":{}}}],["req",{"_index":110,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{},"controllers/VersionController.html":{}}}],["request",{"_index":98,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{},"controllers/VersionController.html":{}}}],["request.body",{"_index":132,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TesteeController.html":{}}}],["request.body.command",{"_index":120,"title":{},"body":{"controllers/CommandController.html":{}}}],["request.body.testids",{"_index":126,"title":{},"body":{"controllers/CommandController.html":{}}}],["requests",{"_index":1076,"title":{},"body":{"index.html":{}}}],["required",{"_index":1090,"title":{},"body":{"index.html":{}}}],["requiredendpoints",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["requirements",{"_index":912,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["requires",{"_index":1141,"title":{},"body":{"index.html":{}}}],["resemble",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resources",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["responded",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["response",{"_index":153,"title":{},"body":{"classes/ErrorHandler.html":{},"changelog.html":{}}}],["responses",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["rest",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["restart",{"_index":1185,"title":{},"body":{"index.html":{}}}],["restore",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["restore_current_page_on_return",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["restored",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":655,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["results",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"interfaces/SessionChange.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":71,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["retrieved",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["retrieving",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["return",{"_index":88,"title":{},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"interfaces/SessionChange.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["returns",{"_index":105,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"miscellaneous/functions.html":{}}}],["reviews",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["rid",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":1170,"title":{},"body":{"index.html":{}}}],["rights",{"_index":1335,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["role",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":1158,"title":{},"body":{"index.html":{}}}],["routes",{"_index":1094,"title":{},"body":{"index.html":{}}}],["routing",{"_index":1166,"title":{},"body":{"index.html":{}}}],["run",{"_index":965,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rundocker",{"_index":1162,"title":{},"body":{"index.html":{}}}],["running",{"_index":1279,"title":{},"body":{"index.html":{}}}],["runor",{"_index":1272,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":503,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["rxjs/operators",{"_index":505,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["sample",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["sandboxing",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["schema/patches.mysql.d/11.0.0",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["schema/patches.mysql.d/11.1.0",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["schema/patches.mysql.d/12.0.0",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["schema/patches.mysql.sql",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["schemas",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":1118,"title":{},"body":{"index.html":{}}}],["script",{"_index":860,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scripts",{"_index":906,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scripts/master/install.shalso",{"_index":1148,"title":{},"body":{"index.html":{}}}],["scripts/sql",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["second",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":570,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["seen",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":1341,"title":{},"body":{"license.html":{}}}],["send",{"_index":441,"title":{},"body":{"injectables/TesteeService.html":{}}}],["send(message",{"_index":172,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["sending",{"_index":1269,"title":{},"body":{"index.html":{}}}],["sense",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["sensitive",{"_index":1228,"title":{},"body":{"index.html":{}}}],["separated",{"_index":1067,"title":{},"body":{"index.html":{}}}],["separately",{"_index":1295,"title":{},"body":{"index.html":{}}}],["server",{"_index":462,"title":{},"body":{"classes/WebsocketGateway.html":{},"index.html":{}}}],["server's",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":850,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["service/.../command.interface.ts",{"_index":1050,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/.../interfaces.ts",{"_index":1382,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["service/.../main.ts",{"_index":1048,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/.../monitor.interface.ts",{"_index":1051,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/.../session",{"_index":1052,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/.../test",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service/.../testee.interface.ts",{"_index":1053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/.../websocket.gateway.ts",{"_index":1049,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/src/app.module.ts",{"_index":16,"title":{},"body":{"modules/AppModule.html":{}}}],["service/src/command/command.controller.ts",{"_index":94,"title":{},"body":{"controllers/CommandController.html":{},"coverage.html":{}}}],["service/src/command/command.controller.ts:17",{"_index":102,"title":{},"body":{"controllers/CommandController.html":{}}}],["service/src/command/command.interface.ts",{"_index":55,"title":{},"body":{"interfaces/Command.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/src/common/error",{"_index":135,"title":{},"body":{"classes/ErrorHandler.html":{},"coverage.html":{}}}],["service/src/common/interfaces.ts",{"_index":1383,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["service/src/common/websocket.gateway.ts",{"_index":456,"title":{},"body":{"classes/WebsocketGateway.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["service/src/common/websocket.gateway.ts:22",{"_index":477,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:25",{"_index":479,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:27",{"_index":473,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:28",{"_index":475,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:29",{"_index":472,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:31",{"_index":493,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:39",{"_index":495,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:55",{"_index":483,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:66",{"_index":486,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:74",{"_index":484,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:80",{"_index":488,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:84",{"_index":487,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:89",{"_index":498,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/main.ts",{"_index":1042,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["service/src/monitor/monitor.controller.ts",{"_index":182,"title":{},"body":{"controllers/MonitorController.html":{},"coverage.html":{}}}],["service/src/monitor/monitor.controller.ts:17",{"_index":192,"title":{},"body":{"controllers/MonitorController.html":{}}}],["service/src/monitor/monitor.controller.ts:27",{"_index":198,"title":{},"body":{"controllers/MonitorController.html":{}}}],["service/src/monitor/monitor.controller.ts:37",{"_index":195,"title":{},"body":{"controllers/MonitorController.html":{}}}],["service/src/monitor/monitor.controller.ts:42",{"_index":189,"title":{},"body":{"controllers/MonitorController.html":{}}}],["service/src/monitor/monitor.interface.ts",{"_index":176,"title":{},"body":{"interfaces/Monitor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["service/src/system/system.controller.ts",{"_index":239,"title":{},"body":{"controllers/SystemController.html":{},"coverage.html":{}}}],["service/src/system/system.controller.ts:20",{"_index":243,"title":{},"body":{"controllers/SystemController.html":{}}}],["service/src/test",{"_index":219,"title":{},"body":{"interfaces/SessionChange.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/src/testee/testee.controller.ts",{"_index":377,"title":{},"body":{"controllers/TesteeController.html":{},"coverage.html":{}}}],["service/src/testee/testee.controller.ts:18",{"_index":383,"title":{},"body":{"controllers/TesteeController.html":{}}}],["service/src/testee/testee.controller.ts:28",{"_index":389,"title":{},"body":{"controllers/TesteeController.html":{}}}],["service/src/testee/testee.controller.ts:38",{"_index":386,"title":{},"body":{"controllers/TesteeController.html":{}}}],["service/src/testee/testee.interface.ts",{"_index":373,"title":{},"body":{"interfaces/Testee.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["service/src/testee/testee.service.ts",{"_index":403,"title":{},"body":{"injectables/TesteeService.html":{},"coverage.html":{}}}],["service/src/testee/testee.service.ts:18",{"_index":424,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:20",{"_index":425,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:22",{"_index":413,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:26",{"_index":422,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:36",{"_index":417,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:40",{"_index":419,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:57",{"_index":415,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:69",{"_index":416,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:7",{"_index":411,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/version/version.controller.ts",{"_index":451,"title":{},"body":{"controllers/VersionController.html":{},"coverage.html":{}}}],["service/src/version/version.controller.ts:8",{"_index":453,"title":{},"body":{"controllers/VersionController.html":{}}}],["services",{"_index":1065,"title":{},"body":{"index.html":{}}}],["session",{"_index":263,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{}}}],["session.controller",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["session.controller.ts",{"_index":252,"title":{},"body":{"controllers/TestSessionController.html":{},"coverage.html":{}}}],["session.controller.ts:17",{"_index":261,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["session.controller.ts:27",{"_index":257,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["session.service",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{}}}],["session.service.ts",{"_index":274,"title":{},"body":{"injectables/TestSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["session.service.ts:105",{"_index":295,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:114",{"_index":296,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:122",{"_index":294,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:126",{"_index":293,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:18",{"_index":284,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:27",{"_index":301,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:29",{"_index":303,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:35",{"_index":302,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:41",{"_index":290,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:46",{"_index":288,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:66",{"_index":292,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:77",{"_index":286,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:89",{"_index":298,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session/session",{"_index":220,"title":{},"body":{"interfaces/SessionChange.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["session/test",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sessionchange",{"_index":218,"title":{"interfaces/SessionChange.html":{}},"body":{"interfaces/SessionChange.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["sessionchange.groupname",{"_index":319,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["sessionchange.testid",{"_index":320,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["sessionchange.teststate",{"_index":311,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["sessionchange.unitname",{"_index":307,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["sessionchange.unitstate",{"_index":310,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["sessionid",{"_index":316,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["sessions",{"_index":256,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["set",{"_index":687,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["setting",{"_index":1232,"title":{},"body":{"index.html":{}}}],["settings",{"_index":1198,"title":{},"body":{"index.html":{}}}],["setup",{"_index":1055,"title":{},"body":{"index.html":{}}}],["setup/master/config/install_config2",{"_index":1151,"title":{},"body":{"index.html":{}}}],["shall",{"_index":675,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["shields",{"_index":1177,"title":{},"body":{"index.html":{}}}],["shooting",{"_index":1291,"title":{},"body":{"index.html":{}}}],["show",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["show_end_button_in_player",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["showtimeleft",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["signal",{"_index":438,"title":{},"body":{"injectables/TesteeService.html":{}}}],["significantly",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["simply",{"_index":1275,"title":{},"body":{"index.html":{}}}],["single",{"_index":1072,"title":{},"body":{"index.html":{}}}],["software",{"_index":909,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["soon",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["sophisticated",{"_index":1129,"title":{},"body":{"index.html":{}}}],["source",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"interfaces/SessionChange.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"index.html":{}}}],["space",{"_index":1134,"title":{},"body":{"index.html":{}}}],["special",{"_index":1084,"title":{},"body":{"index.html":{}}}],["specific",{"_index":700,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["specs",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["sql",{"_index":1299,"title":{},"body":{"index.html":{}}}],["ssl",{"_index":1245,"title":{},"body":{"index.html":{}}}],["stack",{"_index":1186,"title":{},"body":{"index.html":{}}}],["standard",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1063,"title":{},"body":{"index.html":{}}}],["start/stop",{"_index":1252,"title":{},"body":{"index.html":{}}}],["started",{"_index":538,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["starting",{"_index":1192,"title":{},"body":{"index.html":{}}}],["startup",{"_index":1260,"title":{},"body":{"index.html":{}}}],["state",{"_index":557,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["statements",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["statereportpolicy",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":159,"title":{},"body":{"classes/ErrorHandler.html":{},"changelog.html":{}}}],["status(status",{"_index":170,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["step",{"_index":1111,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1119,"title":{},"body":{"index.html":{}}}],["still",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["stop",{"_index":1064,"title":{},"body":{"index.html":{}}}],["stop4",{"_index":1169,"title":{},"body":{"index.html":{}}}],["stoplogs",{"_index":1278,"title":{},"body":{"index.html":{}}}],["stopping",{"_index":1254,"title":{},"body":{"index.html":{}}}],["store",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["stored",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":1298,"title":{},"body":{"index.html":{}}}],["string",{"_index":63,"title":{},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"interfaces/SessionChange.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"miscellaneous/functions.html":{}}}],["stringified",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["structure",{"_index":985,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["study",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1346,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1340,"title":{},"body":{"license.html":{}}}],["submodule",{"_index":1217,"title":{},"body":{"index.html":{}}}],["submodules",{"_index":1069,"title":{},"body":{"index.html":{}}}],["subscribeclientcount",{"_index":469,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["subscribeclientcount(@messagebody",{"_index":533,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["subscribeclientcount(data",{"_index":496,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["subscribemessage",{"_index":500,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["subscribemessage('subscribe:client.count",{"_index":497,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["substantial",{"_index":1351,"title":{},"body":{"license.html":{}}}],["successful",{"_index":1161,"title":{},"body":{"index.html":{}}}],["suite",{"_index":1255,"title":{},"body":{"index.html":{}}}],["super",{"_index":155,"title":{},"body":{"classes/ErrorHandler.html":{},"index.html":{}}}],["support",{"_index":1376,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["supporting",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["sure",{"_index":78,"title":{},"body":{"interfaces/Command.html":{},"index.html":{}}}],["svg",{"_index":1377,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["sys",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":248,"title":{},"body":{"controllers/SystemController.html":{},"index.html":{}}}],["system/config",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["system/config/app",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["system/config/custom",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["system/system.controller",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["system/time",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["systemcontroller",{"_index":24,"title":{"controllers/SystemController.html":{}},"body":{"modules/AppModule.html":{},"controllers/SystemController.html":{},"coverage.html":{}}}],["table",{"_index":692,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":937,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["take",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["taker",{"_index":1285,"title":{},"body":{"index.html":{}}}],["takes",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":759,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["targets",{"_index":1258,"title":{},"body":{"index.html":{}}}],["technically",{"_index":1135,"title":{},"body":{"index.html":{}}}],["teh",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["tells",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["terminate",{"_index":70,"title":{},"body":{"interfaces/Command.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["terminated",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["test/{test_id}/connection",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["test\\{test_id}\\log",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["test\\{test_id}\\state",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["test\\{test_id}\\unit\\{unit_name}\\logwere",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["test\\{test_id}\\unit\\{unit_name}\\state",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["test_data",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["testcenter",{"_index":672,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["testcontroller",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["testdata",{"_index":1282,"title":{},"body":{"index.html":{}}}],["testee",{"_index":372,"title":{"interfaces/Testee.html":{}},"body":{"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["testee.interface",{"_index":392,"title":{},"body":{"controllers/TesteeController.html":{},"injectables/TesteeService.html":{}}}],["testee.service",{"_index":390,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testee.testid",{"_index":446,"title":{},"body":{"injectables/TesteeService.html":{}}}],["testee.token",{"_index":448,"title":{},"body":{"injectables/TesteeService.html":{}}}],["testee/testee.controller",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["testee/testee.service",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"controllers/SystemController.html":{}}}],["testeecontroller",{"_index":23,"title":{"controllers/TesteeController.html":{}},"body":{"modules/AppModule.html":{},"controllers/TesteeController.html":{},"coverage.html":{}}}],["testeeregister",{"_index":378,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testeeregister(@req",{"_index":394,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testeeregister(request",{"_index":381,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testees",{"_index":379,"title":{},"body":{"controllers/TesteeController.html":{},"injectables/TesteeService.html":{}}}],["testees(@req",{"_index":401,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testees(request",{"_index":384,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testeeservice",{"_index":8,"title":{"injectables/TesteeService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"controllers/SystemController.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"coverage.html":{},"overview.html":{}}}],["testeetoken",{"_index":420,"title":{},"body":{"injectables/TesteeService.html":{}}}],["testeeunregister",{"_index":380,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testeeunregister(@req",{"_index":398,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testeeunregister(request",{"_index":387,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testid",{"_index":227,"title":{},"body":{"interfaces/SessionChange.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"injectables/TesteeService.html":{}}}],["testids",{"_index":129,"title":{},"body":{"controllers/CommandController.html":{},"injectables/TesteeService.html":{}}}],["testids.foreach((testid",{"_index":443,"title":{},"body":{"injectables/TesteeService.html":{}}}],["testlet",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["testlets",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["tests",{"_index":694,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["testsession",{"_index":306,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["testsession.teststate",{"_index":312,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["testsession.unitname",{"_index":308,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["testsession.unitstate",{"_index":309,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["testsessioncontroller",{"_index":19,"title":{"controllers/TestSessionController.html":{}},"body":{"modules/AppModule.html":{},"controllers/TestSessionController.html":{},"coverage.html":{}}}],["testsessions",{"_index":275,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["testsessionservice",{"_index":6,"title":{"injectables/TestSessionService.html":{}},"body":{"modules/AppModule.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"coverage.html":{},"overview.html":{}}}],["teststate",{"_index":228,"title":{},"body":{"interfaces/SessionChange.html":{}}}],["teststatekey",{"_index":229,"title":{},"body":{"interfaces/SessionChange.html":{}}}],["teststatevalue",{"_index":230,"title":{},"body":{"interfaces/SessionChange.html":{}}}],["teststudio",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["testtakers",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":1215,"title":{},"body":{"index.html":{}}}],["texts",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":1066,"title":{},"body":{"index.html":{}}}],["this.addsessionchange(sessionchange",{"_index":317,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.broadcasttestsessionstogroupmonitors(sessionchange.groupname",{"_index":318,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.clientlost$.asobservable",{"_index":531,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clientlost$.next(disconnectedtoken",{"_index":520,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clients[monitortoken",{"_index":527,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clients[monitortoken].close",{"_index":529,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clients[token",{"_index":514,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clients[token].send(payload",{"_index":526,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clientscount$.next(object.values(this.clients).length",{"_index":515,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clientscount$.pipe(map((count",{"_index":534,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.dataservice.addmonitor(request.body",{"_index":208,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.dataservice.applysessionchange(request.body",{"_index":270,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["this.dataservice.clean",{"_index":250,"title":{},"body":{"controllers/SystemController.html":{}}}],["this.dataservice.getclienttokens",{"_index":217,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.dataservice.getmonitors",{"_index":215,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.dataservice.gettestsessions",{"_index":271,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["this.dataservice.removemonitor(request.body.token",{"_index":213,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.disconnectclient(token",{"_index":530,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.eventsgateway.disconnectall",{"_index":174,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["this.http.post(this.testees[testeetoken].disconnectnotificationuri).subscribe",{"_index":434,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.logger.error(`(${status",{"_index":169,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["this.logger.log(\"broadcasting",{"_index":335,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.logger.log(\"skipping",{"_index":323,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.logger.log('/command",{"_index":131,"title":{},"body":{"controllers/CommandController.html":{}}}],["this.logger.log('/push/session",{"_index":268,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["this.logger.log('monitor",{"_index":211,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.logger.log('testee",{"_index":399,"title":{},"body":{"controllers/TesteeController.html":{}}}],["this.logger.log(`client",{"_index":516,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.logger.log(`disconnect",{"_index":528,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.logger.log(`monitor",{"_index":206,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.logger.log(`remove",{"_index":344,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}}}],["this.logger.log(`sending",{"_index":525,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.logger.log(`sent",{"_index":435,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.logger.log(`testee",{"_index":396,"title":{},"body":{"controllers/TesteeController.html":{}}}],["this.logger.warn('clean",{"_index":247,"title":{},"body":{"controllers/SystemController.html":{}}}],["this.logger.warn(`could",{"_index":440,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.monitors",{"_index":370,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.monitors[group",{"_index":342,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.monitors[group][monitor.token",{"_index":343,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.monitors[group][monitortoken",{"_index":346,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.monitors[groupname",{"_index":334,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.notifydisconnection(disconnected",{"_index":427,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.removemonitor(disconnected",{"_index":314,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.removetestee(disconnected",{"_index":428,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.testees",{"_index":450,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.testees[testee.token",{"_index":429,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.testees[testeetoken",{"_index":430,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.testees[testeetoken].disconnectnotificationuri",{"_index":433,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.testeeservice.addtestee(request.body",{"_index":397,"title":{},"body":{"controllers/TesteeController.html":{}}}],["this.testeeservice.broadcastcommandtotestees(request.body.command",{"_index":133,"title":{},"body":{"controllers/CommandController.html":{}}}],["this.testeeservice.clean",{"_index":251,"title":{},"body":{"controllers/SystemController.html":{}}}],["this.testeeservice.gettestees",{"_index":402,"title":{},"body":{"controllers/TesteeController.html":{}}}],["this.testeeservice.removetestee(request.body.token",{"_index":400,"title":{},"body":{"controllers/TesteeController.html":{}}}],["this.testsessions",{"_index":371,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.testsessions[group",{"_index":322,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.testsessions[group][testid",{"_index":326,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.testsessions[groupname",{"_index":338,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.websocketgateway.broadcasttoregistered",{"_index":444,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.websocketgateway.broadcasttoregistered(tokens",{"_index":340,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.websocketgateway.disconnectclient(monitortoken",{"_index":350,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.websocketgateway.disconnectclient(testeetoken",{"_index":431,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.websocketgateway.getclienttokens",{"_index":369,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.websocketgateway.getdisconnectionobservable().subscribe((disconnected",{"_index":313,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}}}],["this.wsgateway.disconnectall",{"_index":249,"title":{},"body":{"controllers/SystemController.html":{}}}],["those",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":1068,"title":{},"body":{"index.html":{}}}],["throw",{"_index":122,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["ths",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["timed",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["timeout",{"_index":601,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["timeouts",{"_index":1292,"title":{},"body":{"index.html":{}}}],["timer",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["timestamp",{"_index":62,"title":{},"body":{"interfaces/Command.html":{},"interfaces/SessionChange.html":{},"changelog.html":{}}}],["together",{"_index":1110,"title":{},"body":{"index.html":{}}}],["token",{"_index":178,"title":{},"body":{"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["tokens",{"_index":336,"title":{},"body":{"injectables/TestSessionService.html":{},"classes/WebsocketGateway.html":{}}}],["tokens.foreach((token",{"_index":524,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["tools",{"_index":1208,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1373,"title":{},"body":{"license.html":{}}}],["traditional",{"_index":1087,"title":{},"body":{"index.html":{}}}],["traefik",{"_index":1165,"title":{},"body":{"index.html":{}}}],["transpile/build",{"_index":1093,"title":{},"body":{"index.html":{}}}],["triggered",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["trouble",{"_index":1290,"title":{},"body":{"index.html":{}}}],["true",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":998,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["type",{"_index":64,"title":{},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"interfaces/SessionChange.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"controllers/VersionController.html":{},"classes/WebsocketGateway.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1380,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":73,"title":{},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["undefined",{"_index":90,"title":{},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"interfaces/Monitor.html":{},"interfaces/SessionChange.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["under",{"_index":660,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["unique",{"_index":75,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{}}}],["unit",{"_index":577,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["unitname",{"_index":231,"title":{},"body":{"interfaces/SessionChange.html":{}}}],["units",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["unitstate",{"_index":232,"title":{},"body":{"interfaces/SessionChange.html":{}}}],["unitstatekey",{"_index":234,"title":{},"body":{"interfaces/SessionChange.html":{}}}],["unix",{"_index":1213,"title":{},"body":{"index.html":{}}}],["unix/linux",{"_index":1123,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":333,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["unregistered",{"_index":212,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/TesteeController.html":{}}}],["up",{"_index":1176,"title":{},"body":{"index.html":{}}}],["update",{"_index":547,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["update.sh",{"_index":1180,"title":{},"body":{"index.html":{}}}],["update2",{"_index":1218,"title":{},"body":{"index.html":{}}}],["updated",{"_index":330,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["updates",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["updates/upgrades",{"_index":1100,"title":{},"body":{"index.html":{}}}],["updating",{"_index":1242,"title":{},"body":{"index.html":{}}}],["upload",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":1054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["url.split('/').filter(e",{"_index":509,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["urls",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["usable",{"_index":1256,"title":{},"body":{"index.html":{}}}],["use",{"_index":596,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":639,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["useful",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":738,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user123",{"_index":1173,"title":{},"body":{"index.html":{}}}],["username",{"_index":1283,"title":{},"body":{"index.html":{}}}],["uses",{"_index":1265,"title":{},"body":{"index.html":{}}}],["using",{"_index":1246,"title":{},"body":{"index.html":{}}}],["validates",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["validation",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["validity",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":144,"title":{},"body":{"classes/ErrorHandler.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":669,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["variable",{"_index":1038,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":1384,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["verona",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["verona2",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["verona3",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["verona4",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":454,"title":{},"body":{"controllers/VersionController.html":{},"changelog.html":{},"index.html":{}}}],["version/version.controller",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["versioncontroller",{"_index":21,"title":{"controllers/VersionController.html":{}},"body":{"modules/AppModule.html":{},"controllers/VersionController.html":{},"coverage.html":{}}}],["versioned",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":544,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["via",{"_index":803,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["visible",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["visited",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":106,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["volumes",{"_index":1304,"title":{},"body":{"index.html":{}}}],["want",{"_index":680,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["warning",{"_index":933,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["warranties",{"_index":1358,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1354,"title":{},"body":{"license.html":{}}}],["way",{"_index":548,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["web",{"_index":1059,"title":{},"body":{"index.html":{}}}],["websocket.gateway",{"_index":154,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["websocketgateway",{"_index":34,"title":{"classes/WebsocketGateway.html":{}},"body":{"modules/AppModule.html":{},"classes/ErrorHandler.html":{},"controllers/SystemController.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"coverage.html":{}}}],["websocketserver",{"_index":478,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["well",{"_index":766,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["well.database",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["wether",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["wget",{"_index":1145,"title":{},"body":{"index.html":{}}}],["whatever",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1370,"title":{},"body":{"license.html":{}}}],["whites",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":907,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["window",{"_index":1266,"title":{},"body":{"index.html":{}}}],["without",{"_index":929,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["won't",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["work",{"_index":716,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["workspace",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["workspace/{id}/file",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["workspace/{id}/files",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["workspace/{id}/validation",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/logs",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/report/log",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/report/response",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/report/review",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/report/sys",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/responses",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/reviews",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/sys",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["workspacemonitor",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["workspaces",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["wrong",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["wrongly",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["ws",{"_index":506,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["ws_id}/booklets/started",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["ws_id}/status",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["ws_id}/tests/lock",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["ws_id}/tests/unlock",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["wsgateway",{"_index":244,"title":{},"body":{"controllers/SystemController.html":{}}}],["wsresponse",{"_index":501,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["xml",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["xsd",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["xxx",{"_index":1284,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1106,"title":{},"body":{"index.html":{}}}],["you've",{"_index":1160,"title":{},"body":{"index.html":{}}}],["zone",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nTestSessionService\n\nTestSessionService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTestSessionService->AppModule\n\n\n\n\n\nTesteeService\n\nTesteeService\n\nAppModule -->\n\nTesteeService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            broadcasting-service/src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TestSessionService\n                        \n                        \n                            TesteeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TestSessionController\n                        \n                        \n                            MonitorController\n                        \n                        \n                            VersionController\n                        \n                        \n                            CommandController\n                        \n                        \n                            TesteeController\n                        \n                        \n                            SystemController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule, Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { TestSessionController } from './test-session/test-session.controller';\nimport { MonitorController } from './monitor/monitor.controller';\nimport { WebsocketGateway } from './common/websocket.gateway';\nimport { TestSessionService } from './test-session/test-session.service';\nimport { ErrorHandler } from './common/error-handler';\nimport { VersionController } from './version/version.controller';\nimport { CommandController } from './command/command.controller';\nimport { TesteeController } from './testee/testee.controller';\nimport { TesteeService } from './testee/testee.service';\nimport { SystemController } from './system/system.controller';\n\n@Module({\n  controllers: [\n    TestSessionController,\n    MonitorController,\n    VersionController,\n    CommandController,\n    TesteeController,\n    SystemController\n  ],\n  providers: [\n    WebsocketGateway,\n    TestSessionService,\n    TesteeService,\n    {\n      provide: APP_FILTER,\n      useClass: ErrorHandler\n    }\n  ],\n  imports: [\n    HttpModule\n  ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Command.html":{"url":"interfaces/Command.html","title":"interface - Command","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Command\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/command/command.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            arguments\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            keyword\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arguments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arguments:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keyword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keyword:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const commandKeywords = [\n  'pause',\n  'goto',\n  'terminate',\n  'resume',\n  'debug'\n];\n\nexport interface Command {\n  keyword: (typeof commandKeywords)[number];\n  id: string; // a unique id for each command, to make sure each one get only performed once (even in polling mode)\n  arguments: string[];\n  timestamp?: number;\n}\n\nexport function isCommand(arg: any): arg is Command {\n  return (arg.keyword !== undefined) && (arg.id !== undefined) && (arg.arguments !== undefined);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CommandController.html":{"url":"controllers/CommandController.html","title":"controller - CommandController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CommandController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/command/command.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postCommand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        postCommand\n                        \n                    \n                \n            \n            \n                \npostCommand(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/command')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/command/command.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, HttpException, Logger, Post, Req\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { isCommand } from './command.interface';\nimport { TesteeService } from '../testee/testee.service';\n\n@Controller()\nexport class CommandController {\n  constructor(\n    private readonly testeeService: TesteeService\n  ) {}\n\n  private readonly logger = new Logger(CommandController.name);\n\n  @Post('/command')\n  postCommand(@Req() request: Request): void {\n    if ((typeof request.body.command === 'undefined') || !isCommand(request.body.command)) {\n      throw new HttpException('invalid command data', 400);\n    }\n\n    if ((typeof request.body.testIds === 'undefined') || !Array.isArray(request.body.testIds)) {\n      throw new HttpException('no testIds given', 400);\n    }\n\n    this.logger.log('/command', request.body);\n\n    this.testeeService.broadcastCommandToTestees(request.body.command, request.body.testIds);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorHandler.html":{"url":"classes/ErrorHandler.html","title":"class - ErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/common/error-handler.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventsGateway: WebsocketGateway)\n                    \n                \n                        \n                            \n                                Defined in broadcasting-service/src/common/error-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventsGateway\n                                                  \n                                                        \n                                                                        WebsocketGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ErrorHandler.name)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/error-handler.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/error-handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Catch, ArgumentsHost, HttpStatus, Logger\n} from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\nimport { Response } from 'express';\nimport { WebsocketGateway } from './websocket.gateway';\n\n@Catch()\nexport class ErrorHandler extends BaseExceptionFilter {\n\n  constructor(\n    private readonly eventsGateway: WebsocketGateway\n  ) {\n    super();\n  }\n\n  private readonly logger = new Logger(ErrorHandler.name);\n\n  catch(exception: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response: Response = ctx.getResponse();\n\n    let status = HttpStatus.INTERNAL_SERVER_ERROR;\n\n    if (exception.status === HttpStatus.NOT_FOUND) {\n      status = HttpStatus.NOT_FOUND;\n    }\n\n    if (exception.status === HttpStatus.SERVICE_UNAVAILABLE) {\n      status = HttpStatus.SERVICE_UNAVAILABLE;\n    }\n\n    if (exception.status === HttpStatus.NOT_ACCEPTABLE) {\n      status = HttpStatus.NOT_ACCEPTABLE;\n    }\n\n    if (exception.status === HttpStatus.EXPECTATION_FAILED) {\n      status = HttpStatus.EXPECTATION_FAILED;\n    }\n\n    if (exception.status === HttpStatus.BAD_REQUEST) {\n      status = HttpStatus.BAD_REQUEST;\n    }\n\n    const message = exception.message;\n\n    this.logger.error(`(${status}) ${message}`);\n\n    response\n      .status(status)\n      .contentType('text')\n      .send(message);\n\n    if (status >= 500) {\n      this.eventsGateway.disconnectAll();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Monitor.html":{"url":"interfaces/Monitor.html","title":"interface - Monitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Monitor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/monitor/monitor.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            groups\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groups:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Monitor {\n  token: string;\n  groups: string[]\n}\n\nexport function isMonitor(arg: any): arg is Monitor {\n  return (arg.token !== undefined) && (arg.groups !== undefined);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MonitorController.html":{"url":"controllers/MonitorController.html","title":"controller - MonitorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MonitorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/monitor/monitor.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clients\n                            \n                            \n                                monitorRegister\n                            \n                            \n                                monitors\n                            \n                            \n                                monitorUnregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clients\n                        \n                    \n                \n            \n            \n                \nclients(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/clients')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/monitor/monitor.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        monitorRegister\n                        \n                    \n                \n            \n            \n                \nmonitorRegister(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/monitor/register')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/monitor/monitor.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        monitors\n                        \n                    \n                \n            \n            \n                \nmonitors(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/monitors')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/monitor/monitor.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Monitor[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        monitorUnregister\n                        \n                    \n                \n            \n            \n                \nmonitorUnregister(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/monitor/unregister')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/monitor/monitor.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Get, HttpException, Logger, Post, Req\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { isMonitor, Monitor } from './monitor.interface';\nimport { TestSessionService } from '../test-session/test-session.service';\n\n@Controller()\nexport class MonitorController {\n  constructor(\n    private readonly dataService: TestSessionService\n  ) {}\n\n  private readonly logger = new Logger(MonitorController.name);\n\n  @Post('/monitor/register')\n  monitorRegister(@Req() request: Request): void {\n    if (!isMonitor(request.body)) {\n      throw new HttpException('not monitor data', 400);\n    }\n\n    this.logger.log(`monitor registered:${JSON.stringify(request.body)}`);\n    this.dataService.addMonitor(request.body);\n  }\n\n  @Post('/monitor/unregister')\n  monitorUnregister(@Req() request: Request): void {\n    if (!('token' in request.body)) {\n      throw new HttpException('no token in body', 400);\n    }\n\n    this.logger.log('monitor unregistered:', request.body);\n    this.dataService.removeMonitor(request.body.token);\n  }\n\n  @Get('/monitors')\n  monitors(@Req() request: Request): Monitor[] {\n    return this.dataService.getMonitors();\n  }\n\n  @Get('/clients')\n  clients(@Req() request: Request): string[] {\n    return this.dataService.getClientTokens();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionChange.html":{"url":"interfaces/SessionChange.html","title":"interface - SessionChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SessionChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/test-session/session-change.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bookletName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupLabel\n                                        \n                                \n                                \n                                        \n                                            groupName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            personId\n                                        \n                                \n                                \n                                        \n                                            personLabel\n                                        \n                                \n                                \n                                        \n                                            testId\n                                        \n                                \n                                \n                                        \n                                            testState\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testStateKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testStateValue\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unitName\n                                        \n                                \n                                \n                                        \n                                            unitState\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bookletName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bookletName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        personId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        personId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        personLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        personLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testState:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testStateKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testStateKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testStateValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testStateValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unitName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unitState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unitState:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SessionChange {\n  personId: number;\n  groupName: string;\n  personLabel: string;\n  mode?: string;\n  groupLabel?: string;\n  testId: number;\n  bookletName?: string;\n  testState: {\n    [testStateKey: string]: string\n  };\n  testStateKey?: string;\n  testStateValue?: string;\n  unitName?: string;\n  unitState: {\n    [unitStateKey: string]: string\n  };\n  timestamp: number;\n}\n\nexport function isSessionChange(arg: any): arg is SessionChange {\n  return (arg.personId !== undefined) && (arg.timestamp !== undefined) && (arg.groupName !== undefined);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SystemController.html":{"url":"controllers/SystemController.html","title":"controller - SystemController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SystemController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/system/system.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clean\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clean\n                        \n                    \n                \n            \n            \n                \nclean(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/system/clean')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/system/system.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Post, Req, Logger\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { TestSessionService } from '../test-session/test-session.service';\nimport { TesteeService } from '../testee/testee.service';\nimport { WebsocketGateway } from '../common/websocket.gateway';\n\n@Controller()\nexport class SystemController {\n  constructor(\n    private readonly dataService: TestSessionService,\n    private readonly testeeService: TesteeService,\n    private readonly wsGateway: WebsocketGateway\n  ) {}\n\n  private readonly logger = new Logger(SystemController.name);\n\n  @Post('/system/clean')\n  clean(@Req() request: Request): void {\n    this.logger.warn('clean system');\n    this.wsGateway.disconnectAll();\n    this.dataService.clean();\n    this.testeeService.clean();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TestSessionController.html":{"url":"controllers/TestSessionController.html","title":"controller - TestSessionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TestSessionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/test-session/test-session.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTestSessions\n                            \n                            \n                                pushSessionChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTestSessions\n                        \n                    \n                \n            \n            \n                \ngetTestSessions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/test-sessions')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SessionChange[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pushSessionChange\n                        \n                    \n                \n            \n            \n                \npushSessionChange(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/push/session-change')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Get, HttpException, Logger, Post, Req\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { isSessionChange, SessionChange } from './session-change.interface';\nimport { TestSessionService } from './test-session.service';\n\n@Controller()\nexport class TestSessionController {\n  constructor(\n    private readonly dataService: TestSessionService\n  ) {}\n\n  private readonly logger = new Logger(TestSessionController.name);\n\n  @Post('/push/session-change')\n  pushSessionChange(@Req() request: Request): void {\n    if (!isSessionChange(request.body)) {\n      throw new HttpException('not session data', 400);\n    }\n\n    this.logger.log('/push/session-change', JSON.stringify(request.body));\n    this.dataService.applySessionChange(request.body);\n  }\n\n  @Get('/test-sessions')\n  getTestSessions(): SessionChange[] {\n    return this.dataService.getTestSessions();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestSessionService.html":{"url":"injectables/TestSessionService.html","title":"injectable - TestSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/test-session/test-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                monitors\n                            \n                            \n                                    Private\n                                testSessions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMonitor\n                            \n                            \n                                    Private\n                                addSessionChange\n                            \n                            \n                                applySessionChange\n                            \n                            \n                                    Private\n                                broadcastTestSessionsToGroupMonitors\n                            \n                            \n                                clean\n                            \n                            \n                                getClientTokens\n                            \n                            \n                                getMonitors\n                            \n                            \n                                getTestSessions\n                            \n                            \n                                removeMonitor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(websocketGateway: WebsocketGateway)\n                    \n                \n                        \n                            \n                                Defined in broadcasting-service/src/test-session/test-session.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        websocketGateway\n                                                  \n                                                        \n                                                                        WebsocketGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMonitor\n                        \n                    \n                \n            \n            \n                \naddMonitor(monitor: Monitor)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                                Monitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addSessionChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSessionChange(sessionChange: SessionChange)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sessionChange\n                                    \n                                                SessionChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applySessionChange\n                        \n                    \n                \n            \n            \n                \napplySessionChange(sessionChange: SessionChange)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sessionChange\n                                    \n                                                SessionChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        broadcastTestSessionsToGroupMonitors\n                        \n                    \n                \n            \n            \n                \n                    \n                    broadcastTestSessionsToGroupMonitors(groupName: string)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clean\n                        \n                    \n                \n            \n            \n                \nclean()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getClientTokens\n                        \n                    \n                \n            \n            \n                \ngetClientTokens()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMonitors\n                        \n                    \n                \n            \n            \n                \ngetMonitors()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Monitor[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTestSessions\n                        \n                    \n                \n            \n            \n                \ngetTestSessions()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SessionChange[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMonitor\n                        \n                    \n                \n            \n            \n                \nremoveMonitor(monitorToken: string)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitorToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TestSessionService.name)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/test-session/test-session.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        monitors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/test-session/test-session.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testSessions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/test-session/test-session.service.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { SessionChange } from './session-change.interface';\nimport { Monitor } from '../monitor/monitor.interface';\nimport { WebsocketGateway } from '../common/websocket.gateway';\n\nconst mergeSessionChanges = (testSession: SessionChange, sessionChange: SessionChange): SessionChange => {\n  if ((sessionChange.unitName) && (sessionChange.unitName !== testSession.unitName)) {\n    testSession.unitState = {};\n  }\n\n  sessionChange.unitState = { ...testSession.unitState, ...sessionChange.unitState };\n  sessionChange.testState = { ...testSession.testState, ...sessionChange.testState };\n\n  return { ...testSession, ...sessionChange };\n};\n\n@Injectable()\nexport class TestSessionService {\n  constructor(\n    private readonly websocketGateway: WebsocketGateway\n  ) {\n    this.websocketGateway.getDisconnectionObservable().subscribe((disconnected: string) => {\n      this.removeMonitor(disconnected);\n    });\n  }\n\n  private readonly logger = new Logger(TestSessionService.name);\n\n  private testSessions: {\n    [group: string]: {\n      [sessionId: string]: SessionChange\n    }\n  } = {};\n\n  private monitors: {\n    [group: string]: {\n      [token: string]: Monitor\n    }\n  } = {};\n\n  applySessionChange(sessionChange: SessionChange): void {\n    this.addSessionChange(sessionChange);\n    this.broadcastTestSessionsToGroupMonitors(sessionChange.groupName);\n  }\n\n  private addSessionChange(sessionChange: SessionChange): void {\n    const group: string = sessionChange.groupName;\n    const testId = sessionChange.testId;\n\n    // testSession is first of group\n    if (typeof this.testSessions[group] === 'undefined') {\n      // this.logger.log(\"skipping group hence not monitored: \" + group);\n      return;\n    }\n\n    if (typeof this.testSessions[group][testId] !== 'undefined') {\n      // testSession is already known and needs to be updated\n      const testSession = this.testSessions[group][testId];\n      this.testSessions[group][testId] = mergeSessionChanges(testSession, sessionChange);\n    } else {\n      // formally unknown testSession\n      this.testSessions[group][testId] = sessionChange;\n    }\n  }\n\n  private broadcastTestSessionsToGroupMonitors(groupName: string) {\n    if (typeof this.monitors[groupName] !== 'undefined') {\n      // this.logger.log(\"broadcasting data about group: \" + groupName);\n      const tokens = Object.keys(this.monitors[groupName]);\n      const sessions = (typeof this.testSessions[groupName] !== 'undefined') ?\n        Object.values(this.testSessions[groupName]) :\n        [];\n      this.websocketGateway.broadcastToRegistered(tokens, 'test-sessions', sessions);\n    }\n  }\n\n  addMonitor(monitor: Monitor): void {\n    monitor.groups.forEach((group: string) => {\n      if (typeof this.monitors[group] === 'undefined') {\n        this.monitors[group] = {};\n      }\n      if (typeof this.testSessions[group] === 'undefined') {\n        this.testSessions[group] = {};\n      }\n      this.monitors[group][monitor.token] = monitor;\n    });\n  }\n\n  removeMonitor(monitorToken: string): void {\n    this.logger.log(`remove monitor: ${monitorToken}`);\n\n    Object.keys(this.monitors).forEach((group: string) => {\n      if (typeof this.monitors[group][monitorToken] !== 'undefined') {\n        delete this.monitors[group][monitorToken];\n\n        if (Object.keys(this.monitors[group]).length === 0) {\n          delete this.testSessions[group];\n        }\n      }\n    });\n\n    this.websocketGateway.disconnectClient(monitorToken);\n  }\n\n  getMonitors(): Monitor[] {\n    return Object.values(this.monitors)\n      .reduce(\n        (allMonitors: Monitor[], groupMonitors: { [g: string]: Monitor }): Monitor[] => allMonitors\n          .concat(Object.values(groupMonitors)), []\n      )\n      .filter((v: Monitor, i: number, a: Monitor[]) => a.indexOf(v) === i);\n  }\n\n  getTestSessions(): SessionChange[] {\n    return Object.values(this.testSessions)\n      .reduce(\n        // eslint-disable-next-line max-len\n        (allTestSessions: SessionChange[], groupTestSessions: { [g: string]: SessionChange }): SessionChange[] => allTestSessions.concat(Object.values(groupTestSessions)), []\n      );\n  }\n\n  getClientTokens(): string[] {\n    return this.websocketGateway.getClientTokens();\n  }\n\n  clean(): void {\n    this.monitors = {};\n    this.testSessions = {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Testee.html":{"url":"interfaces/Testee.html","title":"interface - Testee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Testee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/testee/testee.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            disconnectNotificationUri\n                                        \n                                \n                                \n                                        \n                                            testId\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disconnectNotificationUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disconnectNotificationUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Testee {\n  token: string;\n  testId: number;\n  disconnectNotificationUri: string;\n}\n\nexport function isTestee(arg: any): arg is Testee {\n  return (arg.token !== undefined) && (arg.testId !== undefined);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TesteeController.html":{"url":"controllers/TesteeController.html","title":"controller - TesteeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TesteeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/testee/testee.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                testeeRegister\n                            \n                            \n                                testees\n                            \n                            \n                                testeeUnregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        testeeRegister\n                        \n                    \n                \n            \n            \n                \ntesteeRegister(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/testee/register')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testees\n                        \n                    \n                \n            \n            \n                \ntestees(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/testees')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Testee[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testeeUnregister\n                        \n                    \n                \n            \n            \n                \ntesteeUnregister(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/testee/unregister')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Get, HttpException, Logger, Post, Req\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { TesteeService } from './testee.service';\nimport { isTestee, Testee } from './testee.interface';\n\n@Controller()\nexport class TesteeController {\n  constructor(\n    private readonly testeeService: TesteeService\n  ) {\n  }\n\n  private readonly logger = new Logger(TesteeController.name);\n\n  @Post('/testee/register')\n  testeeRegister(@Req() request: Request): void {\n    if (!isTestee(request.body)) {\n      throw new HttpException('not testee data', 400);\n    }\n\n    this.logger.log(`testee registered:${JSON.stringify(request.body)}`);\n    this.testeeService.addTestee(request.body);\n  }\n\n  @Post('/testee/unregister')\n  testeeUnregister(@Req() request: Request): void {\n    if (!('token' in request.body)) {\n      throw new HttpException('no token in body', 400);\n    }\n\n    this.logger.log('testee unregistered:', request.body);\n    this.testeeService.removeTestee(request.body.token);\n  }\n\n  @Get('/testees')\n  testees(@Req() request: Request): Testee[] {\n    return this.testeeService.getTestees();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TesteeService.html":{"url":"injectables/TesteeService.html","title":"injectable - TesteeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TesteeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/testee/testee.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                testees\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTestee\n                            \n                            \n                                broadcastCommandToTestees\n                            \n                            \n                                clean\n                            \n                            \n                                getTestees\n                            \n                            \n                                notifyDisconnection\n                            \n                            \n                                removeTestee\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(websocketGateway: WebsocketGateway, http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in broadcasting-service/src/testee/testee.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        websocketGateway\n                                                  \n                                                        \n                                                                        WebsocketGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTestee\n                        \n                    \n                \n            \n            \n                \naddTestee(testee: Testee)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testee\n                                    \n                                                Testee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastCommandToTestees\n                        \n                    \n                \n            \n            \n                \nbroadcastCommandToTestees(command: Command, testIds: number[])\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                Command\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    testIds\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clean\n                        \n                    \n                \n            \n            \n                \nclean()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTestees\n                        \n                    \n                \n            \n            \n                \ngetTestees()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Testee[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifyDisconnection\n                        \n                    \n                \n            \n            \n                \nnotifyDisconnection(testeeToken: string)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testeeToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTestee\n                        \n                    \n                \n            \n            \n                \nremoveTestee(testeeToken: string)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testeeToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TesteeService.name)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/testee/testee.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testees\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/testee/testee.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService, Injectable, Logger } from '@nestjs/common';\nimport { Testee } from './testee.interface';\nimport { WebsocketGateway } from '../common/websocket.gateway';\nimport { Command } from '../command/command.interface';\n\n@Injectable()\nexport class TesteeService {\n  constructor(\n    private readonly websocketGateway: WebsocketGateway,\n    private http: HttpService\n  ) {\n    this.websocketGateway.getDisconnectionObservable().subscribe((disconnected: string) => {\n      this.notifyDisconnection(disconnected);\n      this.removeTestee(disconnected);\n    });\n  }\n\n  private readonly logger = new Logger(TesteeService.name);\n\n  private testees: { [token: string]: Testee } = {};\n\n  addTestee(testee: Testee): void {\n    this.testees[testee.token] = testee;\n  }\n\n  removeTestee(testeeToken: string): void {\n    this.logger.log(`remove testee: ${testeeToken}`);\n\n    if (typeof this.testees[testeeToken] !== 'undefined') {\n      delete this.testees[testeeToken];\n    }\n\n    this.websocketGateway.disconnectClient(testeeToken);\n  }\n\n  getTestees(): Testee[] {\n    return Object.values(this.testees);\n  }\n\n  notifyDisconnection(testeeToken: string): void {\n    if (typeof this.testees[testeeToken] === 'undefined') {\n      return;\n    }\n    if (this.testees[testeeToken].disconnectNotificationUri) {\n      const disconnectNotificationUri = this.testees[testeeToken].disconnectNotificationUri;\n      this.http.post(this.testees[testeeToken].disconnectNotificationUri).subscribe(\n        () => {\n          this.logger.log(`sent connection-lost signal to ${disconnectNotificationUri}`);\n        },\n        error => {\n          this.logger.warn(`could not send connection-lost signal to ${disconnectNotificationUri}: ${error.message}`);\n        }\n      );\n    }\n  }\n\n  broadcastCommandToTestees(command: Command, testIds: number[]) : void {\n    testIds.forEach((testId => {\n      this.websocketGateway.broadcastToRegistered(\n        Object.values(this.testees)\n          .filter(testee => testee.testId === testId)\n          .map(testee => testee.token),\n        'commands',\n        [command]\n      );\n    }));\n  }\n\n  clean(): void {\n    this.testees = {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VersionController.html":{"url":"controllers/VersionController.html","title":"controller - VersionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VersionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/version/version.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                monitors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        monitors\n                        \n                    \n                \n            \n            \n                \nmonitors(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/version')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/version/version.controller.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { Request } from 'express';\nimport { version } from '../../package.json';\n\n@Controller()\nexport class VersionController {\n  @Get('/version')\n  monitors(@Req() request: Request): string {\n    return version;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WebsocketGateway.html":{"url":"classes/WebsocketGateway.html","title":"class - WebsocketGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WebsocketGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/common/websocket.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayConnection\n                        OnGatewayDisconnect\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clientLost$\n                            \n                            \n                                    Private\n                                clients\n                            \n                            \n                                    Private\n                                clientsCount$\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                broadcastToRegistered\n                            \n                            \n                                disconnectAll\n                            \n                            \n                                disconnectClient\n                            \n                            \n                                getClientTokens\n                            \n                            \n                                getDisconnectionObservable\n                            \n                            \n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                            \n                                subscribeClientCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clientLost$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/websocket.gateway.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clients\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/websocket.gateway.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clientsCount$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/websocket.gateway.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(WebsocketGateway.name)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/websocket.gateway.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/websocket.gateway.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastToRegistered\n                        \n                    \n                \n            \n            \n                \nbroadcastToRegistered(tokens: string[], event: BroadcastingEvent, message: any)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tokens\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                BroadcastingEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAll\n                        \n                    \n                \n            \n            \n                \ndisconnectAll()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectClient\n                        \n                    \n                \n            \n            \n                \ndisconnectClient(monitorToken: string)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitorToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getClientTokens\n                        \n                    \n                \n            \n            \n                \ngetClientTokens()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisconnectionObservable\n                        \n                    \n                \n            \n            \n                \ngetDisconnectionObservable()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleConnection\n                        \n                    \n                \n            \n            \n                \nhandleConnection(client: Client, message: IncomingMessage)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Client\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                            IncomingMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(client: Client)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Client\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeClientCount\n                        \n                    \n                \n            \n            \n                \nsubscribeClientCount(data: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('subscribe:client.count')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MessageBody, OnGatewayConnection, OnGatewayDisconnect,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n  WsResponse\n} from '@nestjs/websockets';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Server, Client } from 'ws';\nimport { IncomingMessage } from 'http';\nimport { Logger } from '@nestjs/common';\nimport { BroadcastingEvent } from './interfaces';\n\nfunction getLastUrlPart(url: string) {\n  const arr = url.split('/').filter(e => e);\n  return arr[arr.length - 1];\n}\n\n@WebSocketGateway()\nexport class WebsocketGateway implements OnGatewayConnection, OnGatewayDisconnect {\n  private readonly logger = new Logger(WebsocketGateway.name);\n\n  @WebSocketServer()\n  private server: Server;\n\n  private clients: { [token: string] : Client } = {};\n  private clientsCount$: BehaviorSubject = new BehaviorSubject(0);\n  private clientLost$: BehaviorSubject = new BehaviorSubject(null);\n\n  handleConnection(client: Client, message: IncomingMessage): void {\n    const token = getLastUrlPart(message.url);\n\n    this.clients[token] = client;\n    this.clientsCount$.next(Object.values(this.clients).length);\n    this.logger.log(`client connected: ${token}`);\n  }\n\n  handleDisconnect(client: Client): void {\n    let disconnectedToken = '';\n    Object.keys(this.clients).forEach((token: string) => {\n      if (this.clients[token] === client) {\n        delete this.clients[token];\n        disconnectedToken = token;\n      }\n    });\n\n    if (disconnectedToken !== '') {\n      this.clientLost$.next(disconnectedToken);\n      this.clientsCount$.next(Object.values(this.clients).length);\n      this.logger.log(`client disconnected: ${disconnectedToken}`);\n    }\n  }\n\n  broadcastToRegistered(tokens: string[], event: BroadcastingEvent, message: any): void {\n    const payload = JSON.stringify({ event, data: message });\n\n    tokens.forEach((token: string) => {\n      if (typeof this.clients[token] !== 'undefined') {\n        this.logger.log(`sending to client: ${token}`);\n        this.clients[token].send(payload);\n      }\n    });\n  }\n\n  disconnectClient(monitorToken: string): void {\n    if (typeof this.clients[monitorToken] !== 'undefined') {\n      this.logger.log(`disconnect client: ${monitorToken}`);\n      this.clients[monitorToken].close();\n      delete this.clients[monitorToken];\n    }\n  }\n\n  disconnectAll(): void {\n    Object.keys(this.clients).forEach((token: string) => {\n      this.disconnectClient(token);\n    });\n  }\n\n  getDisconnectionObservable(): Observable {\n    return this.clientLost$.asObservable();\n  }\n\n  getClientTokens(): string[] {\n    return Object.keys(this.clients);\n  }\n\n  @SubscribeMessage('subscribe:client.count')\n  subscribeClientCount(@MessageBody() data: number): Observable> {\n    return this.clientsCount$.pipe(map((count: number) => ({ event: 'client.count', data: count })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n#Changelog\nBackend 12.0.2\nFixes data-migration from versions before 12.0.0. With the update to version 12.0.0 the way, response-data is stored\nchanged. Data from existing units should be migrated, but that might fail in some installations. With this patch\n12.0.2 this state will be repaired and the remaining data will get migrated.\nFrontend 12.0.2\nVarious Bugfixes:\n\n(#341) When you visited a test in demo-mode as a monitor, and terminated it, you returned to the starter but didn't see the monitor-monitor button again. That got fixed.\n(#340) After reload you return to the correct unit now\n(#335) Order of checks when leaving a unit is fixed: First check completeness, then ask for leaving the timed block\n(#347) Dont't check navigationLeaveRestrictions if unit is already time-locked.\n\nMinor Changes\n\nIn \"demo\" mode \"showTimeLeft\" is off now\nUse Font Roboto everywhere\n\nBackend 12.0.1\n\nTimeout for admin sessions was extended to 10h (from 30min)\n\nBugfixes:\n\nWrong numbers in Results overview\nHandle bogus Player-Metadata\n\nFrontend 12.0.1\nFix critical bug in login\nBackend 12.0.0\nThis update makes the Teststudio Verona3- and 4 compatible.\nEndpoints\n\nthe responses-output from /workspace/{ws_id}/responses and /workspace/{ws_id}/report/response\nnow contains the chunk names. eg: {\"all\":\"{\\\"key\\\": \\\"value\\\"}\" instead of {\\\"key\\\": \\\"value\\\"}\nnew Endpoint /{auth_token}/resource/{resource_name} is an alternative way for fetching resources. It can be used as\ndirectDownloadUrl-parameter (see here)\nin Verona4-players.\nThose deprecated endpoints are removed\n[GET] /workspace/{ws_id}/logs\n[GET] /workspace/{ws_id}/reviews\n[GET] /workspace/{ws_id}/responses\n[GET] /workspace/{ws_id}/sys-check/reports\n\n\n\nXSD\n\nin the Booklet.xml-format a new restriction is allowed: . It forbids the leaving ofunits of a testlet under certain circumstances: if the unit was not presented oder responded completely. The attributes\npresentation and response may have the values OFF, ON and ALWAYS. Always tells the testcenter, to check\nthe completeness and response-progress everytime the unit shall be left regardless of teh direction. ON only checks\nif the testee want to proceed forwards.\nThe Booklet.xsd now validates correctly that -id must only be unique if no alias is set and otherwise the\nalias must be unique.\n\nDatabase\n\nThe unit-data now gets stored in an additional table test_data, not in tests anymore to allow chunkwise updates.\nThere will be a data-migration, but depending on the specific format of the player it can be possible, that\npreviously edited units will not be restored correctly.\nSee scripts/sql-schema/patches.mysql.d/12.0.0.\n\nFrontend 12.0.0\nThis Version implements Verona 3 and Verona 4 specs.\nVersion-Number\nWe synchronize version-numbers of front- and backend to 12 because there will be only one version-number in the future anyway.\nFixes\n\n(Almost) all defined booklet-parameters should work now.\nRedesign of the Unit- and Page-Navigation.\nImproved error-handling (especially while loading tests).\nImproved behaviour while loading, make progress bar actually show progress.\nThe sandboxing of the player's iframe is improved to maintain security and also allow links into new tabs.\n\nNew Features\n\nVerona 3 and Verona 4 compatible!\nNew Navigation-paradigm:\nInstead of hindering the user to enter a unit which is locked (by timer, by code oder because it's not loaded yet), it can now regardless\nbe entered but will not be displayed. This allows the testee to go back or do whatever she wants when entering a locked unit instead of landing in\na navigational limbo with no escape.\nUnits, that have no timer get never locked now, and the testee is always allowed to return to them - even if (and this is new) there is a locked block\nbetween ths current and the target unit.\n\n\nYou can now restrict your units to can only be left when everything was seen and/or edited. For this there are\nbooklet-parameter force_presentation_complete and force_response_complete as well as new Restriction-Element called .\nnew useful booklet-parameters restore_current_page_on_return, show_end_button_in_player, allow_player_to_terminate_test, lock_test_on_termination.\n\nKnown Issues\n\nThis version of the Testcenter is compatible with all known players that use the Verona2, Verona3 oder Verona4 interface. A noteworthy exception is the simple player 2.\nBecause the dataParts where implemented wrongly (not stringified), it will not be able to restore previously entered unit data after relaod/re-login anymore\n(but apart from that work correctly).\nIn Verona 2+ there is mode for stateReportPolicy called on-demand- This can be set in the\nbooklet is still not supported by the testcenter. (It will fall back to eager). #324\n\nBackend 11.6.0\nThis update refactors the CSV-output for various data: logs, reviews, test-results and sys-check-reports.\nThe CSVs can now all be generated in the backend and retrieved via analogous endpoints. The data is also available\nas JSON. All CSVs contain BOMs now.\nEndpoints\n\nThe four new endpoints for retrieving reports:\n[GET] /workspace/{ws_id}/report/log\n[GET] /workspace/{ws_id}/report/review\n[GET] /workspace/{ws_id}/report/response\n[GET] /workspace/{ws_id}/report/sys-check\n\n\nThe old ones are now deprecated and will be removed soon:\n[GET] /workspace/{ws_id}/logs\n[GET] /workspace/{ws_id}/reviews\n[GET] /workspace/{ws_id}/responses\n[GET] /workspace/{ws_id}/sys-check/reports\n\n\n\nBackend 1.5.0\nFixes some issues in the file-management.\nBackend 11.2.0\nAdds the missing second endpoint for the customization-module.\nEndpoints\n\ncontains the new endpoint [PATCH] /system/config/custom-texts, which updates the key-value-store for the frontend analogous to customTexts.\n\nBackend 11.1.0\nThis update provides the API for the customziation-module.\nEndpoints\n\ncontains the new endpoint [PATCH] /system/config/app, which updates the key-value-store for the frontend analogous to customTexts.\n[GET] /system/config provides the key-value store 'app-config' as well.Database\n\nSee scripts/sql-schema/patches.mysql.d/11.1.0\n\nBackend 11.0.0\nThis update contains various changes around the improved Group-Monitor.\nEndpoints\n\nA new endpoint [GET] /system/time was added to retrieve the server's time and time zone.\nA new endpoint where added: /monitor/group/{group_name}/tests/unlock\nA new endpoint was added: [POST] /test/{test_id}/connection-lost. It can be triggered by a closing browser as well\nas from the broadcasting-service to notify a lost connection to the testController. Note: This endpoint does not\nneed any credentials.Database\n\nSee scripts/sql-schema/patches.mysql.d/11.0.0\n\nBackend 10.0.0\nThis update does not contain new functionality. It's about the init/install script, which can do database-migration from\nolder to newer versions by itself now. The version 10 indicates the beginning of an era with versioned database-schemas.\nThere is no manual patching necessary anymore after an update. So changes in the DB does not force a new major-version\nanymore.\nBackend 9.2.0\nXSD\n\nAdditional elements and attributes needed by teststudio-lite where added. They have no affect for the testcenter at\nthe moment.\n\nBackend 9.1.0\nEndpoints\n\nYou can now insert an optional parameter /alias/{alias} in the end to obtain data if unit is defined with\nan alias in the booklet. This is an HotFix for https://github.com/iqb-berlin/testcenter-frontend/issues/261.\n\nBackend 9.0.0\nThe main content of this update is a complete refactoring of the (XML-)File-classes,\nWorkspace validation and XML-File-Handling. The main goal was to keep validity and\nconsistency of the workspaces. The refactoring shall also allow more and deeper validation\nchecks, update scripts and more in the future. The whole part of the software is now backed\nwith unit-tests galore.\nRequirements\n\nPHP 7.4 is now requiredEndpoints\n\nThe [GET] /workspace/{id}/validation endpoint was removed completely.\nValidation takes now place on file upload and on [GET] /workspace/{id}/files.\nReturn-Values and Status-Codes of [POST] /workspace/{id}/file\nand [GET] /workspace/{id}/files where changed significantly to contain the\nfile's validation information as well as some metadata to display in the frontend.XML\n\nXML-files without a reference to a XSD-Schema generate a warning now. Currently,\nthe reference can only be done with the noNamespaceSchemaLocation-tag!\nPlayer-Metadata as defined in verona2\nis supported now.Config\n\nconfig/system.json contains a new (optional) value: allowExternalXMLSchema\n(boolean, defaults to true) . It defines wether the program is allowed to fetch\nXSD schemas from external URLs.\n\nFrontend 9.0.0\n\nUpdate Angular version from 9 to 12\n\nBackend 8.0.0\nThe role monitor-study / workspaceMonitor was removed completely and all functions and endpoints depending on it.\nXML\n\nMode monitor-study was removed from the mode-attributeEndpoints\n\nThe following endpoints where removed\n[PATCH] /{ws_id}/tests/unlock\n[PATCH] /{ws_id}/tests/lock\n[GET] /{ws_id}/status\n[GET] /{ws_id}/booklets/started\n\nBackend 7.4.0\nXML\n\nA new mode for logins is allowed now: run-demo\n\nBackend 7.0.0\nEndpoints\n\nLog- and State-Endpoints\n[patch] \\test\\{test_id}\\state\n[put] \\test\\{test_id}\\log\n[patch] \\test\\{test_id}\\unit\\{unit_name}\\state\n[put] \\test\\{test_id}\\unit\\{unit_name}\\logwere changed:\nThey all take items in the form[\n  {\n \"key\": __my_key__,\n \"content\": __my_content__,\n \"timeStamp\": 1234567891\n  }\n]\nA state change automatically whites a log now.\n\n\nTimestamp parameter in various endpoints is now timeStamp to resemble the Verona 2 Standard\n\nBackend 6.1.0\nDatabase\n\nYou have to apply database structure changes,\nsee scripts/sql-schema/patches.mysql.sql\n\nBackend 6.0.0\n\nHint: Sample Data/Player is still not supporting Verona 2.0 Interface,\nalthough compatible frontend version expect them!\n\nBackend 5.0.3\nConfig\n\nYou have to manipulate the contents of config/system.json: You need now two parameters\nbroadcastServiceUriPush and broadcastServiceUriSubscribe instead of just broadcastServiceUri.\n\nBackend 4.0.0\nIntroduced the group-monitor for the frist time.\nXML\nTesttakers\n\nname-attribute of -element is now called \nintroduced optional attribute label for -element\nin -element, only the optional  field remainsBooklet\n\nchanged defintion of -element to get rid of a warning,\nthat  was not allowed in some legal constellations\nid-attribute is now mandatory for testlets\n-element can not contain id or label (since it won't be\nvisible anywhere anyway), and first  can not contain\n, which would not make any sense\nMade  more readable: generic parameter-paremater is\nnow renamed to minutes in context of  and to code for\n-element.\nin -element, the elements  and  are mandatory,\nand  is optional, the rest does not exist anymore.SysCheck\n\nin -element, the elements  and  are mandatory,\nand  is optional, the rest does not exist anymore.Unit\n\nin -element, the elements  and  are mandatory,\nand  is optional, the rest does not exist anymore.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                broadcasting-service/src/command/command.controller.ts\n            \n            controller\n            CommandController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                broadcasting-service/src/command/command.interface.ts\n            \n            interface\n            Command\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                broadcasting-service/src/command/command.interface.ts\n            \n            function\n            isCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/command/command.interface.ts\n            \n            variable\n            commandKeywords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/common/error-handler.ts\n            \n            class\n            ErrorHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                broadcasting-service/src/common/websocket.gateway.ts\n            \n            class\n            WebsocketGateway\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                broadcasting-service/src/common/websocket.gateway.ts\n            \n            function\n            getLastUrlPart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/monitor/monitor.controller.ts\n            \n            controller\n            MonitorController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                broadcasting-service/src/monitor/monitor.interface.ts\n            \n            interface\n            Monitor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                broadcasting-service/src/monitor/monitor.interface.ts\n            \n            function\n            isMonitor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/system/system.controller.ts\n            \n            controller\n            SystemController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                broadcasting-service/src/test-session/session-change.interface.ts\n            \n            interface\n            SessionChange\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                broadcasting-service/src/test-session/session-change.interface.ts\n            \n            function\n            isSessionChange\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/test-session/test-session.controller.ts\n            \n            controller\n            TestSessionController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                broadcasting-service/src/test-session/test-session.service.ts\n            \n            injectable\n            TestSessionService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                broadcasting-service/src/test-session/test-session.service.ts\n            \n            variable\n            mergeSessionChanges\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/testee/testee.controller.ts\n            \n            controller\n            TesteeController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                broadcasting-service/src/testee/testee.interface.ts\n            \n            interface\n            Testee\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                broadcasting-service/src/testee/testee.interface.ts\n            \n            function\n            isTestee\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/testee/testee.service.ts\n            \n            injectable\n            TesteeService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                broadcasting-service/src/version/version.controller.ts\n            \n            controller\n            VersionController\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (broadcasting-service/.../main.ts)\n                        \n                        \n                            getLastUrlPart   (broadcasting-service/.../websocket.gateway.ts)\n                        \n                        \n                            isCommand   (broadcasting-service/.../command.interface.ts)\n                        \n                        \n                            isMonitor   (broadcasting-service/.../monitor.interface.ts)\n                        \n                        \n                            isSessionChange   (broadcasting-service/.../session-change.interface.ts)\n                        \n                        \n                            isTestee   (broadcasting-service/.../testee.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    broadcasting-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    broadcasting-service/src/common/websocket.gateway.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLastUrlPart\n                        \n                    \n                \n            \n            \n                \ngetLastUrlPart(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    broadcasting-service/src/command/command.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isCommand\n                        \n                    \n                \n            \n            \n                \nisCommand(arg: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Command\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    broadcasting-service/src/monitor/monitor.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMonitor\n                        \n                    \n                \n            \n            \n                \nisMonitor(arg: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Monitor\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    broadcasting-service/src/test-session/session-change.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isSessionChange\n                        \n                    \n                \n            \n            \n                \nisSessionChange(arg: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SessionChange\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    broadcasting-service/src/testee/testee.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isTestee\n                        \n                    \n                \n            \n            \n                \nisTestee(arg: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Testee\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\nTestcenter-Setup\nFollowing the instructions below, you will install the web-application \"IQB-Testcenter\" on your server. You will get handy commands to start and stop the services.\nApplication structure\nThe source code and therefore the application is separated in three submodules:\n\nFrontend: Angular based components to be loaded into the browser as single page application. You find the source code repository here.\nBackend php+database: Php based components to handle most of the requests from frontend; connects to the database; source code ist published here, the API is documented here\nBackend node.js: Additional server component to implement one special feature \"test operator's monitor\"\n\nIn order to install the whole application, one must install all components. Sure, this could be done the traditional way:\n\nclone the code repositories\ninstall the required software (npm install/compose)\ntranspile/build\nsetup database\nsetup web server, set routes etc.\n\nTo ease this process and to avoid mess after updates/upgrades, every module consist of one folder \"docker\". There you find scripts for docker based installation. The repository of this document you're reading now binds all docker install procedures together. This way, you install everything you need in one step.\nPreconditions\nBefore you follow the instructions below, you need to install docker,  docker-compose and make. We do not explain these applications, this is beyond the scope of this document.\nAlthough all steps below could be done in another operating system environment, we go for a unix/linux.\nInstallation for production only\n\"Production\" here means that you just want to install and use the application, not more. You do not like to get a look behind the curtain or to run sophisticated performance analyses. This type of installation has fewer requirements in regard of software and space.\nTechnically, you download pre-built images from Docker Hub.\n1. Download install script\nThe installation script requires bash to run. Go to a directory of your choice and get it:\n wget https://raw.githubusercontent.com/iqb-berlin/iqb-scripts/master/install.shAlso download the project specific configuration for the install script:\n wget https://raw.githubusercontent.com/iqb-berlin/testcenter-setup/master/config/install_config2. Run installation\n bash install.shNow, your system will get checked to ensure that you have docker, docker-compose and make ready to work. Then, you need to put in some parameters for your installation:\n\ntarget directory\nhost name (can be changed later)\nMySql connection parameters (database name, root password etc.)\n\n3. Run server\nAfter you've got \"--- INSTALLATION SUCCESSFUL ---\", you change into the installation directory and type\nmake runDocker will then start all containers: Frontend, Backends, and one traefik service to handle routing. To check, go to another computer and put in the host name of the installation - and enjoy!\nIf you like to stop the server later, run\nmake stop4. Login and change super user password\nRight after installation, please log in! At start, you have one user prepared: super with password user123. Because everyone can read this here and in the scripts, you should get up your shields by changing at least the password (go to \"System-Admin\").\n5. Update\nRun the script update.sh in the root directory. This will compare your local component versions with the latest release and update and restart the software stack.\nAlternatively you may also manually edit the file docker-compose.prod.yml. Find the lines starting with image and edit the version tag at the end.\nCheck the IQB Docker Hub Page for latest images.\nInstallation for development\nThe other way of installation gives you more options to access data, logs, to change settings more in detail, to find bugs and even to change code to meet your needs. Our applications are great, but not perfect at all!\nTechnically, you check out all source code and build the application modules as developers do. The whole Angular development framework will be installed with all tools. The build process will include all unit end e2e tests we prepared.  \nWe will not explain every step in detail. You should be familiar with git and bash and file handling in Unix, editing a text file etc.\n1. Clone this setup repository\nAfter the clone is done, you need to init the submodules feature of git:\ngit submodule init\ngit submodule update2. Configuration\nRun\nmake init-dev-config\n:warning: This creates configuration files with values meant for\ndevelopment purposes only. For any production setup be sure to customize the\nfiles. Most importantly use your own passwords!\n\nThe important configuration files are:\n\n.env - This file contains sensitive information about database access\nand user logins\ntestcenter-frontend/src/environments/environment.ts - Here information\nabout accessing the backend is kept for the frontend component\n\nThere is one important setting to be made in the generated file .env. On the first line, set the variable HOSTNAME to either the IP, or the hostname of the machine under which it is reachable.\nThe other setting is the address of the broadcasting service.\nReplace localhost in variable BROADCAST_SERVICE_URI_SUBSCRIBE with the actual hostname.\n3. Updating\ngit pull\ngit submodule update --recursiveMore server setup and handling\nSSL\nFor a setup using SSL certificates (HTTPS connection), the certificates need to be placed under config/certs and their name be put in config/cert_config.yml.\nStart/stop\nDepending on which setup you are using different commands may be used for starting and stopping the application suite.\nMost commands are usable via Makefile-targets: make .\nFor specific commands refer to the docker-compose documentation.\nStarting\nEvery startup command can be used in detached mode, which will free up the console or in blocking mode which uses the current console window\nfor all logging. Refer to the OS commands for sending processes to the background etc.\nmake runor\nmake run-detachedStopping\nFor attached console mode simply terminate the process (Ctrl+C under Linux).\nWhen in detached mode you may use the following command to stop the applications.\nmake stopLogs\nBecause the server is running in docker, you get logs via docker logs .\nApplication access\nOpen the target hostname (http://localhost for the development version)\nin your browser. You see now the testcenter application with testdata.\nRight after start, two logins are prepared:\n\nUsername super and password user123 as admin user\nUsername test and password user123 and code xxx as test-taker\n\n\nYou can reach the backend API directly under the \"api\" path.\nhttp://localhost/api\nTrouble Shooting\nTimeouts when building fresh images\nBuild them separately or increase docker-compose timeout:\nexport COMPOSE_HTTP_TIMEOUT=300.\nStrange SQL Constraint error after re-build\nWhen you rebuild make sure, that you not only delete all previous volumes but\ndelete all contents of testcenter-backend/src/vo_data as well.\nOtherwise, you get an erroneous application state.\nWill be fixed.\nError when using Make commands\nShould any produce an error, you may have to build the command manually. Refer the the Makefile-target you used and replace up with stop.\nFor example if you ran make run-prod-nontls-detached, you can stop with:\ndocker-compose -f docker-compose.yml -f docker-compose.prod.nontls.yml stop\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Institute for Educational Quality Improvement (IQB)\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nTestSessionService\n\nTestSessionService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTestSessionService->AppModule\n\n\n\n\n\nTesteeService\n\nTesteeService\n\nAppModule -->\n\nTesteeService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BroadcastingEvent   (broadcasting-service/.../interfaces.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    broadcasting-service/src/common/interfaces.ts\n    \n    \n        \n            \n                \n                    \n                    BroadcastingEvent\n                \n            \n            \n                \n                        \"test-sessions\" | \"commands\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            commandKeywords   (broadcasting-service/.../command.interface.ts)\n                        \n                        \n                            mergeSessionChanges   (broadcasting-service/.../test-session.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    broadcasting-service/src/command/command.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        commandKeywords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'pause',\n  'goto',\n  'terminate',\n  'resume',\n  'debug'\n]\n                    \n                \n\n\n        \n    \n\n    broadcasting-service/src/test-session/test-session.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mergeSessionChanges\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (testSession: SessionChange, sessionChange: SessionChange): SessionChange => {\n  if ((sessionChange.unitName) && (sessionChange.unitName !== testSession.unitName)) {\n    testSession.unitState = {};\n  }\n\n  sessionChange.unitState = { ...testSession.unitState, ...sessionChange.unitState };\n  sessionChange.testState = { ...testSession.testState, ...sessionChange.testState };\n\n  return { ...testSession, ...sessionChange };\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
