var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.716,1,1.716]],["body/modules/AppModule.html",[0,2.448,1,3.215,2,2.144,3,2.825,4,2.527,5,2.527,6,1.895,7,0.047,8,1.895,9,3.33,10,2.527,11,2.527,12,0.607,13,0.607,14,0.449,15,0.188,16,3.109,17,4.097,18,1.682,19,2.738,20,2.738,21,2.738,22,2.738,23,2.738,24,1.59,25,4.097,26,0.893,27,4.097,28,2.527,29,1.494,30,1.682,31,3.109,32,3.109,33,1.494,34,1.858,35,1.858,36,2.448,37,3.109,38,3.109,39,3.109,40,3.109,41,2.144,42,3.109,43,3.109,44,3.109,45,3.109,46,0.525,47,0.607,48,0.033,49,0.033]],["title/interfaces/Command.html",[50,1.047,51,1.329]],["body/interfaces/Command.html",[7,0.046,12,0.663,13,0.663,14,0.491,15,0.205,46,0.808,48,0.035,49,0.035,50,1.239,51,2.332,52,1.78,53,2.03,54,0.413,55,1.405,56,5.038,57,4.232,58,5.038,59,1.102,60,4.096,61,1.941,62,0.691,63,2.213,64,1.78,65,2.343,66,2.761,67,2.761,68,2.761,69,2.761,70,2.761,71,1.78,72,3.397,73,2.761,74,4.339,75,2.761,76,3.397,77,3.397,78,3.397,79,3.397,80,2.761,81,3.397,82,2.761,83,1.78,84,2.761,85,2.03,86,0.862,87,3.397,88,1.963,89,3.397,90,3.397]],["title/controllers/CommandController.html",[21,1.716,91,0.729]],["body/controllers/CommandController.html",[7,0.047,8,1.705,12,0.633,13,0.633,14,0.469,15,0.255,18,1.331,21,2.516,24,1.422,26,0.931,41,2.236,46,0.548,47,0.633,48,0.034,49,0.034,51,1.501,54,0.394,59,0.823,62,0.469,71,2.207,88,1.729,91,1.069,92,2.636,93,1.364,94,4.211,95,3.242,96,3.143,97,1.501,98,4.211,99,0.931,100,3.242,101,0.823,102,0.931,103,0.931,104,1.364,105,1.937,106,1.364,107,1.501,108,1.937,109,1.699,110,2.236,111,3.242,112,1.182,113,1.364,114,1.364,115,1.187,116,3.242,117,3.242,118,3.242,119,3.242,120,2.516,121,3.242,122,1.331,123,2.516,124,4.211,125,3.242,126,2.236,127,2.636,128,3.242,129,3.242,130,2.236,131,3.242]],["title/classes/ErrorHandler.html",[36,1.716,47,0.56]],["body/classes/ErrorHandler.html",[7,0.047,12,0.536,13,0.536,14,0.397,15,0.28,24,1.331,26,0.79,28,2.235,33,1.689,36,2.254,46,0.465,47,0.536,48,0.03,49,0.03,54,0.334,55,1.222,59,0.958,62,0.545,64,2.256,93,1.222,99,1.237,101,0.958,102,1.083,103,0.79,104,0.89,106,1.501,109,1.441,112,1.375,113,1.501,114,1.501,115,0.958,132,1.643,133,3.767,134,2.235,135,3.772,136,4.306,137,4.634,138,2.749,139,2.749,140,3.772,141,1.441,142,1.272,143,3.772,144,2.749,145,3.772,146,4.306,147,4.634,148,2.749,149,2.749,150,2.749,151,3.767,152,2.749,153,2.235,154,2.749,155,2.749,156,2.749,157,4.175,158,2.749,159,4.855,160,3.772,161,3.772,162,3.772,163,3.772,164,3.772,165,3.066,166,2.749,167,2.749,168,2.749,169,2.749,170,2.749,171,2.749,172,2.749]],["title/interfaces/Monitor.html",[50,1.047,173,1.178]],["body/interfaces/Monitor.html",[7,0.046,12,0.755,13,0.755,14,0.559,15,0.234,46,0.795,48,0.038,49,0.038,50,1.41,52,2.027,54,0.471,55,1.524,61,2.005,62,0.68,83,2.027,85,2.311,86,0.982,88,1.931,173,2.082,174,2.667,175,5.277,176,2.166,177,3.144,178,3.144,179,3.868]],["title/controllers/MonitorController.html",[20,1.716,91,0.729]],["body/controllers/MonitorController.html",[6,1.353,7,0.047,12,0.524,13,0.524,14,0.388,15,0.291,18,1.102,20,2.218,24,1.318,26,0.771,29,0.979,30,1.102,35,1.605,46,0.454,47,0.524,48,0.03,49,0.03,54,0.327,59,1.165,61,1.353,62,0.663,86,0.942,91,0.942,93,1.202,96,3.39,97,2.124,99,1.318,101,1.165,102,1.318,103,1.318,104,1.486,105,1.605,106,1.202,107,1.243,108,1.605,109,1.407,112,0.979,113,1.202,114,1.202,115,1.08,120,2.218,122,1.102,123,2.218,126,1.852,130,2.56,173,1.883,176,1.523,180,2.183,181,3.017,182,3.712,183,3.017,184,3.712,185,2.686,186,3.712,187,2.686,188,2.686,189,3.712,190,2.686,191,2.686,192,3.712,193,2.686,194,2.686,195,3.712,196,2.686,197,1.852,198,2.686,199,1.852,200,2.686,201,2.686,202,2.686,203,1.852,204,2.686,205,2.183,206,2.686,207,2.686,208,2.183,209,2.686,210,2.183,211,2.686,212,2.686,213,2.686,214,2.686,215,2.686]],["title/controllers/SystemController.html",[23,1.716,91,0.729]],["body/controllers/SystemController.html",[6,1.541,7,0.047,8,1.71,12,0.636,13,0.636,14,0.471,15,0.284,18,1.338,23,2.525,24,1.425,26,0.936,29,1.188,30,1.338,33,1.541,34,1.947,35,1.947,41,2.247,46,0.551,47,0.825,48,0.034,49,0.034,54,0.396,91,1.073,93,1.518,97,1.956,99,1.214,103,1.214,104,1.607,106,1.368,107,1.508,112,1.188,113,1.607,114,1.607,115,0.827,199,2.247,216,2.649,217,3.421,218,4.961,219,4.225,220,3.259,221,3.259,222,3.259,223,3.259,224,3.259,225,3.259,226,3.259,227,2.649,228,3.259,229,3.259,230,3.259,231,3.259,232,2.649,233,2.649,234,2.247,235,2.649,236,2.649,237,3.259]],["title/controllers/TestSessionController.html",[19,1.716,91,0.729]],["body/controllers/TestSessionController.html",[6,1.499,7,0.047,12,0.61,13,0.61,14,0.452,15,0.278,18,1.282,19,2.456,24,1.402,26,0.897,29,1.139,30,1.885,35,1.867,46,0.528,47,0.61,48,0.033,49,0.033,54,0.38,59,0.793,62,0.452,86,0.793,91,1.044,93,1.331,96,3.111,97,1.902,99,1.18,101,0.793,102,0.897,103,1.18,104,1.331,105,1.867,106,1.331,107,1.446,108,1.867,109,1.637,112,1.139,113,1.331,114,1.331,115,1.044,120,1.867,122,1.282,123,1.867,199,2.154,203,2.154,238,2.745,239,2.539,240,3.967,241,4.11,242,4.11,243,2.154,244,3.124,245,3.168,246,3.124,247,4.11,248,3.734,249,3.124,250,3.124,251,1.867,252,2.539,253,3.341,254,2.539,255,3.124,256,3.124,257,3.124,258,3.124,259,3.124,260,3.124,261,3.124]],["title/injectables/TestSessionService.html",[6,1.047,262,1.505]],["body/injectables/TestSessionService.html",[6,0.873,7,0.047,12,0.292,13,0.292,14,0.216,15,0.299,24,0.984,26,0.43,29,0.545,30,2.028,33,1.457,34,0.894,46,0.253,47,0.292,48,0.019,49,0.019,54,0.182,55,0.776,59,1.015,61,1.876,62,0.667,63,0.692,64,2.095,71,2.2,86,0.951,88,1.723,93,0.776,99,1.4,101,1.015,102,1.148,103,1.292,104,1.527,106,1.109,112,0.873,113,1.637,114,1.109,115,0.608,122,0.614,141,1.57,142,1.386,173,2.053,176,0.614,183,2.435,217,2.362,232,1.216,233,1.216,234,1.031,235,1.216,238,2.953,240,2.784,243,1.57,245,3.485,251,0.894,252,1.216,253,1.216,254,1.216,262,1.255,263,1.031,264,1.031,265,2.995,266,2.395,267,2.395,268,2.395,269,2.395,270,2.784,271,3.424,272,2.395,273,1.216,274,1.496,275,2.395,276,1.496,277,2.395,278,1.496,279,3.249,280,2.395,281,1.496,282,2.395,283,1.496,284,2.395,285,1.496,286,1.496,287,1.496,288,1.496,289,2.395,290,1.496,291,1.947,292,2.395,293,1.496,294,1.652,295,1.496,296,1.496,297,1.496,298,1.031,299,3.249,300,1.947,301,1.216,302,1.947,303,1.947,304,1.947,305,1.216,306,1.216,307,1.496,308,3.412,309,1.496,310,1.496,311,1.496,312,1.496,313,1.031,314,1.496,315,1.216,316,3.424,317,1.496,318,1.496,319,1.496,320,3.424,321,1.216,322,1.496,323,1.216,324,1.216,325,1.496,326,1.496,327,1.496,328,1.496,329,1.496,330,1.216,331,1.496,332,1.496,333,1.496,334,1.496,335,1.496,336,2.395,337,1.496,338,1.216,339,1.496,340,2.395,341,1.652,342,1.496,343,1.216,344,1.496,345,1.496,346,2.395,347,2.395,348,1.496,349,2.395,350,1.496,351,1.496,352,1.496,353,1.496,354,1.496,355,1.496,356,1.496,357,1.496,358,1.496,359,1.496,360,1.496,361,1.496]],["title/interfaces/Testee.html",[50,1.047,362,1.178]],["body/interfaces/Testee.html",[7,0.046,12,0.735,13,0.735,14,0.544,15,0.228,46,0.782,48,0.037,49,0.037,50,1.373,52,1.973,54,0.458,55,1.499,61,1.992,62,0.725,63,2.32,83,1.973,85,2.25,86,0.956,88,1.9,176,2.146,178,3.061,313,3.606,362,2.057,363,2.597,364,4.25,365,3.061,366,3.766]],["title/controllers/TesteeController.html",[22,1.716,91,0.729]],["body/controllers/TesteeController.html",[7,0.047,8,1.604,12,0.559,13,0.559,14,0.414,15,0.285,18,1.176,22,2.319,24,1.354,26,0.823,46,0.484,47,0.559,48,0.031,49,0.031,54,0.349,59,1.117,62,0.636,86,0.728,91,0.985,93,1.257,96,3.359,97,2.036,99,1.263,101,1.117,102,1.263,103,1.263,104,1.527,105,1.712,106,1.257,107,1.326,108,1.712,109,1.502,112,1.045,113,1.257,114,1.257,115,1.117,120,2.319,122,1.176,123,2.319,126,1.976,130,2.676,176,1.593,203,1.976,205,2.329,208,2.329,210,2.329,362,1.935,367,2.329,368,3.88,369,2.676,370,3.88,371,2.866,372,3.88,373,2.866,374,2.866,375,3.88,376,2.866,377,2.866,378,3.88,379,2.866,380,2.866,381,1.976,382,2.329,383,2.866,384,2.866,385,2.866,386,2.866,387,2.866,388,2.866,389,2.866,390,2.866,391,2.866,392,2.866]],["title/injectables/TesteeService.html",[8,1.047,262,1.505]],["body/injectables/TesteeService.html",[7,0.047,8,1.155,12,0.42,13,0.42,14,0.311,15,0.308,24,1.191,26,0.618,33,1.686,34,1.285,46,0.363,47,0.42,48,0.025,49,0.025,51,2.14,54,0.262,55,1.026,59,1.122,61,1.789,62,0.691,63,1.74,64,1.127,71,1.659,86,0.804,88,1.3,93,1.026,99,1.438,101,1.122,102,1.27,103,1.328,104,1.649,106,1.343,112,1.155,113,1.589,114,1.343,115,0.804,127,3.056,141,1.659,142,1.466,176,0.882,217,2.86,262,1.659,263,1.483,273,1.748,294,1.483,306,1.748,313,1.483,338,1.748,341,1.483,362,2.09,364,3.056,369,2.592,382,1.748,393,1.748,394,3.166,395,3.166,396,4.147,397,3.166,398,3.166,399,2.592,400,4.147,401,2.15,402,3.166,403,2.15,404,3.166,405,2.15,406,2.15,407,2.15,408,3.166,409,2.15,410,3.759,411,3.166,412,2.15,413,3.166,414,2.15,415,2.15,416,2.15,417,2.15,418,2.15,419,2.15,420,3.759,421,2.15,422,3.166,423,3.166,424,2.15,425,2.15,426,2.574,427,2.574,428,3.166,429,2.15,430,2.15,431,2.15,432,2.15,433,2.15,434,2.15,435,2.15,436,2.15,437,2.15,438,2.15,439,1.748,440,2.15]],["title/classes/WebsocketGateway.html",[33,1.047,47,0.56]],["body/classes/WebsocketGateway.html",[7,0.047,12,0.342,13,0.342,14,0.253,15,0.31,24,1.281,26,0.504,33,1.363,46,0.296,47,0.342,48,0.022,49,0.022,52,0.919,54,0.213,55,0.879,59,1.027,61,1.846,62,0.699,63,1.731,64,1.74,71,1.422,83,0.919,86,0.949,88,1.114,93,0.879,97,1.256,99,1.454,101,1.027,102,1.162,103,1.324,104,1.566,106,1.211,113,1.674,114,1.076,115,1.086,122,1.535,132,1.048,141,1.959,142,1.731,165,3.626,176,1.66,181,2.7,270,3.039,291,2.206,294,1.209,330,1.425,341,1.872,399,1.209,441,1.209,442,2.714,443,3.321,444,3.321,445,3.321,446,3.321,447,3.477,448,2.714,449,3.739,450,2.714,451,3.739,452,2.714,453,2.714,454,2.714,455,4.044,456,2.714,457,1.753,458,1.753,459,2.714,460,1.753,461,2.714,462,1.753,463,3.321,464,1.753,465,2.714,466,4.044,467,3.039,468,1.753,469,1.753,470,2.714,471,1.753,472,1.753,473,1.753,474,4.044,475,2.714,476,5.119,477,3.739,478,1.753,479,2.714,480,1.753,481,1.753,482,2.714,483,1.753,484,1.753,485,1.753,486,1.753,487,1.753,488,1.753,489,1.753,490,1.753,491,1.753,492,1.425,493,1.753,494,1.753,495,1.753,496,1.753,497,1.425,498,1.753,499,3.739,500,2.714,501,2.714,502,1.753,503,3.739,504,2.714,505,1.753,506,1.753,507,1.753,508,1.753,509,1.753,510,1.753,511,1.753,512,2.714,513,1.753,514,1.753,515,1.753,516,1.753,517,1.753,518,1.753,519,1.753,520,1.753,521,1.425]],["title/changelog.html",[522,1.962,523,1.962,524,1.665]],["body/changelog.html",[0,0.968,3,0.646,7,0.033,14,0.518,15,0.098,29,1.151,46,0.158,48,0.021,49,0.013,50,0.342,57,1.741,59,0.86,60,1.741,63,0.75,73,1.317,75,1.317,80,0.761,82,3.049,86,0.411,99,0.465,101,0.238,102,0.615,107,0.75,115,1.077,122,1.652,132,0.56,142,1.462,151,1.741,157,0.761,173,1.778,236,0.761,243,0.491,248,0.761,251,0.968,308,2.567,315,1.317,321,0.761,323,0.761,324,0.761,362,0.879,369,0.646,426,0.761,427,1.317,521,0.761,524,0.646,525,0.937,526,2.142,527,0.937,528,3.272,529,0.937,530,0.937,531,0.937,532,0.937,533,1.62,534,1.741,535,3.897,536,2.142,537,0.937,538,2.142,539,0.937,540,3.272,541,1.62,542,0.937,543,0.937,544,3.582,545,0.937,546,0.937,547,0.937,548,0.937,549,1.62,550,2.142,551,2.142,552,0.937,553,1.62,554,3.387,555,0.937,556,0.937,557,4.041,558,1.317,559,0.937,560,3.158,561,0.937,562,2.552,563,0.937,564,0.937,565,0.937,566,0.937,567,0.761,568,0.937,569,0.937,570,0.761,571,0.937,572,2.142,573,1.62,574,1.62,575,2.552,576,0.937,577,2.075,578,1.62,579,0.937,580,0.937,581,0.937,582,0.937,583,2.552,584,2.075,585,0.937,586,0.937,587,0.937,588,0.937,589,0.937,590,1.62,591,0.937,592,0.937,593,0.937,594,0.937,595,0.937,596,2.552,597,0.937,598,0.937,599,0.937,600,0.937,601,3.582,602,0.937,603,2.344,604,0.937,605,0.937,606,2.142,607,0.937,608,0.937,609,3.387,610,0.937,611,1.62,612,1.62,613,0.937,614,0.937,615,0.937,616,0.937,617,0.937,618,0.937,619,0.937,620,2.884,621,0.937,622,0.937,623,0.937,624,1.62,625,1.62,626,0.937,627,0.937,628,1.317,629,0.937,630,1.62,631,0.937,632,0.937,633,2.142,634,1.62,635,2.552,636,0.937,637,1.62,638,0.937,639,2.142,640,1.317,641,0.937,642,1.62,643,0.937,644,0.937,645,0.937,646,0.937,647,0.937,648,0.937,649,0.937,650,0.761,651,0.937,652,1.62,653,3.521,654,0.937,655,0.937,656,0.761,657,1.62,658,0.937,659,0.937,660,2.142,661,0.937,662,1.62,663,0.937,664,0.937,665,0.937,666,1.62,667,0.937,668,1.62,669,0.937,670,0.937,671,1.62,672,1.62,673,1.62,674,0.937,675,3.272,676,0.937,677,0.937,678,2.552,679,0.937,680,0.937,681,0.937,682,2.884,683,0.937,684,0.937,685,0.937,686,0.937,687,0.937,688,0.937,689,0.937,690,0.937,691,1.62,692,0.937,693,0.937,694,1.62,695,0.937,696,0.937,697,0.937,698,0.937,699,0.937,700,1.62,701,0.937,702,0.937,703,0.937,704,0.937,705,0.937,706,0.937,707,0.937,708,2.142,709,1.62,710,0.761,711,0.937,712,1.62,713,1.62,714,1.62,715,1.62,716,1.62,717,3.387,718,1.62,719,2.142,720,2.142,721,1.62,722,2.142,723,1.62,724,0.937,725,2.142,726,2.075,727,1.62,728,2.552,729,0.937,730,1.62,731,0.937,732,0.937,733,2.142,734,0.937,735,0.937,736,0.937,737,0.937,738,0.937,739,0.937,740,0.937,741,2.142,742,2.884,743,1.62,744,0.937,745,0.937,746,0.937,747,0.937,748,0.937,749,2.552,750,0.937,751,0.937,752,2.552,753,0.937,754,0.937,755,0.937,756,0.937,757,0.937,758,0.937,759,0.937,760,0.937,761,0.937,762,0.937,763,0.937,764,0.56,765,0.937,766,0.937,767,2.142,768,0.937,769,0.937,770,0.937,771,0.937,772,1.62,773,4.488,774,1.62,775,2.142,776,1.62,777,2.884,778,0.937,779,0.937,780,0.937,781,0.937,782,1.62,783,2.884,784,3.75,785,0.937,786,0.937,787,0.937,788,0.937,789,2.552,790,0.937,791,0.937,792,0.937,793,1.62,794,3.158,795,1.62,796,1.62,797,1.62,798,1.62,799,2.552,800,0.937,801,1.62,802,0.937,803,2.552,804,0.937,805,0.937,806,0.937,807,0.937,808,0.937,809,0.937,810,0.937,811,0.937,812,2.142,813,1.62,814,0.937,815,1.62,816,1.62,817,0.937,818,0.937,819,0.937,820,0.937,821,0.937,822,0.937,823,0.937,824,0.937,825,0.937,826,0.937,827,0.937,828,0.937,829,1.62,830,2.142,831,0.937,832,3.387,833,1.62,834,0.761,835,0.937,836,3.158,837,1.62,838,0.937,839,2.142,840,1.62,841,0.937,842,0.937,843,0.937,844,0.937,845,0.937,846,2.552,847,0.937,848,0.937,849,0.937,850,0.937,851,0.937,852,0.937,853,0.937,854,1.317,855,1.62,856,0.937,857,0.937,858,2.142,859,0.937,860,0.937,861,0.937,862,0.937,863,0.937,864,0.937,865,0.937,866,0.937,867,0.937,868,0.937,869,0.937,870,0.937,871,0.937,872,0.937,873,0.937,874,0.937,875,0.937,876,0.937,877,0.937,878,0.937,879,2.142,880,1.62,881,0.937,882,1.62,883,0.761,884,0.937,885,0.937,886,0.937,887,0.937,888,2.142,889,2.142,890,0.937,891,0.937,892,0.937,893,0.937,894,0.937,895,2.552,896,0.937,897,0.937,898,0.937,899,0.937,900,0.937,901,0.937,902,0.937,903,0.761,904,0.937,905,0.937,906,0.937,907,1.62,908,0.937,909,0.937,910,0.937,911,0.937,912,0.761,913,0.937,914,0.937,915,0.937,916,0.937,917,0.937,918,0.937,919,0.937,920,0.937,921,0.937,922,0.937,923,1.62,924,0.761,925,0.937,926,0.937,927,0.937,928,0.937,929,0.937,930,2.552,931,0.937,932,0.937,933,0.937,934,0.937,935,0.937,936,0.937,937,0.937,938,0.937,939,0.937,940,0.937,941,0.937,942,0.646,943,0.646,944,0.937,945,0.937,946,1.62,947,1.62,948,0.937,949,1.62,950,3.387,951,2.552,952,0.937,953,0.937,954,0.937,955,0.937,956,0.937,957,0.937,958,2.142,959,0.937,960,0.937,961,0.937,962,0.937,963,0.937,964,0.937,965,0.937,966,0.937,967,0.937,968,0.937,969,0.937,970,0.937,971,0.937,972,1.62,973,0.937,974,0.937,975,0.937,976,0.937,977,0.761,978,1.62,979,0.937,980,0.937,981,1.62,982,0.937,983,0.937,984,0.937,985,0.937,986,0.937,987,0.937,988,1.62,989,0.937,990,0.937,991,0.937,992,0.937,993,0.937,994,0.937,995,0.937,996,0.937,997,0.937,998,0.937,999,0.937,1000,1.62,1001,0.937,1002,0.646,1003,2.552,1004,0.937,1005,0.937,1006,0.937,1007,0.937,1008,0.937,1009,0.937,1010,0.937,1011,1.62,1012,0.937,1013,1.62,1014,0.937,1015,0.937,1016,0.937,1017,0.937,1018,0.937,1019,0.937,1020,0.937,1021,0.937,1022,0.937,1023,0.937,1024,0.937,1025,0.937,1026,1.317,1027,0.761,1028,0.937,1029,0.937,1030,0.937,1031,0.937,1032,0.937,1033,0.937,1034,0.937,1035,0.937,1036,0.937,1037,0.937,1038,0.937,1039,0.937,1040,0.937,1041,0.937,1042,0.937,1043,0.937,1044,0.937,1045,0.937,1046,0.937,1047,0.937,1048,0.937,1049,0.937,1050,1.62,1051,0.937,1052,0.937,1053,3.75,1054,1.62,1055,0.937,1056,0.937,1057,0.937,1058,0.937,1059,0.937,1060,2.552,1061,0.937,1062,0.937,1063,0.937,1064,0.937,1065,0.937,1066,0.937,1067,0.937,1068,0.937,1069,0.937,1070,0.937,1071,0.937,1072,0.937,1073,2.142,1074,0.937]],["title/coverage.html",[1075,2.679]],["body/coverage.html",[6,1.081,7,0.046,8,1.081,14,0.429,15,0.345,19,1.772,20,1.772,21,1.772,22,1.772,23,1.772,30,1.837,33,1.081,36,1.772,47,0.775,48,0.032,49,0.032,50,1.632,51,1.372,53,2.675,62,0.429,65,2.045,83,2.612,91,1.265,92,2.41,110,2.045,115,0.753,133,2.41,134,2.41,173,1.217,174,2.738,180,2.41,197,2.045,216,2.41,238,2.675,239,2.41,262,2.081,264,2.738,298,2.045,343,4.632,362,1.217,363,2.738,367,2.41,381,2.045,393,2.41,441,2.738,834,2.41,1075,2.045,1076,2.41,1077,2.965,1078,2.965,1079,2.965,1080,3.97,1081,5.238,1082,3.97,1083,4.476,1084,3.97,1085,2.41,1086,2.41,1087,2.41,1088,4.476,1089,2.965,1090,2.965]],["title/miscellaneous/functions.html",[1002,2.375,1091,1.117]],["body/miscellaneous/functions.html",[7,0.045,15,0.34,48,0.036,49,0.036,51,1.665,53,2.149,54,0.438,59,1.306,61,1.64,62,0.744,84,2.924,85,2.934,101,1.306,102,1.478,103,1.41,110,3.103,173,1.476,174,2.48,177,2.924,197,3.103,362,1.476,363,2.48,365,2.924,381,3.103,441,2.48,492,2.924,1002,2.48,1085,3.657,1086,2.924,1087,3.991,1091,1.665,1092,3.597,1093,3.597,1094,2.924,1095,3.597,1096,3.597,1097,3.597]],["title/index.html",[54,0.294,522,1.962,523,1.962]],["body/index.html",[7,0.034,15,0.258,29,1.558,48,0.034,49,0.034,101,0.842,153,2.697,227,2.697,234,2.288,243,1.739,251,2.826,399,2.288,447,2.697,524,2.288,528,3.474,534,3.844,540,2.697,557,2.697,558,2.697,567,2.697,577,2.697,584,2.697,603,2.697,628,2.697,640,3.474,650,2.697,653,3.844,656,2.697,675,3.844,710,2.697,764,1.983,854,2.697,883,3.844,912,2.697,924,2.697,942,2.288,943,2.288,977,2.697,1026,2.697,1075,2.288,1076,3.474,1098,3.318,1099,2.697,1100,3.318,1101,3.318,1102,3.318,1103,3.318,1104,3.318,1105,3.318,1106,4.729,1107,3.318,1108,3.318,1109,3.318,1110,3.318,1111,3.318,1112,3.318,1113,3.318,1114,3.318,1115,3.318,1116,3.318,1117,3.318,1118,3.318,1119,3.318,1120,3.318,1121,3.318,1122,3.318,1123,3.318,1124,3.318,1125,3.318,1126,3.318,1127,4.274,1128,3.318,1129,3.318,1130,3.318,1131,3.318,1132,4.274,1133,3.318,1134,3.318,1135,3.318,1136,3.318,1137,3.318,1138,3.318,1139,3.318,1140,3.318,1141,3.318,1142,3.318,1143,3.318]],["title/modules.html",[2,2.679]],["body/modules.html",[1,2.646,2,3.054,7,0.041,48,0.041,49,0.041,903,3.6,1144,4.429,1145,4.429,1146,4.429]],["title/overview.html",[764,2.322]],["body/overview.html",[0,2.421,1,3.322,3,3.337,4,3.293,5,3.293,6,1.886,7,0.043,8,1.886,9,3.933,10,3.293,11,3.293,18,1.663,48,0.039,49,0.039,52,2.123,132,2.421,263,2.794,497,3.293,764,2.421,1027,3.933,1147,4.051,1148,4.051]],["title/properties.html",[55,1.115,570,1.962]],["body/properties.html",[7,0.045,48,0.041,49,0.041,55,1.41,726,3.539,942,3.002,943,3.002,1099,3.539,1149,4.354,1150,4.354,1151,4.354]],["title/miscellaneous/typealiases.html",[1091,1.117,1152,3.444]],["body/miscellaneous/typealiases.html",[7,0.043,15,0.303,29,1.571,48,0.04,49,0.04,54,0.524,62,0.623,243,2.259,439,3.503,467,4.079,1091,1.995,1153,4.31,1154,4.31,1155,4.31]],["title/miscellaneous/variables.html",[1091,1.117,1156,2.799]],["body/miscellaneous/variables.html",[7,0.047,15,0.312,30,1.493,48,0.036,49,0.036,53,2.174,54,0.443,62,0.526,65,3.125,66,2.957,67,2.957,68,2.957,69,2.957,70,2.957,86,0.924,141,2.375,142,2.097,238,2.174,245,3.403,264,3.125,279,3.683,298,3.125,299,3.683,300,3.683,301,2.957,302,3.683,303,3.683,304,3.683,305,2.957,1091,1.684,1094,2.957,1156,2.957,1157,3.638]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":343,"title":{},"body":{"injectables/TestSessionService.html":{},"coverage.html":{}}}],["0/1",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1089,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1084,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1088,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1083,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":497,"title":{},"body":{"classes/WebsocketGateway.html":{},"overview.html":{}}}],["10",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["10.0.0",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["10h",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["11.0.0",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["11.1.0",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["11.2.0",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["11.5.0",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["11.6.0",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["12.0.0",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["12.0.1",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["12.0.3",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["12.1.0",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["12.1.1",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["12.1.2",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["12.1.3",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["12.1.4",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["12.1.7",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["12.2.1",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["12.2.2",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["12.2.3",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["12.3.0",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["12.3.3",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["12.4.0",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["12.4.1",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["12.4.2",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["120",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["1234567891",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["13.0.0",{"_index":1149,"title":{},"body":{"properties.html":{}}}],["13.0.1",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":1027,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2.0",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["2.1.6",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["2.4.53",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["231",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["238",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["239",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["241",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1148,"title":{},"body":{"overview.html":{}}}],["30min",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["335",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["340",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["341",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["347",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["358",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["359",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["361",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["366",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["372",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["373",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["374",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["376",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["379",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["382",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["385",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["388",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["4.0.0",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["400",{"_index":123,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["5",{"_index":1147,"title":{},"body":{"overview.html":{}}}],["5.0.3",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["500",{"_index":171,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["6.0.0",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["6.1.0",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["7.0.0",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["7.4",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["7.4.0",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["7.4.22",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["7.4.29",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["70",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["8.0.0",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["9.0.0",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["9.1.0",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["9.2.0",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["__my_content__",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["__my_key__",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["a.indexof(v",{"_index":352,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["accessed",{"_index":1111,"title":{},"body":{"index.html":{}}}],["added",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["addmonitor",{"_index":266,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["addmonitor(monitor",{"_index":275,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["adds",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["addsessionchange",{"_index":267,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["addsessionchange(sessionchange",{"_index":277,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["addtestee",{"_index":394,"title":{},"body":{"injectables/TesteeService.html":{}}}],["addtestee(testee",{"_index":402,"title":{},"body":{"injectables/TesteeService.html":{}}}],["admin",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["affect",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["alias",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["alias/{alias",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1153,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all\":\"{\\\"key",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["allmonitors",{"_index":347,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["allow",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["allowed",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["allowexternalxmlschema",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["alltestsessions",{"_index":356,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["alltestsessions.concat(object.values(grouptestsessions",{"_index":358,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["already",{"_index":321,"title":{},"body":{"injectables/TestSessionService.html":{},"changelog.html":{}}}],["alternative",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["although",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["always",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["analogous",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["anyway",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["anywhere",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["apache",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["api",{"_index":883,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["app_filter",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["appear",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["application",{"_index":1108,"title":{},"body":{"index.html":{}}}],["applications",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["apply",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["applysessionchange",{"_index":268,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["applysessionchange(sessionchange",{"_index":280,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arg",{"_index":85,"title":{},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"interfaces/Testee.html":{},"miscellaneous/functions.html":{}}}],["arg.arguments",{"_index":90,"title":{},"body":{"interfaces/Command.html":{}}}],["arg.groups",{"_index":179,"title":{},"body":{"interfaces/Monitor.html":{}}}],["arg.id",{"_index":89,"title":{},"body":{"interfaces/Command.html":{}}}],["arg.keyword",{"_index":87,"title":{},"body":{"interfaces/Command.html":{}}}],["arg.testid",{"_index":366,"title":{},"body":{"interfaces/Testee.html":{}}}],["arg.token",{"_index":178,"title":{},"body":{"interfaces/Monitor.html":{},"interfaces/Testee.html":{}}}],["arguments",{"_index":56,"title":{},"body":{"interfaces/Command.html":{}}}],["argumentshost",{"_index":147,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["around",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["arr",{"_index":493,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["arr[arr.length",{"_index":496,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["array.isarray(request.body.testids",{"_index":125,"title":{},"body":{"controllers/CommandController.html":{}}}],["ask",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["assigned",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["attention",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["auth_token}/resource/{resource_name",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["aware",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["backed",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":528,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["based",{"_index":1110,"title":{},"body":{"index.html":{}}}],["baseexceptionfilter",{"_index":136,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["become",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["beginning",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["behaviorsubject",{"_index":455,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["behaviorsubject(0",{"_index":459,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["behaviorsubject(null",{"_index":456,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["behind",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["berlin",{"_index":1117,"title":{},"body":{"index.html":{}}}],["berlin/testcenter",{"_index":943,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["between",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["block",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":208,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/TesteeController.html":{}}}],["bogus",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["boms",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["booklet",{"_index":584,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["booklet.xml",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["booklet.xsd",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["boolean",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["bootstrap",{"_index":1087,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["broadcastcommandtotestees",{"_index":395,"title":{},"body":{"injectables/TesteeService.html":{}}}],["broadcastcommandtotestees(command",{"_index":404,"title":{},"body":{"injectables/TesteeService.html":{}}}],["broadcasting",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["broadcastingevent",{"_index":467,"title":{},"body":{"classes/WebsocketGateway.html":{},"miscellaneous/typealiases.html":{}}}],["broadcastserviceuri",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["broadcastserviceuripush",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["broadcastserviceurisubscribe",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["broadcasttestsessionstogroupmonitors",{"_index":269,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["broadcasttestsessionstogroupmonitors(groupname",{"_index":282,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["broadcasttoregistered",{"_index":448,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["broadcasttoregistered(tokens",{"_index":465,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["broken",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1146,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":903,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["bug",{"_index":603,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bugfixes",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["caching",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["calculation",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":137,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["catch(exception",{"_index":145,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["causes",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":248,"title":{},"body":{"controllers/TestSessionController.html":{},"changelog.html":{}}}],["change.interface",{"_index":254,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{}}}],["changed",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":524,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["characters",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1100,"title":{},"body":{"index.html":{}}}],["check",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["check/reports",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["checked",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["checks",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["chunk",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["chunkwise",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["class",{"_index":47,"title":{"classes/ErrorHandler.html":{},"classes/WebsocketGateway.html":{}},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"coverage.html":{}}}],["classes",{"_index":132,"title":{},"body":{"classes/ErrorHandler.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"overview.html":{}}}],["clean",{"_index":217,"title":{},"body":{"controllers/SystemController.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}}}],["client",{"_index":476,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["client.count",{"_index":520,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["clientlost",{"_index":445,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["clients",{"_index":181,"title":{},"body":{"controllers/MonitorController.html":{},"classes/WebsocketGateway.html":{}}}],["clients(@req",{"_index":214,"title":{},"body":{"controllers/MonitorController.html":{}}}],["clients(request",{"_index":185,"title":{},"body":{"controllers/MonitorController.html":{}}}],["clientscount",{"_index":446,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["clock",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["closing",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["codes",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["codeword",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["command",{"_index":51,"title":{"interfaces/Command.html":{}},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"injectables/TesteeService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["command.interface",{"_index":111,"title":{},"body":{"controllers/CommandController.html":{}}}],["command/command.controller",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["command/command.interface",{"_index":416,"title":{},"body":{"injectables/TesteeService.html":{}}}],["commandcontroller",{"_index":21,"title":{"controllers/CommandController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"coverage.html":{}}}],["commandkeywords",{"_index":65,"title":{},"body":{"interfaces/Command.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commandkeywords)[number",{"_index":72,"title":{},"body":{"interfaces/Command.html":{}}}],["commands",{"_index":439,"title":{},"body":{"injectables/TesteeService.html":{},"miscellaneous/typealiases.html":{}}}],["common/error",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["common/interfaces/test",{"_index":252,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{}}}],["common/websocket.gateway",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"controllers/SystemController.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}}}],["communication",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["compatible",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["completely",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["completeness",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":1139,"title":{},"body":{"index.html":{}}}],["concat(object.values(groupmonitors",{"_index":350,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["config",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["config/system.json",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":1127,"title":{},"body":{"index.html":{}}}],["connected",{"_index":502,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["connection",{"_index":426,"title":{},"body":{"injectables/TesteeService.html":{},"changelog.html":{}}}],["consistency",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["const",{"_index":64,"title":{},"body":{"interfaces/Command.html":{},"classes/ErrorHandler.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["constellations",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["constructor",{"_index":112,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{}}}],["constructor(eventsgateway",{"_index":138,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["constructor(websocketgateway",{"_index":273,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}}}],["contain",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["contains",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["content",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["contents",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["contenttype('text",{"_index":169,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["context",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":91,"title":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{},"coverage.html":{}}}],["controllers",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{},"overview.html":{}}}],["correct",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["correctly",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["count",{"_index":521,"title":{},"body":{"classes/WebsocketGateway.html":{},"changelog.html":{}}}],["coverage",{"_index":1075,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["created",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["credentials",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["critical",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["csv",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["csvs",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":154,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["ctx.getresponse",{"_index":156,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["currently",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["customizable",{"_index":1128,"title":{},"body":{"index.html":{}}}],["customization",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["customtexts",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["customziation",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":122,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{}}}],["data/player",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["database",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["dataloss",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["dataservice",{"_index":199,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{}}}],["db",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["debouncing",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":70,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/variables.html":{}}}],["declare",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["decorators",{"_index":97,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{},"classes/WebsocketGateway.html":{}}}],["deeper",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":141,"title":{},"body":{"classes/ErrorHandler.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["defined",{"_index":99,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{}}}],["defines",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["defintion",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":341,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["deleted",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["deleting",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["demo",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"overview.html":{}}}],["depending",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["developed",{"_index":1113,"title":{},"body":{"index.html":{}}}],["developer's",{"_index":1137,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1135,"title":{},"body":{"index.html":{}}}],["development",{"_index":1136,"title":{},"body":{"index.html":{}}}],["didn't",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["different",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["directdowlaodurl",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["directdownloadurl",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":233,"title":{},"body":{"controllers/SystemController.html":{},"injectables/TestSessionService.html":{}}}],["disconnectall",{"_index":449,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["disconnectclient",{"_index":450,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["disconnectclient(monitortoken",{"_index":470,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["disconnected",{"_index":506,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["disconnectedtoken",{"_index":503,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["disconnectnotificationuri",{"_index":364,"title":{},"body":{"interfaces/Testee.html":{},"injectables/TesteeService.html":{}}}],["display",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["distinguishable",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1143,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1121,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1076,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["done",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["dont't",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":495,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["each",{"_index":74,"title":{},"body":{"interfaces/Command.html":{}}}],["edited",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["educational",{"_index":1115,"title":{},"body":{"index.html":{}}}],["eg",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["elements",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["endpoint",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["endpoints",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["enter",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["era",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["error",{"_index":429,"title":{},"body":{"injectables/TesteeService.html":{}}}],["error.message",{"_index":432,"title":{},"body":{"injectables/TesteeService.html":{}}}],["errorhandler",{"_index":36,"title":{"classes/ErrorHandler.html":{}},"body":{"modules/AppModule.html":{},"classes/ErrorHandler.html":{},"coverage.html":{}}}],["eslint",{"_index":232,"title":{},"body":{"controllers/SystemController.html":{},"injectables/TestSessionService.html":{}}}],["even",{"_index":80,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{}}}],["event",{"_index":466,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["eventsgateway",{"_index":140,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["everytime",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["everywhere",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["example",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["exception",{"_index":149,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["exception.message",{"_index":166,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["exception.status",{"_index":159,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["execution",{"_index":1126,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["existing",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["expect",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{}}}],["express",{"_index":109,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["extended",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["extends",{"_index":135,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["extension",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["external",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["fast",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["fetch",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["fetching",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{}}}],["file's",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["filenames",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["filter((v",{"_index":351,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["filter(testee",{"_index":435,"title":{},"body":{"injectables/TesteeService.html":{}}}],["finish",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":315,"title":{},"body":{"injectables/TestSessionService.html":{},"changelog.html":{}}}],["fix",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["font",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["forbids",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["force",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["force_presentation_complete/force_response_complete",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["forced",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["formally",{"_index":326,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["format",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["forwards",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["four",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["frist",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["frontend",{"_index":653,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["frontend/issues/261",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":83,"title":{},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"interfaces/Testee.html":{},"classes/WebsocketGateway.html":{},"coverage.html":{}}}],["functionality",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":1002,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["future",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["g",{"_index":349,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["galore",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":1098,"title":{},"body":{"index.html":{}}}],["generic",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["geoegebra",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["german",{"_index":1120,"title":{},"body":{"index.html":{}}}],["germany",{"_index":1118,"title":{},"body":{"index.html":{}}}],["get('')@httpcode(200",{"_index":221,"title":{},"body":{"controllers/SystemController.html":{}}}],["get('/clients",{"_index":186,"title":{},"body":{"controllers/MonitorController.html":{}}}],["get('/monitors",{"_index":192,"title":{},"body":{"controllers/MonitorController.html":{}}}],["get('/test",{"_index":242,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["get('/testees",{"_index":375,"title":{},"body":{"controllers/TesteeController.html":{}}}],["getclienttokens",{"_index":270,"title":{},"body":{"injectables/TestSessionService.html":{},"classes/WebsocketGateway.html":{}}}],["getdisconnectionobservable",{"_index":451,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["getlasturlpart",{"_index":1085,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getlasturlpart(message.url",{"_index":498,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["getlasturlpart(url",{"_index":492,"title":{},"body":{"classes/WebsocketGateway.html":{},"miscellaneous/functions.html":{}}}],["getmonitors",{"_index":271,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["gets",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["gettestees",{"_index":396,"title":{},"body":{"injectables/TesteeService.html":{}}}],["gettestsessions",{"_index":240,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{}}}],["getting",{"_index":522,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["given",{"_index":128,"title":{},"body":{"controllers/CommandController.html":{}}}],["goal",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["goto",{"_index":67,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":308,"title":{},"body":{"injectables/TestSessionService.html":{},"changelog.html":{}}}],["groupmonitors",{"_index":348,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["groupname",{"_index":284,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["groups",{"_index":175,"title":{},"body":{"interfaces/Monitor.html":{}}}],["grouptestsessions",{"_index":357,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["guide",{"_index":1138,"title":{},"body":{"index.html":{}}}],["handle",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["handleconnection",{"_index":452,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["handleconnection(client",{"_index":475,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["handled",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["handledisconnect",{"_index":453,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["handledisconnect(client",{"_index":479,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["handler",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["handler.ts",{"_index":134,"title":{},"body":{"classes/ErrorHandler.html":{},"coverage.html":{}}}],["handler.ts:17",{"_index":144,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["handler.ts:19",{"_index":148,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["handler.ts:9",{"_index":139,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["handling",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["hence",{"_index":318,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["here",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["hint",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["hit",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":146,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["host.switchtohttp",{"_index":155,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["hosters",{"_index":1131,"title":{},"body":{"index.html":{}}}],["hot",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["hotfix",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["http",{"_index":399,"title":{},"body":{"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"index.html":{}}}],["httpcode",{"_index":223,"title":{},"body":{"controllers/SystemController.html":{}}}],["httpcode(200",{"_index":231,"title":{},"body":{"controllers/SystemController.html":{}}}],["httpexception",{"_index":105,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["httpexception('invalid",{"_index":121,"title":{},"body":{"controllers/CommandController.html":{}}}],["httpexception('no",{"_index":126,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TesteeController.html":{}}}],["httpexception('not",{"_index":203,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["httpmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/iqb",{"_index":942,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["httpservice",{"_index":400,"title":{},"body":{"injectables/TesteeService.html":{}}}],["httpstatus",{"_index":150,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.bad_request",{"_index":164,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.expectation_failed",{"_index":163,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.internal_server_error",{"_index":158,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.not_acceptable",{"_index":162,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.not_found",{"_index":160,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["httpstatus.service_unavailable",{"_index":161,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["icons",{"_index":1124,"title":{},"body":{"index.html":{}}}],["id",{"_index":57,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{}}}],["identifier",{"_index":1077,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":442,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["import",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["improved",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["improvement",{"_index":650,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["incomingmessage",{"_index":477,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["index",{"_index":54,"title":{"index.html":{}},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["information",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["init/install",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["initialization",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["injectable",{"_index":262,"title":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"coverage.html":{}}}],["injectables",{"_index":263,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"overview.html":{}}}],["insert",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":1142,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1132,"title":{},"body":{"index.html":{}}}],["installations",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["instead",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["institute",{"_index":1114,"title":{},"body":{"index.html":{}}}],["interface",{"_index":50,"title":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"interfaces/Testee.html":{}},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"interfaces/Testee.html":{},"changelog.html":{},"coverage.html":{}}}],["interfaces",{"_index":52,"title":{},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"interfaces/Testee.html":{},"classes/WebsocketGateway.html":{},"overview.html":{}}}],["introduced",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["iqb",{"_index":1106,"title":{},"body":{"index.html":{}}}],["iscommand",{"_index":110,"title":{},"body":{"controllers/CommandController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["iscommand(arg",{"_index":84,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/functions.html":{}}}],["iscommand(request.body.command",{"_index":119,"title":{},"body":{"controllers/CommandController.html":{}}}],["ismonitor",{"_index":197,"title":{},"body":{"controllers/MonitorController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ismonitor(arg",{"_index":177,"title":{},"body":{"interfaces/Monitor.html":{},"miscellaneous/functions.html":{}}}],["ismonitor(request.body",{"_index":202,"title":{},"body":{"controllers/MonitorController.html":{}}}],["issessionchange",{"_index":250,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["issessionchange(request.body",{"_index":257,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["issues",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["istestee",{"_index":381,"title":{},"body":{"controllers/TesteeController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istestee(arg",{"_index":365,"title":{},"body":{"interfaces/Testee.html":{},"miscellaneous/functions.html":{}}}],["istestee(request.body",{"_index":385,"title":{},"body":{"controllers/TesteeController.html":{}}}],["it's",{"_index":912,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["itcr.zip",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["items",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["itself",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["json.stringify",{"_index":508,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["json.stringify(request.body",{"_index":259,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["keep",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["keyword",{"_index":58,"title":{},"body":{"interfaces/Command.html":{}}}],["known",{"_index":322,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["label",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["labels",{"_index":1129,"title":{},"body":{"index.html":{}}}],["large",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["leaving",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["led",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["legal",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["len",{"_index":355,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["license",{"_index":1150,"title":{},"body":{"properties.html":{}}}],["line",{"_index":235,"title":{},"body":{"controllers/SystemController.html":{},"injectables/TestSessionService.html":{}}}],["list",{"_index":567,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["lite",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":294,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["live",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["loaded",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["locked",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["locking",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["logger",{"_index":106,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["logger(commandcontroller.name",{"_index":116,"title":{},"body":{"controllers/CommandController.html":{}}}],["logger(errorhandler.name",{"_index":143,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["logger(monitorcontroller.name",{"_index":200,"title":{},"body":{"controllers/MonitorController.html":{}}}],["logger(systemcontroller.name",{"_index":225,"title":{},"body":{"controllers/SystemController.html":{}}}],["logger(testeecontroller.name",{"_index":383,"title":{},"body":{"controllers/TesteeController.html":{}}}],["logger(testeeservice.name",{"_index":413,"title":{},"body":{"injectables/TesteeService.html":{}}}],["logger(testsessioncontroller.name",{"_index":255,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["logger(testsessionservice.name",{"_index":292,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["logger(websocketgateway.name",{"_index":461,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["login",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["logins",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["logs",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["lost",{"_index":427,"title":{},"body":{"injectables/TesteeService.html":{},"changelog.html":{}}}],["made",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["main",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":75,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{}}}],["makes",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["management",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["mandatory",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["manipulate",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":924,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["map",{"_index":489,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["map(testee",{"_index":437,"title":{},"body":{"injectables/TesteeService.html":{}}}],["massive",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":354,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["maximum",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["mergesessionchanges",{"_index":298,"title":{},"body":{"injectables/TestSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mergesessionchanges(testsession",{"_index":325,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["message",{"_index":165,"title":{},"body":{"classes/ErrorHandler.html":{},"classes/WebsocketGateway.html":{}}}],["messagebody",{"_index":484,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["messages",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["metadata",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":93,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["migrated",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["migration",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["minutes",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["misc",{"_index":1141,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1091,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1151,"title":{},"body":{"properties.html":{}}}],["mode",{"_index":82,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{}}}],["mode='monitor",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["modes",{"_index":1125,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"changelog.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["moment",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["monitor",{"_index":173,"title":{"interfaces/Monitor.html":{}},"body":{"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"injectables/TestSessionService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["monitor.groups.foreach((group",{"_index":335,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["monitor.interface",{"_index":198,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitor/group/{group_name}/tests/unlock",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["monitor/monitor.controller",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["monitor/monitor.interface",{"_index":297,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["monitorcontroller",{"_index":20,"title":{"controllers/MonitorController.html":{}},"body":{"modules/AppModule.html":{},"controllers/MonitorController.html":{},"coverage.html":{}}}],["monitored",{"_index":319,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["monitorregister",{"_index":182,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitorregister(@req",{"_index":201,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitorregister(request",{"_index":188,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitors",{"_index":183,"title":{},"body":{"controllers/MonitorController.html":{},"injectables/TestSessionService.html":{}}}],["monitors(@req",{"_index":212,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitors(request",{"_index":191,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitortoken",{"_index":291,"title":{},"body":{"injectables/TestSessionService.html":{},"classes/WebsocketGateway.html":{}}}],["monitorunregister",{"_index":184,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitorunregister(@req",{"_index":207,"title":{},"body":{"controllers/MonitorController.html":{}}}],["monitorunregister(request",{"_index":194,"title":{},"body":{"controllers/MonitorController.html":{}}}],["more",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["moves",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":102,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["names",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["navigation",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["navigationleaverestrictions",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["navigationrestrictions",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":323,"title":{},"body":{"injectables/TestSessionService.html":{},"changelog.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["nestjs/core",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"classes/ErrorHandler.html":{}}}],["nestjs/websockets",{"_index":487,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["new",{"_index":115,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{}}}],["newer",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":234,"title":{},"body":{"controllers/SystemController.html":{},"injectables/TestSessionService.html":{},"index.html":{}}}],["nonamespaceschemalocation",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["notify",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["notifydisconnection",{"_index":397,"title":{},"body":{"injectables/TesteeService.html":{}}}],["notifydisconnection(testeetoken",{"_index":408,"title":{},"body":{"injectables/TesteeService.html":{}}}],["now",{"_index":557,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["number",{"_index":63,"title":{},"body":{"interfaces/Command.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{}}}],["numbers",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["object.keys(this.clients",{"_index":517,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["object.keys(this.clients).foreach((token",{"_index":504,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["object.keys(this.monitors).foreach((group",{"_index":339,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["object.keys(this.monitors[group]).length",{"_index":342,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["object.keys(this.monitors[groupname",{"_index":331,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["object.values(this.monitors",{"_index":345,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["object.values(this.testees",{"_index":422,"title":{},"body":{"injectables/TesteeService.html":{}}}],["object.values(this.testsessions",{"_index":353,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["object.values(this.testsessions[groupname",{"_index":333,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["observable",{"_index":474,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["obtain",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["occurred",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["oder",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["ofunits",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["older",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["once",{"_index":79,"title":{},"body":{"interfaces/Command.html":{}}}],["one",{"_index":77,"title":{},"body":{"interfaces/Command.html":{}}}],["ones",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["ongatewayconnection",{"_index":443,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["ongatewaydisconnect",{"_index":444,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["optional",{"_index":59,"title":{},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["otherwise",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["out",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["output",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":764,"title":{"overview.html":{}},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["package",{"_index":570,"title":{"properties.html":{}},"body":{"changelog.html":{}}}],["packages",{"_index":551,"title":{},"body":{"changelog.html":{}}}],["parameter",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":101,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["paremater",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["part",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["patch",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["patching",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["pause",{"_index":66,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/variables.html":{}}}],["pay",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["payload",{"_index":507,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["performance",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["performed",{"_index":78,"title":{},"body":{"interfaces/Command.html":{}}}],["php",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["player",{"_index":577,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["players",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":656,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["polling",{"_index":81,"title":{},"body":{"interfaces/Command.html":{}}}],["possible",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["post",{"_index":107,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{},"changelog.html":{}}}],["post('/command",{"_index":98,"title":{},"body":{"controllers/CommandController.html":{}}}],["post('/monitor/register",{"_index":189,"title":{},"body":{"controllers/MonitorController.html":{}}}],["post('/monitor/unregister",{"_index":195,"title":{},"body":{"controllers/MonitorController.html":{}}}],["post('/push/session",{"_index":247,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["post('/system/clean",{"_index":219,"title":{},"body":{"controllers/SystemController.html":{}}}],["post('/testee/register",{"_index":372,"title":{},"body":{"controllers/TesteeController.html":{}}}],["post('/testee/unregister",{"_index":378,"title":{},"body":{"controllers/TesteeController.html":{}}}],["postcommand",{"_index":94,"title":{},"body":{"controllers/CommandController.html":{}}}],["postcommand(@req",{"_index":117,"title":{},"body":{"controllers/CommandController.html":{}}}],["postcommand(request",{"_index":95,"title":{},"body":{"controllers/CommandController.html":{}}}],["preloaded",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["presentation",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":113,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["proceed",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["program",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["progress",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":55,"title":{"properties.html":{}},"body":{"interfaces/Command.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"properties.html":{}}}],["provide",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":17,"title":{},"body":{"modules/AppModule.html":{}}}],["provides",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["pushsessionchange",{"_index":241,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["pushsessionchange(@req",{"_index":256,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["pushsessionchange(request",{"_index":246,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["put",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":1116,"title":{},"body":{"index.html":{}}}],["radically",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["readable",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["reading",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":114,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["ready",{"_index":1103,"title":{},"body":{"index.html":{}}}],["reduce",{"_index":346,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["refactoring",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["refactors",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":1104,"title":{},"body":{"index.html":{}}}],["reference",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["regarded",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["regardless",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["registered:${json.stringify(request.body",{"_index":205,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/TesteeController.html":{}}}],["reload",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["remaining",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["remains",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["removed",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["removemonitor",{"_index":272,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["removemonitor(monitortoken",{"_index":289,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["removetestee",{"_index":398,"title":{},"body":{"injectables/TesteeService.html":{}}}],["removetestee(testeetoken",{"_index":411,"title":{},"body":{"injectables/TesteeService.html":{}}}],["renamed",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["repaired",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["reports",{"_index":854,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["repository",{"_index":1099,"title":{},"body":{"index.html":{},"properties.html":{}}}],["req",{"_index":108,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["request",{"_index":96,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["request.body",{"_index":130,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TesteeController.html":{}}}],["request.body.command",{"_index":118,"title":{},"body":{"controllers/CommandController.html":{}}}],["request.body.testids",{"_index":124,"title":{},"body":{"controllers/CommandController.html":{}}}],["required",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["requirements",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["resemble",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resource",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["resources",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["responded",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["response",{"_index":151,"title":{},"body":{"classes/ErrorHandler.html":{},"changelog.html":{}}}],["responses",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["rest",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["restart",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["restored",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["restriction",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["result/log",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["results",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":69,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["retrieved",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["retrieving",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["return",{"_index":86,"title":{},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["returns",{"_index":103,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"miscellaneous/functions.html":{}}}],["reviews",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["rid",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":1101,"title":{},"body":{"index.html":{}}}],["roboto",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["role",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":218,"title":{},"body":{"controllers/SystemController.html":{}}}],["run",{"_index":628,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["running",{"_index":1123,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":488,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["rxjs/operators",{"_index":490,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["safari",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["same",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["sample",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["sample_resource_package.itcr.zip",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["schema/patches.mysql.d/11.0.0",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["schema/patches.mysql.d/11.1.0",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["schema/patches.mysql.d/12.0.0",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["schema/patches.mysql.sql",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["schemas",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["screen",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["scripts/sql",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["second",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":431,"title":{},"body":{"injectables/TesteeService.html":{}}}],["send(message",{"_index":170,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["sense",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":447,"title":{},"body":{"classes/WebsocketGateway.html":{},"index.html":{}}}],["server's",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":640,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["service/.../command.interface.ts",{"_index":1094,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/.../interfaces.ts",{"_index":1154,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["service/.../main.ts",{"_index":1092,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/.../monitor.interface.ts",{"_index":1095,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/.../test",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service/.../testee.interface.ts",{"_index":1096,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/.../websocket.gateway.ts",{"_index":1093,"title":{},"body":{"miscellaneous/functions.html":{}}}],["service/src/app.module.ts",{"_index":16,"title":{},"body":{"modules/AppModule.html":{}}}],["service/src/command/command.controller.ts",{"_index":92,"title":{},"body":{"controllers/CommandController.html":{},"coverage.html":{}}}],["service/src/command/command.controller.ts:17",{"_index":100,"title":{},"body":{"controllers/CommandController.html":{}}}],["service/src/command/command.interface.ts",{"_index":53,"title":{},"body":{"interfaces/Command.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["service/src/common/error",{"_index":133,"title":{},"body":{"classes/ErrorHandler.html":{},"coverage.html":{}}}],["service/src/common/interfaces.ts",{"_index":1155,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["service/src/common/websocket.gateway.ts",{"_index":441,"title":{},"body":{"classes/WebsocketGateway.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["service/src/common/websocket.gateway.ts:22",{"_index":462,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:25",{"_index":464,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:27",{"_index":458,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:28",{"_index":460,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:29",{"_index":457,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:31",{"_index":478,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:39",{"_index":480,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:55",{"_index":468,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:66",{"_index":471,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:74",{"_index":469,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:80",{"_index":473,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:84",{"_index":472,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/common/websocket.gateway.ts:89",{"_index":483,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["service/src/main.ts",{"_index":1086,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["service/src/monitor/monitor.controller.ts",{"_index":180,"title":{},"body":{"controllers/MonitorController.html":{},"coverage.html":{}}}],["service/src/monitor/monitor.controller.ts:17",{"_index":190,"title":{},"body":{"controllers/MonitorController.html":{}}}],["service/src/monitor/monitor.controller.ts:27",{"_index":196,"title":{},"body":{"controllers/MonitorController.html":{}}}],["service/src/monitor/monitor.controller.ts:37",{"_index":193,"title":{},"body":{"controllers/MonitorController.html":{}}}],["service/src/monitor/monitor.controller.ts:42",{"_index":187,"title":{},"body":{"controllers/MonitorController.html":{}}}],["service/src/monitor/monitor.interface.ts",{"_index":174,"title":{},"body":{"interfaces/Monitor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["service/src/system/system.controller.ts",{"_index":216,"title":{},"body":{"controllers/SystemController.html":{},"coverage.html":{}}}],["service/src/system/system.controller.ts:19",{"_index":220,"title":{},"body":{"controllers/SystemController.html":{}}}],["service/src/system/system.controller.ts:29",{"_index":222,"title":{},"body":{"controllers/SystemController.html":{}}}],["service/src/test",{"_index":238,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["service/src/testee/testee.controller.ts",{"_index":367,"title":{},"body":{"controllers/TesteeController.html":{},"coverage.html":{}}}],["service/src/testee/testee.controller.ts:18",{"_index":373,"title":{},"body":{"controllers/TesteeController.html":{}}}],["service/src/testee/testee.controller.ts:28",{"_index":379,"title":{},"body":{"controllers/TesteeController.html":{}}}],["service/src/testee/testee.controller.ts:38",{"_index":376,"title":{},"body":{"controllers/TesteeController.html":{}}}],["service/src/testee/testee.interface.ts",{"_index":363,"title":{},"body":{"interfaces/Testee.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["service/src/testee/testee.service.ts",{"_index":393,"title":{},"body":{"injectables/TesteeService.html":{},"coverage.html":{}}}],["service/src/testee/testee.service.ts:18",{"_index":414,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:20",{"_index":415,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:22",{"_index":403,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:26",{"_index":412,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:36",{"_index":407,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:40",{"_index":409,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:57",{"_index":405,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:69",{"_index":406,"title":{},"body":{"injectables/TesteeService.html":{}}}],["service/src/testee/testee.service.ts:7",{"_index":401,"title":{},"body":{"injectables/TesteeService.html":{}}}],["session",{"_index":253,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{}}}],["session.controller",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["session.controller.ts",{"_index":239,"title":{},"body":{"controllers/TestSessionController.html":{},"coverage.html":{}}}],["session.controller.ts:17",{"_index":249,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["session.controller.ts:27",{"_index":244,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["session.service",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{}}}],["session.service.ts",{"_index":264,"title":{},"body":{"injectables/TestSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["session.service.ts:105",{"_index":287,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:114",{"_index":288,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:122",{"_index":286,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:126",{"_index":285,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:18",{"_index":274,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:27",{"_index":293,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:29",{"_index":296,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:35",{"_index":295,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:41",{"_index":281,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:46",{"_index":278,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:66",{"_index":283,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:77",{"_index":276,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session.service.ts:89",{"_index":290,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["session/test",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sessionchange",{"_index":279,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["sessionchange.groupname",{"_index":312,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["sessionchange.testid",{"_index":314,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["sessionchange.teststate",{"_index":304,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["sessionchange.unitname",{"_index":300,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["sessionchange.unitstate",{"_index":303,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["sessionid",{"_index":309,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["sessions",{"_index":243,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["set",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["setup",{"_index":1105,"title":{},"body":{"index.html":{}}}],["shall",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["shooting",{"_index":1134,"title":{},"body":{"index.html":{}}}],["showtimeleft",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["signal",{"_index":428,"title":{},"body":{"injectables/TesteeService.html":{}}}],["significantly",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["special",{"_index":558,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["specific",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["speed",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["started",{"_index":523,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["starter",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["state",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["statements",{"_index":1078,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1122,"title":{},"body":{"index.html":{}}}],["status",{"_index":157,"title":{},"body":{"classes/ErrorHandler.html":{},"changelog.html":{}}}],["status(status",{"_index":168,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["still",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["store",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["stored",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["streamed",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":61,"title":{},"body":{"interfaces/Command.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"miscellaneous/functions.html":{}}}],["structure",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["study",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["subscribeclientcount",{"_index":454,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["subscribeclientcount(@messagebody",{"_index":518,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["subscribeclientcount(data",{"_index":481,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["subscribemessage",{"_index":485,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["subscribemessage('subscribe:client.count",{"_index":482,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["such",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":153,"title":{},"body":{"classes/ErrorHandler.html":{},"index.html":{}}}],["support",{"_index":1144,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["supporting",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["sure",{"_index":76,"title":{},"body":{"interfaces/Command.html":{}}}],["surveys",{"_index":1112,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1145,"title":{},"body":{"modules.html":{}}}],["sys",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["syscheck",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":227,"title":{},"body":{"controllers/SystemController.html":{},"index.html":{}}}],["system/config",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["system/config/app",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["system/config/custom",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["system/system.controller",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["system/time",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["systemcontroller",{"_index":23,"title":{"controllers/SystemController.html":{}},"body":{"modules/AppModule.html":{},"controllers/SystemController.html":{},"coverage.html":{}}}],["table",{"_index":834,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1090,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":1109,"title":{},"body":{"index.html":{}}}],["teh",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["tells",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["terminate",{"_index":68,"title":{},"body":{"interfaces/Command.html":{},"miscellaneous/variables.html":{}}}],["terminated",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["tescenter",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["test/{test_id}/connection",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["test\\{test_id}\\log",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["test\\{test_id}\\state",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["test\\{test_id}\\unit\\{unit_name}\\logwere",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["test\\{test_id}\\unit\\{unit_name}\\state",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["test_data",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["testcenter",{"_index":251,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"changelog.html":{},"index.html":{}}}],["testcontroller",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["tested",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["testee",{"_index":362,"title":{"interfaces/Testee.html":{}},"body":{"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["testee.interface",{"_index":382,"title":{},"body":{"controllers/TesteeController.html":{},"injectables/TesteeService.html":{}}}],["testee.service",{"_index":380,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testee.testid",{"_index":436,"title":{},"body":{"injectables/TesteeService.html":{}}}],["testee.token",{"_index":438,"title":{},"body":{"injectables/TesteeService.html":{}}}],["testee/testee.controller",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["testee/testee.service",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"controllers/SystemController.html":{}}}],["testeecontroller",{"_index":22,"title":{"controllers/TesteeController.html":{}},"body":{"modules/AppModule.html":{},"controllers/TesteeController.html":{},"coverage.html":{}}}],["testeeregister",{"_index":368,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testeeregister(@req",{"_index":384,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testeeregister(request",{"_index":371,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testees",{"_index":369,"title":{},"body":{"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"changelog.html":{}}}],["testees(@req",{"_index":391,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testees(request",{"_index":374,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testeeservice",{"_index":8,"title":{"injectables/TesteeService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"controllers/SystemController.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"coverage.html":{},"overview.html":{}}}],["testeetoken",{"_index":410,"title":{},"body":{"injectables/TesteeService.html":{}}}],["testeeunregister",{"_index":370,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testeeunregister(@req",{"_index":388,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testeeunregister(request",{"_index":377,"title":{},"body":{"controllers/TesteeController.html":{}}}],["testid",{"_index":313,"title":{},"body":{"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"injectables/TesteeService.html":{}}}],["testids",{"_index":127,"title":{},"body":{"controllers/CommandController.html":{},"injectables/TesteeService.html":{}}}],["testids.foreach((testid",{"_index":433,"title":{},"body":{"injectables/TesteeService.html":{}}}],["testlet",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["testlets",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["tests",{"_index":534,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["testsession",{"_index":299,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["testsession.teststate",{"_index":305,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["testsession.unitname",{"_index":301,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["testsession.unitstate",{"_index":302,"title":{},"body":{"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["testsessionchange",{"_index":245,"title":{},"body":{"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"miscellaneous/variables.html":{}}}],["testsessioncontroller",{"_index":19,"title":{"controllers/TestSessionController.html":{}},"body":{"modules/AppModule.html":{},"controllers/TestSessionController.html":{},"coverage.html":{}}}],["testsessions",{"_index":265,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["testsessionservice",{"_index":6,"title":{"injectables/TestSessionService.html":{}},"body":{"modules/AppModule.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"coverage.html":{},"overview.html":{}}}],["teststudio",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["testtakers",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["testtakers.xml",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["testtakers.xmls",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["tets",{"_index":1140,"title":{},"body":{"index.html":{}}}],["texts",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["this.addsessionchange(sessionchange",{"_index":310,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.broadcasttestsessionstogroupmonitors(sessionchange.groupname",{"_index":311,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.clientlost$.asobservable",{"_index":516,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clientlost$.next(disconnectedtoken",{"_index":505,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clients[monitortoken",{"_index":512,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clients[monitortoken].close",{"_index":514,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clients[token",{"_index":499,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clients[token].send(payload",{"_index":511,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clientscount$.next(object.values(this.clients).length",{"_index":500,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.clientscount$.pipe(map((count",{"_index":519,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.dataservice.addmonitor(request.body",{"_index":206,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.dataservice.applysessionchange(request.body",{"_index":260,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["this.dataservice.clean",{"_index":229,"title":{},"body":{"controllers/SystemController.html":{}}}],["this.dataservice.getclienttokens",{"_index":215,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.dataservice.getmonitors",{"_index":213,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.dataservice.gettestsessions",{"_index":261,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["this.dataservice.removemonitor(request.body.token",{"_index":211,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.disconnectclient(token",{"_index":515,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.eventsgateway.disconnectall",{"_index":172,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["this.http.post(this.testees[testeetoken].disconnectnotificationuri).subscribe",{"_index":424,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.logger.error(`(${status",{"_index":167,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["this.logger.log(\"broadcasting",{"_index":329,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.logger.log(\"skipping",{"_index":317,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.logger.log('/command",{"_index":129,"title":{},"body":{"controllers/CommandController.html":{}}}],["this.logger.log('/push/session",{"_index":258,"title":{},"body":{"controllers/TestSessionController.html":{}}}],["this.logger.log('monitor",{"_index":209,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.logger.log('ping",{"_index":237,"title":{},"body":{"controllers/SystemController.html":{}}}],["this.logger.log('testee",{"_index":389,"title":{},"body":{"controllers/TesteeController.html":{}}}],["this.logger.log(`client",{"_index":501,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.logger.log(`disconnect",{"_index":513,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.logger.log(`monitor",{"_index":204,"title":{},"body":{"controllers/MonitorController.html":{}}}],["this.logger.log(`remove",{"_index":338,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}}}],["this.logger.log(`sending",{"_index":510,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["this.logger.log(`sent",{"_index":425,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.logger.log(`testee",{"_index":386,"title":{},"body":{"controllers/TesteeController.html":{}}}],["this.logger.warn('clean",{"_index":226,"title":{},"body":{"controllers/SystemController.html":{}}}],["this.logger.warn(`could",{"_index":430,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.monitors",{"_index":360,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.monitors[group",{"_index":336,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.monitors[group][monitor.token",{"_index":337,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.monitors[group][monitortoken",{"_index":340,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.monitors[groupname",{"_index":328,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.notifydisconnection(disconnected",{"_index":417,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.removemonitor(disconnected",{"_index":307,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.removetestee(disconnected",{"_index":418,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.testees",{"_index":440,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.testees[testee.token",{"_index":419,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.testees[testeetoken",{"_index":420,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.testees[testeetoken].disconnectnotificationuri",{"_index":423,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.testeeservice.addtestee(request.body",{"_index":387,"title":{},"body":{"controllers/TesteeController.html":{}}}],["this.testeeservice.broadcastcommandtotestees(request.body.command",{"_index":131,"title":{},"body":{"controllers/CommandController.html":{}}}],["this.testeeservice.clean",{"_index":230,"title":{},"body":{"controllers/SystemController.html":{}}}],["this.testeeservice.gettestees",{"_index":392,"title":{},"body":{"controllers/TesteeController.html":{}}}],["this.testeeservice.removetestee(request.body.token",{"_index":390,"title":{},"body":{"controllers/TesteeController.html":{}}}],["this.testsessions",{"_index":361,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.testsessions[group",{"_index":316,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.testsessions[group][testid",{"_index":320,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.testsessions[groupname",{"_index":332,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.websocketgateway.broadcasttoregistered",{"_index":434,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.websocketgateway.broadcasttoregistered(tokens",{"_index":334,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.websocketgateway.disconnectclient(monitortoken",{"_index":344,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.websocketgateway.disconnectclient(testeetoken",{"_index":421,"title":{},"body":{"injectables/TesteeService.html":{}}}],["this.websocketgateway.getclienttokens",{"_index":359,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["this.websocketgateway.getdisconnectionobservable().subscribe((disconnected",{"_index":306,"title":{},"body":{"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{}}}],["this.wsgateway.disconnectall",{"_index":228,"title":{},"body":{"controllers/SystemController.html":{}}}],["those",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":120,"title":{},"body":{"controllers/CommandController.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"controllers/TesteeController.html":{}}}],["time",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["timed",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["timeout",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["timestamp",{"_index":60,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{}}}],["token",{"_index":176,"title":{},"body":{"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["tokens",{"_index":330,"title":{},"body":{"injectables/TestSessionService.html":{},"classes/WebsocketGateway.html":{}}}],["tokens.foreach((token",{"_index":509,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["treatment",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["triggered",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["trouble",{"_index":1133,"title":{},"body":{"index.html":{}}}],["true",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":62,"title":{},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"interfaces/Monitor.html":{},"controllers/MonitorController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1152,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":71,"title":{},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["ui",{"_index":1130,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":88,"title":{},"body":{"interfaces/Command.html":{},"controllers/CommandController.html":{},"interfaces/Monitor.html":{},"injectables/TestSessionService.html":{},"interfaces/Testee.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["under",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["unique",{"_index":73,"title":{},"body":{"interfaces/Command.html":{},"changelog.html":{}}}],["unit",{"_index":675,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["unit.xml",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["units",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":327,"title":{},"body":{"injectables/TestSessionService.html":{}}}],["unlocked",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["unregistered",{"_index":210,"title":{},"body":{"controllers/MonitorController.html":{},"controllers/TesteeController.html":{}}}],["until",{"_index":1102,"title":{},"body":{"index.html":{}}}],["up",{"_index":532,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":540,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["updated",{"_index":324,"title":{},"body":{"injectables/TestSessionService.html":{},"changelog.html":{}}}],["updates",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["uploaded",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":1097,"title":{},"body":{"miscellaneous/functions.html":{}}}],["url.split('/').filter(e",{"_index":494,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["urls",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":236,"title":{},"body":{"controllers/SystemController.html":{},"changelog.html":{}}}],["useclass",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["user's",{"_index":1119,"title":{},"body":{"index.html":{}}}],["users",{"_index":710,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["validated",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["validates",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["validation",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["validator",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["validity",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":142,"title":{},"body":{"classes/ErrorHandler.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["variable",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1156,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["verona",{"_index":1026,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["verona2",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["verona3",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["verona4",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":726,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versioned",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["very",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["visible",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["visited",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":104,"title":{},"body":{"controllers/CommandController.html":{},"classes/ErrorHandler.html":{},"controllers/MonitorController.html":{},"controllers/SystemController.html":{},"controllers/TestSessionController.html":{},"injectables/TestSessionService.html":{},"controllers/TesteeController.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{}}}],["want",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["way",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["web",{"_index":1107,"title":{},"body":{"index.html":{}}}],["websocket.gateway",{"_index":152,"title":{},"body":{"classes/ErrorHandler.html":{}}}],["websocketgateway",{"_index":33,"title":{"classes/WebsocketGateway.html":{}},"body":{"modules/AppModule.html":{},"classes/ErrorHandler.html":{},"controllers/SystemController.html":{},"injectables/TestSessionService.html":{},"injectables/TesteeService.html":{},"classes/WebsocketGateway.html":{},"coverage.html":{}}}],["websocketserver",{"_index":463,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["well",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["wether",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["whites",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":977,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["won't",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["workspace",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["workspace/{id}/file",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["workspace/{id}/files",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["workspace/{id}/validation",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/logs",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/report/log",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/report/response",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/report/review",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/report/sys",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/responses",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/reviews",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["workspace/{ws_id}/sys",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["workspacemonitor",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["workspaces",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["wrong",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["ws",{"_index":491,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["ws_id}/booklets/started",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["ws_id}/status",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["ws_id}/tests/lock",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["ws_id}/tests/unlock",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["wsgateway",{"_index":224,"title":{},"body":{"controllers/SystemController.html":{}}}],["wsresponse",{"_index":486,"title":{},"body":{"classes/WebsocketGateway.html":{}}}],["xml",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["xsd",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["zip",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["zone",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nTestSessionService\n\nTestSessionService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTestSessionService->AppModule\n\n\n\n\n\nTesteeService\n\nTesteeService\n\nAppModule -->\n\nTesteeService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            broadcasting-service/src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TestSessionService\n                        \n                        \n                            TesteeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TestSessionController\n                        \n                        \n                            MonitorController\n                        \n                        \n                            CommandController\n                        \n                        \n                            TesteeController\n                        \n                        \n                            SystemController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule, Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { TestSessionController } from './test-session/test-session.controller';\nimport { MonitorController } from './monitor/monitor.controller';\nimport { WebsocketGateway } from './common/websocket.gateway';\nimport { TestSessionService } from './test-session/test-session.service';\nimport { ErrorHandler } from './common/error-handler';\nimport { CommandController } from './command/command.controller';\nimport { TesteeController } from './testee/testee.controller';\nimport { TesteeService } from './testee/testee.service';\nimport { SystemController } from './system/system.controller';\n\n@Module({\n  controllers: [\n    TestSessionController,\n    MonitorController,\n    CommandController,\n    TesteeController,\n    SystemController\n  ],\n  providers: [\n    WebsocketGateway,\n    TestSessionService,\n    TesteeService,\n    {\n      provide: APP_FILTER,\n      useClass: ErrorHandler\n    }\n  ],\n  imports: [\n    HttpModule\n  ]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Command.html":{"url":"interfaces/Command.html","title":"interface - Command","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Command\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/command/command.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            arguments\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            keyword\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arguments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arguments:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keyword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keyword:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const commandKeywords = [\n  'pause',\n  'goto',\n  'terminate',\n  'resume',\n  'debug'\n];\n\nexport interface Command {\n  keyword: (typeof commandKeywords)[number];\n  id: string; // a unique id for each command, to make sure each one get only performed once (even in polling mode)\n  arguments: string[];\n  timestamp?: number;\n}\n\nexport function isCommand(arg: any): arg is Command {\n  return (arg.keyword !== undefined) && (arg.id !== undefined) && (arg.arguments !== undefined);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CommandController.html":{"url":"controllers/CommandController.html","title":"controller - CommandController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CommandController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/command/command.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postCommand\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        postCommand\n                        \n                    \n                \n            \n            \n                \npostCommand(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/command')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/command/command.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, HttpException, Logger, Post, Req\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { isCommand } from './command.interface';\nimport { TesteeService } from '../testee/testee.service';\n\n@Controller()\nexport class CommandController {\n  constructor(\n    private readonly testeeService: TesteeService\n  ) {}\n\n  private readonly logger = new Logger(CommandController.name);\n\n  @Post('/command')\n  postCommand(@Req() request: Request): void {\n    if ((typeof request.body.command === 'undefined') || !isCommand(request.body.command)) {\n      throw new HttpException('invalid command data', 400);\n    }\n\n    if ((typeof request.body.testIds === 'undefined') || !Array.isArray(request.body.testIds)) {\n      throw new HttpException('no testIds given', 400);\n    }\n\n    this.logger.log('/command', request.body);\n\n    this.testeeService.broadcastCommandToTestees(request.body.command, request.body.testIds);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorHandler.html":{"url":"classes/ErrorHandler.html","title":"class - ErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/common/error-handler.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventsGateway: WebsocketGateway)\n                    \n                \n                        \n                            \n                                Defined in broadcasting-service/src/common/error-handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventsGateway\n                                                  \n                                                        \n                                                                        WebsocketGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ErrorHandler.name)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/error-handler.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/error-handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Catch, ArgumentsHost, HttpStatus, Logger\n} from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\nimport { Response } from 'express';\nimport { WebsocketGateway } from './websocket.gateway';\n\n@Catch()\nexport class ErrorHandler extends BaseExceptionFilter {\n\n  constructor(\n    private readonly eventsGateway: WebsocketGateway\n  ) {\n    super();\n  }\n\n  private readonly logger = new Logger(ErrorHandler.name);\n\n  catch(exception: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response: Response = ctx.getResponse();\n\n    let status = HttpStatus.INTERNAL_SERVER_ERROR;\n\n    if (exception.status === HttpStatus.NOT_FOUND) {\n      status = HttpStatus.NOT_FOUND;\n    }\n\n    if (exception.status === HttpStatus.SERVICE_UNAVAILABLE) {\n      status = HttpStatus.SERVICE_UNAVAILABLE;\n    }\n\n    if (exception.status === HttpStatus.NOT_ACCEPTABLE) {\n      status = HttpStatus.NOT_ACCEPTABLE;\n    }\n\n    if (exception.status === HttpStatus.EXPECTATION_FAILED) {\n      status = HttpStatus.EXPECTATION_FAILED;\n    }\n\n    if (exception.status === HttpStatus.BAD_REQUEST) {\n      status = HttpStatus.BAD_REQUEST;\n    }\n\n    const message = exception.message;\n\n    this.logger.error(`(${status}) ${message}`);\n\n    response\n      .status(status)\n      .contentType('text')\n      .send(message);\n\n    if (status >= 500) {\n      this.eventsGateway.disconnectAll();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Monitor.html":{"url":"interfaces/Monitor.html","title":"interface - Monitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Monitor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/monitor/monitor.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            groups\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groups:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Monitor {\n  token: string;\n  groups: string[]\n}\n\nexport function isMonitor(arg: any): arg is Monitor {\n  return (arg.token !== undefined) && (arg.groups !== undefined);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MonitorController.html":{"url":"controllers/MonitorController.html","title":"controller - MonitorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MonitorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/monitor/monitor.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clients\n                            \n                            \n                                monitorRegister\n                            \n                            \n                                monitors\n                            \n                            \n                                monitorUnregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clients\n                        \n                    \n                \n            \n            \n                \nclients(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/clients')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/monitor/monitor.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        monitorRegister\n                        \n                    \n                \n            \n            \n                \nmonitorRegister(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/monitor/register')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/monitor/monitor.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        monitors\n                        \n                    \n                \n            \n            \n                \nmonitors(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/monitors')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/monitor/monitor.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Monitor[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        monitorUnregister\n                        \n                    \n                \n            \n            \n                \nmonitorUnregister(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/monitor/unregister')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/monitor/monitor.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Get, HttpException, Logger, Post, Req\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { isMonitor, Monitor } from './monitor.interface';\nimport { TestSessionService } from '../test-session/test-session.service';\n\n@Controller()\nexport class MonitorController {\n  constructor(\n    private readonly dataService: TestSessionService\n  ) {}\n\n  private readonly logger = new Logger(MonitorController.name);\n\n  @Post('/monitor/register')\n  monitorRegister(@Req() request: Request): void {\n    if (!isMonitor(request.body)) {\n      throw new HttpException('not monitor data', 400);\n    }\n\n    this.logger.log(`monitor registered:${JSON.stringify(request.body)}`);\n    this.dataService.addMonitor(request.body);\n  }\n\n  @Post('/monitor/unregister')\n  monitorUnregister(@Req() request: Request): void {\n    if (!('token' in request.body)) {\n      throw new HttpException('no token in body', 400);\n    }\n\n    this.logger.log('monitor unregistered:', request.body);\n    this.dataService.removeMonitor(request.body.token);\n  }\n\n  @Get('/monitors')\n  monitors(@Req() request: Request): Monitor[] {\n    return this.dataService.getMonitors();\n  }\n\n  @Get('/clients')\n  clients(@Req() request: Request): string[] {\n    return this.dataService.getClientTokens();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SystemController.html":{"url":"controllers/SystemController.html","title":"controller - SystemController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SystemController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/system/system.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clean\n                            \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clean\n                        \n                    \n                \n            \n            \n                \nclean()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/system/clean')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/system/system.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        root\n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/system/system.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Post, Logger, Get, HttpCode\n} from '@nestjs/common';\nimport { TestSessionService } from '../test-session/test-session.service';\nimport { TesteeService } from '../testee/testee.service';\nimport { WebsocketGateway } from '../common/websocket.gateway';\n\n@Controller()\nexport class SystemController {\n  constructor(\n    private readonly dataService: TestSessionService,\n    private readonly testeeService: TesteeService,\n    private readonly wsGateway: WebsocketGateway\n  ) {}\n\n  private readonly logger = new Logger(SystemController.name);\n\n  @Post('/system/clean')\n  clean(): void {\n    this.logger.warn('clean system');\n    this.wsGateway.disconnectAll();\n    this.dataService.clean();\n    this.testeeService.clean();\n  }\n\n  @Get('')\n  @HttpCode(200)\n  // eslint-disable-next-line class-methods-use-this\n  root(): void {\n    this.logger.log('ping');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TestSessionController.html":{"url":"controllers/TestSessionController.html","title":"controller - TestSessionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TestSessionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/test-session/test-session.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTestSessions\n                            \n                            \n                                pushSessionChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTestSessions\n                        \n                    \n                \n            \n            \n                \ngetTestSessions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/test-sessions')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TestSessionChange[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pushSessionChange\n                        \n                    \n                \n            \n            \n                \npushSessionChange(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/push/session-change')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Get, HttpException, Logger, Post, Req\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { isSessionChange, TestSessionChange } from 'testcenter-common/interfaces/test-session-change.interface';\nimport { TestSessionService } from './test-session.service';\n\n@Controller()\nexport class TestSessionController {\n  constructor(\n    private readonly dataService: TestSessionService\n  ) {}\n\n  private readonly logger = new Logger(TestSessionController.name);\n\n  @Post('/push/session-change')\n  pushSessionChange(@Req() request: Request): void {\n    if (!isSessionChange(request.body)) {\n      throw new HttpException('not session data', 400);\n    }\n\n    this.logger.log('/push/session-change', JSON.stringify(request.body));\n    this.dataService.applySessionChange(request.body);\n  }\n\n  @Get('/test-sessions')\n  getTestSessions(): TestSessionChange[] {\n    return this.dataService.getTestSessions();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestSessionService.html":{"url":"injectables/TestSessionService.html","title":"injectable - TestSessionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestSessionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/test-session/test-session.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                monitors\n                            \n                            \n                                    Private\n                                testSessions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMonitor\n                            \n                            \n                                    Private\n                                addSessionChange\n                            \n                            \n                                applySessionChange\n                            \n                            \n                                    Private\n                                broadcastTestSessionsToGroupMonitors\n                            \n                            \n                                clean\n                            \n                            \n                                getClientTokens\n                            \n                            \n                                getMonitors\n                            \n                            \n                                getTestSessions\n                            \n                            \n                                removeMonitor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(websocketGateway: WebsocketGateway)\n                    \n                \n                        \n                            \n                                Defined in broadcasting-service/src/test-session/test-session.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        websocketGateway\n                                                  \n                                                        \n                                                                        WebsocketGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMonitor\n                        \n                    \n                \n            \n            \n                \naddMonitor(monitor: Monitor)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                                Monitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addSessionChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSessionChange(sessionChange: TestSessionChange)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sessionChange\n                                    \n                                            TestSessionChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applySessionChange\n                        \n                    \n                \n            \n            \n                \napplySessionChange(sessionChange: TestSessionChange)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sessionChange\n                                    \n                                            TestSessionChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        broadcastTestSessionsToGroupMonitors\n                        \n                    \n                \n            \n            \n                \n                    \n                    broadcastTestSessionsToGroupMonitors(groupName: string)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clean\n                        \n                    \n                \n            \n            \n                \nclean()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getClientTokens\n                        \n                    \n                \n            \n            \n                \ngetClientTokens()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMonitors\n                        \n                    \n                \n            \n            \n                \ngetMonitors()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Monitor[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTestSessions\n                        \n                    \n                \n            \n            \n                \ngetTestSessions()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TestSessionChange[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMonitor\n                        \n                    \n                \n            \n            \n                \nremoveMonitor(monitorToken: string)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/test-session/test-session.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitorToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TestSessionService.name)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/test-session/test-session.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        monitors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/test-session/test-session.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testSessions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/test-session/test-session.service.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { TestSessionChange } from 'testcenter-common/interfaces/test-session-change.interface';\nimport { Monitor } from '../monitor/monitor.interface';\nimport { WebsocketGateway } from '../common/websocket.gateway';\n\nconst mergeSessionChanges = (testSession: TestSessionChange, sessionChange: TestSessionChange): TestSessionChange => {\n  if ((sessionChange.unitName) && (sessionChange.unitName !== testSession.unitName)) {\n    testSession.unitState = {};\n  }\n\n  sessionChange.unitState = { ...testSession.unitState, ...sessionChange.unitState };\n  sessionChange.testState = { ...testSession.testState, ...sessionChange.testState };\n\n  return { ...testSession, ...sessionChange };\n};\n\n@Injectable()\nexport class TestSessionService {\n  constructor(\n    private readonly websocketGateway: WebsocketGateway\n  ) {\n    this.websocketGateway.getDisconnectionObservable().subscribe((disconnected: string) => {\n      this.removeMonitor(disconnected);\n    });\n  }\n\n  private readonly logger = new Logger(TestSessionService.name);\n\n  private testSessions: {\n    [group: string]: {\n      [sessionId: string]: TestSessionChange\n    }\n  } = {};\n\n  private monitors: {\n    [group: string]: {\n      [token: string]: Monitor\n    }\n  } = {};\n\n  applySessionChange(sessionChange: TestSessionChange): void {\n    this.addSessionChange(sessionChange);\n    this.broadcastTestSessionsToGroupMonitors(sessionChange.groupName);\n  }\n\n  private addSessionChange(sessionChange: TestSessionChange): void {\n    const group: string = sessionChange.groupName;\n    const testId = sessionChange.testId;\n\n    // testSession is first of group\n    if (typeof this.testSessions[group] === 'undefined') {\n      // this.logger.log(\"skipping group hence not monitored: \" + group);\n      return;\n    }\n\n    if (typeof this.testSessions[group][testId] !== 'undefined') {\n      // testSession is already known and needs to be updated\n      const testSession = this.testSessions[group][testId];\n      this.testSessions[group][testId] = mergeSessionChanges(testSession, sessionChange);\n    } else {\n      // formally unknown testSession\n      this.testSessions[group][testId] = sessionChange;\n    }\n  }\n\n  private broadcastTestSessionsToGroupMonitors(groupName: string) {\n    if (typeof this.monitors[groupName] !== 'undefined') {\n      // this.logger.log(\"broadcasting data about group: \" + groupName);\n      const tokens = Object.keys(this.monitors[groupName]);\n      const sessions = (typeof this.testSessions[groupName] !== 'undefined') ?\n        Object.values(this.testSessions[groupName]) :\n        [];\n      this.websocketGateway.broadcastToRegistered(tokens, 'test-sessions', sessions);\n    }\n  }\n\n  addMonitor(monitor: Monitor): void {\n    monitor.groups.forEach((group: string) => {\n      if (typeof this.monitors[group] === 'undefined') {\n        this.monitors[group] = {};\n      }\n      if (typeof this.testSessions[group] === 'undefined') {\n        this.testSessions[group] = {};\n      }\n      this.monitors[group][monitor.token] = monitor;\n    });\n  }\n\n  removeMonitor(monitorToken: string): void {\n    this.logger.log(`remove monitor: ${monitorToken}`);\n\n    Object.keys(this.monitors).forEach((group: string) => {\n      if (typeof this.monitors[group][monitorToken] !== 'undefined') {\n        delete this.monitors[group][monitorToken];\n\n        if (Object.keys(this.monitors[group]).length === 0) {\n          delete this.testSessions[group];\n        }\n      }\n    });\n\n    this.websocketGateway.disconnectClient(monitorToken);\n  }\n\n  getMonitors(): Monitor[] {\n    return Object.values(this.monitors)\n      .reduce(\n        (allMonitors: Monitor[], groupMonitors: { [g: string]: Monitor }): Monitor[] => allMonitors\n          .concat(Object.values(groupMonitors)), []\n      )\n      .filter((v: Monitor, i: number, a: Monitor[]) => a.indexOf(v) === i);\n  }\n\n  getTestSessions(): TestSessionChange[] {\n    return Object.values(this.testSessions)\n      .reduce(\n        // eslint-disable-next-line max-len\n        (allTestSessions: TestSessionChange[], groupTestSessions: { [g: string]: TestSessionChange }): TestSessionChange[] => allTestSessions.concat(Object.values(groupTestSessions)), []\n      );\n  }\n\n  getClientTokens(): string[] {\n    return this.websocketGateway.getClientTokens();\n  }\n\n  clean(): void {\n    this.monitors = {};\n    this.testSessions = {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Testee.html":{"url":"interfaces/Testee.html","title":"interface - Testee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Testee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/testee/testee.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            disconnectNotificationUri\n                                        \n                                \n                                \n                                        \n                                            testId\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disconnectNotificationUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disconnectNotificationUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Testee {\n  token: string;\n  testId: number;\n  disconnectNotificationUri: string;\n}\n\nexport function isTestee(arg: any): arg is Testee {\n  return (arg.token !== undefined) && (arg.testId !== undefined);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TesteeController.html":{"url":"controllers/TesteeController.html","title":"controller - TesteeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TesteeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/testee/testee.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                testeeRegister\n                            \n                            \n                                testees\n                            \n                            \n                                testeeUnregister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        testeeRegister\n                        \n                    \n                \n            \n            \n                \ntesteeRegister(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/testee/register')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testees\n                        \n                    \n                \n            \n            \n                \ntestees(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/testees')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Testee[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testeeUnregister\n                        \n                    \n                \n            \n            \n                \ntesteeUnregister(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/testee/unregister')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Get, HttpException, Logger, Post, Req\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { TesteeService } from './testee.service';\nimport { isTestee, Testee } from './testee.interface';\n\n@Controller()\nexport class TesteeController {\n  constructor(\n    private readonly testeeService: TesteeService\n  ) {\n  }\n\n  private readonly logger = new Logger(TesteeController.name);\n\n  @Post('/testee/register')\n  testeeRegister(@Req() request: Request): void {\n    if (!isTestee(request.body)) {\n      throw new HttpException('not testee data', 400);\n    }\n\n    this.logger.log(`testee registered:${JSON.stringify(request.body)}`);\n    this.testeeService.addTestee(request.body);\n  }\n\n  @Post('/testee/unregister')\n  testeeUnregister(@Req() request: Request): void {\n    if (!('token' in request.body)) {\n      throw new HttpException('no token in body', 400);\n    }\n\n    this.logger.log('testee unregistered:', request.body);\n    this.testeeService.removeTestee(request.body.token);\n  }\n\n  @Get('/testees')\n  testees(@Req() request: Request): Testee[] {\n    return this.testeeService.getTestees();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TesteeService.html":{"url":"injectables/TesteeService.html","title":"injectable - TesteeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TesteeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/testee/testee.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                testees\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTestee\n                            \n                            \n                                broadcastCommandToTestees\n                            \n                            \n                                clean\n                            \n                            \n                                getTestees\n                            \n                            \n                                notifyDisconnection\n                            \n                            \n                                removeTestee\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(websocketGateway: WebsocketGateway, http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in broadcasting-service/src/testee/testee.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        websocketGateway\n                                                  \n                                                        \n                                                                        WebsocketGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTestee\n                        \n                    \n                \n            \n            \n                \naddTestee(testee: Testee)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testee\n                                    \n                                                Testee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastCommandToTestees\n                        \n                    \n                \n            \n            \n                \nbroadcastCommandToTestees(command: Command, testIds: number[])\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                Command\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    testIds\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clean\n                        \n                    \n                \n            \n            \n                \nclean()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTestees\n                        \n                    \n                \n            \n            \n                \ngetTestees()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Testee[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifyDisconnection\n                        \n                    \n                \n            \n            \n                \nnotifyDisconnection(testeeToken: string)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testeeToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTestee\n                        \n                    \n                \n            \n            \n                \nremoveTestee(testeeToken: string)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/testee/testee.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testeeToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TesteeService.name)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/testee/testee.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        testees\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/testee/testee.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService, Injectable, Logger } from '@nestjs/common';\nimport { Testee } from './testee.interface';\nimport { WebsocketGateway } from '../common/websocket.gateway';\nimport { Command } from '../command/command.interface';\n\n@Injectable()\nexport class TesteeService {\n  constructor(\n    private readonly websocketGateway: WebsocketGateway,\n    private http: HttpService\n  ) {\n    this.websocketGateway.getDisconnectionObservable().subscribe((disconnected: string) => {\n      this.notifyDisconnection(disconnected);\n      this.removeTestee(disconnected);\n    });\n  }\n\n  private readonly logger = new Logger(TesteeService.name);\n\n  private testees: { [token: string]: Testee } = {};\n\n  addTestee(testee: Testee): void {\n    this.testees[testee.token] = testee;\n  }\n\n  removeTestee(testeeToken: string): void {\n    this.logger.log(`remove testee: ${testeeToken}`);\n\n    if (typeof this.testees[testeeToken] !== 'undefined') {\n      delete this.testees[testeeToken];\n    }\n\n    this.websocketGateway.disconnectClient(testeeToken);\n  }\n\n  getTestees(): Testee[] {\n    return Object.values(this.testees);\n  }\n\n  notifyDisconnection(testeeToken: string): void {\n    if (typeof this.testees[testeeToken] === 'undefined') {\n      return;\n    }\n    if (this.testees[testeeToken].disconnectNotificationUri) {\n      const disconnectNotificationUri = this.testees[testeeToken].disconnectNotificationUri;\n      this.http.post(this.testees[testeeToken].disconnectNotificationUri).subscribe(\n        () => {\n          this.logger.log(`sent connection-lost signal to ${disconnectNotificationUri}`);\n        },\n        error => {\n          this.logger.warn(`could not send connection-lost signal to ${disconnectNotificationUri}: ${error.message}`);\n        }\n      );\n    }\n  }\n\n  broadcastCommandToTestees(command: Command, testIds: number[]) : void {\n    testIds.forEach((testId => {\n      this.websocketGateway.broadcastToRegistered(\n        Object.values(this.testees)\n          .filter(testee => testee.testId === testId)\n          .map(testee => testee.token),\n        'commands',\n        [command]\n      );\n    }));\n  }\n\n  clean(): void {\n    this.testees = {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WebsocketGateway.html":{"url":"classes/WebsocketGateway.html","title":"class - WebsocketGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WebsocketGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            broadcasting-service/src/common/websocket.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayConnection\n                        OnGatewayDisconnect\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clientLost$\n                            \n                            \n                                    Private\n                                clients\n                            \n                            \n                                    Private\n                                clientsCount$\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                broadcastToRegistered\n                            \n                            \n                                disconnectAll\n                            \n                            \n                                disconnectClient\n                            \n                            \n                                getClientTokens\n                            \n                            \n                                getDisconnectionObservable\n                            \n                            \n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                            \n                                subscribeClientCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clientLost$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/websocket.gateway.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clients\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/websocket.gateway.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clientsCount$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(0)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/websocket.gateway.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(WebsocketGateway.name)\n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/websocket.gateway.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in broadcasting-service/src/common/websocket.gateway.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        broadcastToRegistered\n                        \n                    \n                \n            \n            \n                \nbroadcastToRegistered(tokens: string[], event: BroadcastingEvent, message: any)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tokens\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                BroadcastingEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectAll\n                        \n                    \n                \n            \n            \n                \ndisconnectAll()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectClient\n                        \n                    \n                \n            \n            \n                \ndisconnectClient(monitorToken: string)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitorToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getClientTokens\n                        \n                    \n                \n            \n            \n                \ngetClientTokens()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisconnectionObservable\n                        \n                    \n                \n            \n            \n                \ngetDisconnectionObservable()\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleConnection\n                        \n                    \n                \n            \n            \n                \nhandleConnection(client: Client, message: IncomingMessage)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Client\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                            IncomingMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(client: Client)\n                \n            \n\n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Client\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeClientCount\n                        \n                    \n                \n            \n            \n                \nsubscribeClientCount(data: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('subscribe:client.count')\n                \n            \n\n            \n                \n                    Defined in broadcasting-service/src/common/websocket.gateway.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  MessageBody, OnGatewayConnection, OnGatewayDisconnect,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n  WsResponse\n} from '@nestjs/websockets';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Server, Client } from 'ws';\nimport { IncomingMessage } from 'http';\nimport { Logger } from '@nestjs/common';\nimport { BroadcastingEvent } from './interfaces';\n\nfunction getLastUrlPart(url: string) {\n  const arr = url.split('/').filter(e => e);\n  return arr[arr.length - 1];\n}\n\n@WebSocketGateway()\nexport class WebsocketGateway implements OnGatewayConnection, OnGatewayDisconnect {\n  private readonly logger = new Logger(WebsocketGateway.name);\n\n  @WebSocketServer()\n  private server: Server;\n\n  private clients: { [token: string] : Client } = {};\n  private clientsCount$: BehaviorSubject = new BehaviorSubject(0);\n  private clientLost$: BehaviorSubject = new BehaviorSubject(null);\n\n  handleConnection(client: Client, message: IncomingMessage): void {\n    const token = getLastUrlPart(message.url);\n\n    this.clients[token] = client;\n    this.clientsCount$.next(Object.values(this.clients).length);\n    this.logger.log(`client connected: ${token}`);\n  }\n\n  handleDisconnect(client: Client): void {\n    let disconnectedToken = '';\n    Object.keys(this.clients).forEach((token: string) => {\n      if (this.clients[token] === client) {\n        delete this.clients[token];\n        disconnectedToken = token;\n      }\n    });\n\n    if (disconnectedToken !== '') {\n      this.clientLost$.next(disconnectedToken);\n      this.clientsCount$.next(Object.values(this.clients).length);\n      this.logger.log(`client disconnected: ${disconnectedToken}`);\n    }\n  }\n\n  broadcastToRegistered(tokens: string[], event: BroadcastingEvent, message: any): void {\n    const payload = JSON.stringify({ event, data: message });\n\n    tokens.forEach((token: string) => {\n      if (typeof this.clients[token] !== 'undefined') {\n        this.logger.log(`sending to client: ${token}`);\n        this.clients[token].send(payload);\n      }\n    });\n  }\n\n  disconnectClient(monitorToken: string): void {\n    if (typeof this.clients[monitorToken] !== 'undefined') {\n      this.logger.log(`disconnect client: ${monitorToken}`);\n      this.clients[monitorToken].close();\n      delete this.clients[monitorToken];\n    }\n  }\n\n  disconnectAll(): void {\n    Object.keys(this.clients).forEach((token: string) => {\n      this.disconnectClient(token);\n    });\n  }\n\n  getDisconnectionObservable(): Observable {\n    return this.clientLost$.asObservable();\n  }\n\n  getClientTokens(): string[] {\n    return Object.keys(this.clients);\n  }\n\n  @SubscribeMessage('subscribe:client.count')\n  subscribeClientCount(@MessageBody() data: number): Observable> {\n    return this.clientsCount$.pipe(map((count: number) => ({ event: 'client.count', data: count })));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog & Upgrade Information\n13.0.1\ntest\nBackend 12.4.2\n\nradically speed up initialization and tests and fix workspace loading issues\n\nBackend 12.4.1\n\nUpdate PHP from 7.4.22 to 7.4.29 (patch) and Apache to 2.4.53\n\nBackend 12.4.0\nNew Feature: so-called resource-packages.\nUploaded zip files with the extension .itcr.zip - resource-packages - now get a special treatment:\n\nAll files they contain are regarded as resources (Testtakers.xml and such would be handled as resources to).\nThese files do NOT appear in the file list, not do the get validated\nDeleting the package causes all those files to be deleted.\nThis can be used for special resources which shall be loaded by the player via directDowlaodURL. But pay attention:\nThose get neither preloaded like the rest of the booklet nor do they count into the size of the calculation of the test!\nExample applications: GeoeGebra (needs to fetch 70+ files), or large videos which shall be streamed.\n\nYou can declare now dependencies of Units to some resource-files or -packages in the unit.xml to make the validator\naware of it:\n  \n    sample_resource_package.itcr.zip\n  Bugfixes\n\n(#241) Fix a bug which occurred, when a Booklet was assigned to a Login with mode='monitor-group'.\n(#388) Fix various bugs in the context of the Zip-File Upload.\n\n12.3.3\nBugfixes\n\n(#239, #238) Fix file reading issues in initialization\n\n12.3.0\nBugfixes\n\n(#366) Fix: In live-mode the group-monitor didn't update when Testtakers.XMLs get updated or deleted.\n\nResult-Data / Group-Monitor\n\n(#231) Logins of the same name (created with hot-run-restart-mode) get now a number into there display-name to be \n distinguishable. In result/log-data export, this number is stored in the field code.\n\nBackend 12.2.3\nBugfixes\n\nFix critical bug in communication between broadcasting-service and backend\n\nBackend 12.2.1\nSet a maximum for filenames in workspace of 120 characters.\nBackend 12.2.2\n\nmassive performance improvement by caching file information in the DB.\n\nFrontend 12.1.7\n\n(#385) Fix Bug: If testee is on the please-enter-code-screen and group-monitor moves him to the same block,\nit should become unlocked (but didn't).\n\nFrontend 2.1.6\n\n(#382) When \"Finish Test\" gets hit, NavigationRestrictions will be checked.\n\nFrontend 12.1.4\n\nFix Navigation Bug from 12.1.3: When a testlet had a locking code, but was unlocked, the unit didn't get tested\nfor force_presentation_complete/force_response_complete when leaving.\n\nFrontend 12.1.3\n\nVarious Bugfixes:\n(#361) clock and messages in  demo-mode are broken\n(#373, #359, #376, #358, #374) could not leave unit behind codeword when navigationRestrictions\n(#379, #372) testee was required to enter codeword even when forced into block by monitor\n\nFrontend 12.1.2\n\nFix Login on Safari\n\nFrontend 12.1.1\n\nFix critical bug in debouncing responses between frontend and backend which led to dataloss in case of very fast\nnavigation between units\n\nFrontend 12.1.0\n\nThere are different login-button for admin-users and for testees now.\n\nFrontend 12.0.3\nVarious Bugfixes:\n\n(#341) When you visited a test in demo-mode as a monitor, and terminated it, you returned to the starter but didn't see the monitor-monitor button again. That got fixed.\n\nBackend 12.0.2\nFixes data-migration from versions before 12.0.0. With the update to version 12.0.0 the way, response-data is stored\nchanged. Data from existing units should be migrated, but that might fail in some installations. With this patch\n12.0.2 this state will be repaired and the remaining data will get migrated.\nFrontend 12.0.2\nVarious Bugfixes:\n\n(#341) When you visited a test in demo-mode as a monitor, and terminated it, you returned to the starter but didn't see the monitor-monitor button again. That got fixed.\n(#340) After reload you return to the correct unit now\n(#335) Order of checks when leaving a unit is fixed: First check completeness, then ask for leaving the timed block\n(#347) Dont't check navigationLeaveRestrictions if unit is already time-locked.\n\nMinor Changes\n\nIn \"demo\" mode \"showTimeLeft\" is off now\nUse Font Roboto everywhere\n\nBackend 12.0.1\n\nTimeout for admin sessions was extended to 10h (from 30min)\n\nBugfixes:\n\nWrong numbers in Results overview\nHandle bogus Player-Metadata\n\n12.0.0\nThis update makes the Tescenter Verona3- and 4 compatible.\nEndpoints\n\nthe responses-output from /workspace/{ws_id}/responses and /workspace/{ws_id}/report/response \nnow contains the chunk names. eg: {\"all\":\"{\\\"key\\\": \\\"value\\\"}\" instead of {\\\"key\\\": \\\"value\\\"}\nnew Endpoint /{auth_token}/resource/{resource_name} is an alternative way for fetching resources. It can be used as\ndirectDownloadUrl-parameter (see here)\nin Verona4-players. \nThose deprecated endpoints are removed\n[GET] /workspace/{ws_id}/logs\n[GET] /workspace/{ws_id}/reviews\n[GET] /workspace/{ws_id}/responses\n[GET] /workspace/{ws_id}/sys-check/reports\n\n\n\nXSD\n\nin the Booklet.xml-format a new restriction is allowed: . It forbids the leaving ofunits of a testlet under certain circumstances: if the unit was not presented oder responded completely. The attributes \npresentation and response may have the values OFF, ON and ALWAYS. Always tells the testcenter, to check\nthe completeness and response-progress everytime the unit shall be left regardless of teh direction. ON only checks\nif the testee want to proceed forwards.\nThe Booklet.xsd now validates correctly that -id must only be unique if no alias is set and otherwise the\nalias must be unique.\n\nDatabase\n\nThe unit-data now gets stored in an additional table test_data, not in tests anymore to allow chunkwise updates. \nThere will be a data-migration, but depending on the specific format of the player it can be possible, that \npreviously edited units will not be restored correctly. \nSee scripts/sql-schema/patches.mysql.d/12.0.0.\n\n11.6.0\nThis update refactors the CSV-output for various data: logs, reviews, test-results and sys-check-reports. \nThe CSVs can now all be generated in the backend and retrieved via analogous endpoints. The data is also available \nas JSON. All CSVs contain BOMs now. \nEndpoints\n\nThe four new endpoints for retrieving reports: \n[GET] /workspace/{ws_id}/report/log\n[GET] /workspace/{ws_id}/report/review\n[GET] /workspace/{ws_id}/report/response\n[GET] /workspace/{ws_id}/report/sys-check\n\n\nThe old ones are now deprecated and will be removed soon:\n[GET] /workspace/{ws_id}/logs\n[GET] /workspace/{ws_id}/reviews\n[GET] /workspace/{ws_id}/responses\n[GET] /workspace/{ws_id}/sys-check/reports\n\n\n\n11.5.0\nFixes some issues in the file-management.\n11.2.0\nAdds the missing second endpoint for the customization-module.\nEndpoints\n\ncontains the new endpoint [PATCH] /system/config/custom-texts, which updates the key-value-store for the frontend analogous to customTexts.\n\n11.1.0\nThis update provides the API for the customziation-module.   \nEndpoints\n\ncontains the new endpoint [PATCH] /system/config/app, which updates the key-value-store for the frontend analogous to customTexts.\n[GET] /system/config provides the key-value store 'app-config' as well.\n\nDatabase\n\nSee scripts/sql-schema/patches.mysql.d/11.1.0\n\n11.0.0\nThis update contains various changes around the improved Group-Monitor.\nEndpoints\n\nA new endpoint [GET] /system/time was added to retrieve the server's time and time zone.\nA new endpoint where added: /monitor/group/{group_name}/tests/unlock\nA new endpoint was added: [POST] /test/{test_id}/connection-lost. It can be triggered by a closing browser as well\nas from the broadcasting-service to notify a lost connection to the testController. Note: This endpoint does not\nneed any credentials.\n\nDatabase\n\nSee scripts/sql-schema/patches.mysql.d/11.0.0\n\n10.0.0\nThis update does not contain new functionality. It's about the init/install script, which can do database-migration from\nolder to newer versions by itself now. The version 10 indicates the beginning of an era with versioned database-schemas.\nThere is no manual patching necessary anymore after an update. So changes in the DB does not force a new major-version\nanymore.\n9.2.0\nXSD\n\nAdditional elements and attributes needed by teststudio-lite where added. They have no affect for the testcenter at\nthe moment.\n\n9.1.0\nEndpoints\n\nYou can now insert an optional parameter /alias/{alias} in the end to obtain data if unit is defined with\nan alias in the booklet. This is an HotFix for https://github.com/iqb-berlin/testcenter-frontend/issues/261.\n\n9.0.0\nThe main content of this update is a complete refactoring of the (XML-)File-classes,\nWorkspace validation and XML-File-Handling. The main goal was to keep validity and\nconsistency of the workspaces. The refactoring shall also allow more and deeper validation\nchecks, update scripts and more in the future. The whole part of the software is now backed\nwith unit-tests galore.\nRequirements\n\nPHP 7.4 is now required\n\nEndpoints\n\nThe [GET] /workspace/{id}/validation endpoint was removed completely.\nValidation takes now place on file upload and on [GET] /workspace/{id}/files.\nReturn-Values and Status-Codes of [POST] /workspace/{id}/file\nand [GET] /workspace/{id}/files where changed significantly to contain the\nfile's validation information as well as some metadata to display in the frontend.\n\nXML\n\nXML-files without a reference to a XSD-Schema generate a warning now. Currently, \nthe reference can only be done with the noNamespaceSchemaLocation-tag! \nPlayer-Metadata as defined in verona2\nis supported now.\n\nConfig\n\nconfig/system.json contains a new (optional) value: allowExternalXMLSchema \n(boolean, defaults to true) . It defines wether the program is allowed to fetch\nXSD schemas from external URLs.\n\n8.0.0\nThe role monitor-study / workspaceMonitor was removed completely and all functions and endpoints depending on it.\nXML\n\nMode monitor-study was removed from the mode-attribute\n\nEndpoints\n\nThe following endpoints where removed\n[PATCH] /{ws_id}/tests/unlock\n[PATCH] /{ws_id}/tests/lock\n[GET] /{ws_id}/status\n[GET] /{ws_id}/booklets/started\n\n7.4.0\nXML\n\nA new mode for logins is allowed now: run-demo\n\n7.0.0\nEndpoints\n\nLog- and State-Endpoints\n[patch] \\test\\{test_id}\\state\n[put] \\test\\{test_id}\\log\n[patch] \\test\\{test_id}\\unit\\{unit_name}\\state\n[put] \\test\\{test_id}\\unit\\{unit_name}\\logwere changed:\nThey all take items in the form\n\n[\n  {\n     \"key\": __my_key__,\n     \"content\": __my_content__,\n     \"timeStamp\": 1234567891\n  }\n]\nA state change automatically whites a log now.\n\n\nTimestamp parameter in various endpoints is now timeStamp to resemble the Verona 2 Standard\n\n6.1.0\nDatabase\n\nYou have to apply database structure changes,\nsee scripts/sql-schema/patches.mysql.sql\n\n6.0.0\n\nHint: Sample Data/Player is still not supporting Verona 2.0 Interface,\nalthough compatible frontend version expect them!\n\n5.0.3\nConfig\n\nYou have to manipulate the contents of config/system.json: You need now two parameters\nbroadcastServiceUriPush and broadcastServiceUriSubscribe instead of just broadcastServiceUri.\n\n4.0.0\nIntroduced the group-monitor for the frist time.\nXML\nTesttakers\n\nname-attribute of -element is now called \nintroduced optional attribute label for -element\nin -element, only the optional  field remains\n\nBooklet\n\nchanged defintion of -element to get rid of a warning,\nthat  was not allowed in some legal constellations\nid-attribute is now mandatory for testlets\n-element can not contain id or label (since it won't be\nvisible anywhere anyway), and first  can not contain\n, which would not make any sense\nMade  more readable: generic parameter-paremater is\nnow renamed to minutes in context of  and to code for\n-element.\nin -element, the elements  and  are mandatory,\nand  is optional, the rest does not exist anymore.\n\nSysCheck\n\nin -element, the elements  and  are mandatory,\nand  is optional, the rest does not exist anymore.\n\nUnit\n\nin -element, the elements  and  are mandatory,\nand  is optional, the rest does not exist anymore.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                broadcasting-service/src/command/command.controller.ts\n            \n            controller\n            CommandController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                broadcasting-service/src/command/command.interface.ts\n            \n            interface\n            Command\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                broadcasting-service/src/command/command.interface.ts\n            \n            function\n            isCommand\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/command/command.interface.ts\n            \n            variable\n            commandKeywords\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/common/error-handler.ts\n            \n            class\n            ErrorHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                broadcasting-service/src/common/websocket.gateway.ts\n            \n            class\n            WebsocketGateway\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                broadcasting-service/src/common/websocket.gateway.ts\n            \n            function\n            getLastUrlPart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/monitor/monitor.controller.ts\n            \n            controller\n            MonitorController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                broadcasting-service/src/monitor/monitor.interface.ts\n            \n            interface\n            Monitor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                broadcasting-service/src/monitor/monitor.interface.ts\n            \n            function\n            isMonitor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/system/system.controller.ts\n            \n            controller\n            SystemController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                broadcasting-service/src/test-session/test-session.controller.ts\n            \n            controller\n            TestSessionController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                broadcasting-service/src/test-session/test-session.service.ts\n            \n            injectable\n            TestSessionService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                broadcasting-service/src/test-session/test-session.service.ts\n            \n            variable\n            mergeSessionChanges\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/testee/testee.controller.ts\n            \n            controller\n            TesteeController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                broadcasting-service/src/testee/testee.interface.ts\n            \n            interface\n            Testee\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                broadcasting-service/src/testee/testee.interface.ts\n            \n            function\n            isTestee\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                broadcasting-service/src/testee/testee.service.ts\n            \n            injectable\n            TesteeService\n            \n                0 %\n                (0/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (broadcasting-service/.../main.ts)\n                        \n                        \n                            getLastUrlPart   (broadcasting-service/.../websocket.gateway.ts)\n                        \n                        \n                            isCommand   (broadcasting-service/.../command.interface.ts)\n                        \n                        \n                            isMonitor   (broadcasting-service/.../monitor.interface.ts)\n                        \n                        \n                            isTestee   (broadcasting-service/.../testee.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    broadcasting-service/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    broadcasting-service/src/common/websocket.gateway.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLastUrlPart\n                        \n                    \n                \n            \n            \n                \ngetLastUrlPart(url: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    broadcasting-service/src/command/command.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isCommand\n                        \n                    \n                \n            \n            \n                \nisCommand(arg: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Command\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    broadcasting-service/src/monitor/monitor.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isMonitor\n                        \n                    \n                \n            \n            \n                \nisMonitor(arg: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Monitor\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    broadcasting-service/src/testee/testee.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isTestee\n                        \n                    \n                \n            \n            \n                \nisTestee(arg: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arg\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Testee\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nThis is the next-generation repository of Testcenter which is not in charge right now. Until it's ready please \nrefer to https://github.com/iqb-berlin/testcenter-setup.\n\n\n\n\nIQB-Testcenter\nThe IQB-Testcenter is a web application for technology based accessed and surveys. It is developed by \nthe Institute for Educational Quality Improvement (IQB) in Berlin, Germany.\nFor Users\n\nUser's Manual (in german)\nBug Reports\nChangelog\n\nSpecial docs\n\nOverview about super-states of running sessions and their icons\nList of modes of test-execution\nParameters of booklet-configuration\nCustomizable Labels in the UI\n\nFor Hosters\n\nInstallation and Update\nServer Configuration\nTrouble Shooting\n\nFor Developers\n\nInstallation for Development\nDeveloper's Guide\n\nAPI Documentation\n\nHTTP API Backend\nVerona Player API\n\nCompodoc Documentation\n\nFrontend\nBroadcasting-Service\n\nTest Coverage\n\nBackend by Unit-Tests\nFrontend by Unit-Tests\nBroadcasting-Service by Unit-Tets\nFrontend by System-Tests\n\nMisc\n\nInstall and run without docker\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nTestSessionService\n\nTestSessionService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTestSessionService->AppModule\n\n\n\n\n\nTesteeService\n\nTesteeService\n\nAppModule -->\n\nTesteeService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 13.0.0\n        \n            License : MIT\n        \n            Repository : https://github.com/iqb-berlin/testcenter\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BroadcastingEvent   (broadcasting-service/.../interfaces.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    broadcasting-service/src/common/interfaces.ts\n    \n    \n        \n            \n                \n                    \n                    BroadcastingEvent\n                \n            \n            \n                \n                        \"test-sessions\" | \"commands\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            commandKeywords   (broadcasting-service/.../command.interface.ts)\n                        \n                        \n                            mergeSessionChanges   (broadcasting-service/.../test-session.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    broadcasting-service/src/command/command.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        commandKeywords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'pause',\n  'goto',\n  'terminate',\n  'resume',\n  'debug'\n]\n                    \n                \n\n\n        \n    \n\n    broadcasting-service/src/test-session/test-session.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mergeSessionChanges\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (testSession: TestSessionChange, sessionChange: TestSessionChange): TestSessionChange => {\n  if ((sessionChange.unitName) && (sessionChange.unitName !== testSession.unitName)) {\n    testSession.unitState = {};\n  }\n\n  sessionChange.unitState = { ...testSession.unitState, ...sessionChange.unitState };\n  sessionChange.testState = { ...testSession.testState, ...sessionChange.testState };\n\n  return { ...testSession, ...sessionChange };\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
