openapi: 3.0.0

info:
  title: ""
  version: "%%%VERSION%%%"

paths:

  /test/{test_id}:
    get:
      summary: get a test
      description: |-
        Retrieves a certain test: It's contents, state and the mode of current login-session.
        `laststate` is an array of key-value-pairs stored for this test.
        Currently known test-modes are:
          * `run-hot-return` - hot run of testLet, can save answers etc.,
          session gets stored and can be revoked
          * `run-hot-restart` - hot run of testLet, can save answers etc.,
          every session starts all tests again and have unique Tokens
          * `run-review` - run a review round of testLet, reviewes can be saved, but no answers
          At the moment we distinguish between hot, trial and review in the GUI and there are no real
          checks for the mode in this backend, except for the difference between `run-hot-return` and
          `run-hot-restart`.
          * `run-trial` - run a trial round
          * `monitor-study` - TBA
          * `monitor-login` - TBA
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for test-user
          example: "p:0000000000000.00000000000"
        - in: path
          name: test_id
          description: id of a executed test
          example: 1
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Test and it's contents
          content:
            application/json:
              example:
                mode: "run-hot-return"
                laststate: {"LASTUNIT": "1"}
                locked: false
                xml: "(contents of a booklet.xml)"
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "500":
          description: Server Error

  /test/{test_id}/unit/{unit_name}:
    get:
      summary: get a unit of a test
      description: retrieves a certain unit from a certain executed test - the booklet-file XML, last state and lock status
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for test-user
          example: "p:0000000000000.00000000000"
        - in: path
          name: test_id
          description: id of a executed test
          example: 1
          required: true
          schema:
            type: integer
        - in: path
          name: unit_name
          description: unit-name (not alias!) as defined in booklet
          example: 'UNIT.SAMPLE'
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of Workspaces
          content:
            application/json:
              example:
                "laststate": {"PRESENTATIONCOMPLETE": "yes"}
                "restorepoint": "whatever this player needs"
                "xml": "(contents of a unit.xml)"
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "500":
          description: Server Error

  /test/{test_id}/resource/{resource_name}: # gets manipulated in hooks.file, change summary carefully
    get:
      summary: get resource by name
      description: retrieves a resource-file by its name (filename without extension)
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for test-user
          example: "p:0000000000000.00000000000"
        - in: path
          name: test_id
          description: id of a executed test
          example: 1
          required: true
          schema:
            type: integer
        - in: path
          name: resource_name
          description: resource_name (filename without XML-extension)
          example: SAMPLE_PLAYER.HTML
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of Workspaces
          content:
            text/plain:
              example: "(HTML code containing player)"
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "500":
          description: Server Error

  /test/{test_id}/unit/{unit_name}/review:
    put:
      summary: add review to unit
      description: add a review item to unit in a test
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for test-user
          example: "p:0000000000000.00000000000"
        - in: path
          name: test_id
          description: test-id - id of a test execution.
          example: 1
          required: true
          schema:
            type: string
        - in: path
          name: unit_name
          description: unit-name (or alias) as defined in booklet
          example: 1
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                priority:
                  description: priority, 1=critical, 2=medium, 3=optional
                  type: integer
                entry:
                  description: text of the review entry
                  type: string
                categories:
                  description: whitespace separated list of categories
                  type: string
              required:
                - entry
            example:
              entry: I am a critical review item for unit 1
              priority: 1
              categories: content whatever
      responses:
        "201":
          x-dredd-test-order: 1
          description: OK, created
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "500":
          description: Server Error

  /test/{test_id}/review:
    put:
      summary: add review to booklet
      description: add a review item to a certain booklet
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for test-user
          example: "p:0000000000000.00000000000"
        - in: path
          name: test_id
          description: test-id - id of a test execution.
          example: 1
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                priority:
                  description: priority, 1=critical, 2=medium, 3=optional
                  type: integer
                entry:
                  description: text of the review entry
                  type: string
                categories:
                  description: whitespace separated list of categories
                  type: string
              required:
                - entry
            example:
              entry: I am a critical review item for booklet 1
              priority: 1
              categories: content whatever
      responses:
        "201":
          description: OK, created
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "500":
          description: Server Error

  /test/{test_id}/unit/{unit_name}/response:
    put:
      summary: add response to a unit
      description: when running a test this endpoint is used to store given responses. format and content of responses
        are business of the corresponding player, the endpoints takes everything as raw, may it be JSON or XML or
        whatever.
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for test-user
          example: "p:0000000000000.00000000000"
        - in: path
          name: test_id
          description: test-id - id of a test execution.
          example: 1
          required: true
          schema:
            type: string
        - in: path
          name: unit_name
          description: unit-name (or alias) as defined in booklet
          example: 1
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                response:
                  description: response data
                  type: string
                timestamp:
                  description: timestamp of the response
                  type: integer
                responseType:
                  description: TODO what is this?
                  type: string
              required:
                - response
                - timestamp
            example:
              response: I am the answers to your questions.
              timestamp: 1582550888563
      responses:
        "201":
          description: OK, created
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "500":
          description: Server Error

  /test/{test_id}/unit/{unit_name}/restorepoint:
    patch:
      summary: save a restorepoint
      description: saves a restorepoint - a data blob indicating the sate of unit player.
        what is in this blob is business of the player.
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for test-user
          example: "p:0000000000000.00000000000"
        - in: path
          name: test_id
          description: test-id - id of a test execution.
          example: 1
          required: true
          schema:
            type: string
        - in: path
          name: unit_name
          description: unit-name (or alias) as defined in booklet
          example: 1
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                restorePoint:
                  description: restore point data
                  type: string
                timestamp:
                  description: timestamp of the snapshot
                  type: integer
              required:
                - response
                - timestamp
            example:
              restorePoint: "{\"string_example\":\"something\",\"color_example\":\"#ffa200\",\"number_example\":\"36\"}"
              timestamp: 1582550888563
      responses:
        "200":
          description: OK, updated
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "500":
          description: Server Error

  /test/{test_id}/unit/{unit_name}/state:
    patch:
      summary: save a state for a unit
      description: saved a state (a key-value pair) for a unit in a running test -
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for test-user
          example: "p:0000000000000.00000000000"
        - in: path
          name: test_id
          description: test-id - id of a test execution.
          example: 1
          required: true
          schema:
            type: string
        - in: path
          name: unit_name
          description: unit-name (or alias) as defined in booklet
          example: 1
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                key:
                  description: key of the state information
                  type: string
                value:
                  description: value of the state
                  type: string
              required:
                - key
                - value
            example:
              key: "PRESENTATIONCOMPLETE"
              value: "1"
      responses:
        "200":
          description: OK, updated
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "500":
          description: Server Error

  /test/{test_id}/state:
    patch:
      summary: save a state for a runnign test
      description: saved a state (a key-value pair) for a running test
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for test-user
          example: "p:0000000000000.00000000000"
        - in: path
          name: test_id
          description: test-id - id of a test execution.
          example: 1
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                key:
                  description: key of the state information
                  type: string
                value:
                  description: value of the state
                  type: string
              required:
                - key
                - value
            example:
              key: "LASTUNIT"
              value: "1"
      responses:
        "200":
          description: OK, updated
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "500":
          description: Server Error

  /test/{test_id}/unit/{unit_name}/log:
    put:
      summary: save a log-entry for a unit
      description: saves a log-entry for a unit in a running test -
        a log entry consists of a keyword and optionally, separated by a colon, a JSON-encoded value
        currently used lognetry key words for units are- UNITENTER, UNITTRYLEAVE, PRESENTATIONCOMPLETE,
        RESPONSESCOMPLETE, PAGENAVIGATIONSTART, PAGENAVIGATIONCOMPLETE
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for test-user
          example: "p:0000000000000.00000000000"
        - in: path
          name: test_id
          description: test-id - id of a test execution.
          example: 1
          required: true
          schema:
            type: string
        - in: path
          name: unit_name
          description: unit-name (or alias) as defined in booklet
          example: 1
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                entry:
                  description: log-entry
                  type: string
                timestamp:
                  description: unix timestamp
                  type: number
              required:
                - entry
                - timestamp
            example:
              entry: 'PAGENAVIGATIONSTART: "#first"'
              timestamp: 1582230020
      responses:
        "201":
          description: OK, log saved
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "500":
          description: Server Error

  /test/{test_id}/log:
    put:
      summary: save a log-entry  for a runnign test
      description: saves a log-entry for a running test
        a log entry consists of a keyword and optionally, separated by a colon, a JSON-encoded value
        currently used lognetry key words for booklets are- BOOKLETLOADSTART, BOOKLETLOADCOMPLETE, BOOKLETLOCKEDbyTESTEE
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for test-user
          example: "p:0000000000000.00000000000"
        - in: path
          name: test_id
          description: test-id - id of a test execution.
          example: 1
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                entry:
                  description: log-entry
                  type: string
                timestamp:
                  description: unix timestamp
                  type: number
              required:
                - entry
                - timestamp
            example:
              entry: 'BOOKLETLOADSTART: {Browser:"Dredd"}'
              timestamp: 1582230020
      responses:
        "201":
          description:  OK, log saved
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "500":
          description: Server Error


  /test/{test_id}/lock:
    patch:
      summary: finish a test
      description: locks (finishes) a runnin test
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for test-user
          example: "p:0000000000000.00000000000"
        - in: path
          name: test_id
          description: test-id - id of a test execution.
          example: 1
          required: true
          schema:
            type: string
      responses:
        "200":
          description:  OK, locked
        "401":
          description: Not authenticated
        "403":
          description: Forbidden
        "500":
          description: Server Error

  /test:
    put:
      summary: start a test
      description: |-
        Creates a new test for a given person and booklet-name
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for test-user
          example: "p:0000000000000.00000000000"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bookletName:
                  description: name of the booklet to start
                  type: string
              required:
                - bookletName
            example:
              bookletName: 'BOOKLET.SAMPLE'
      responses:
        "201":
          description:  OK, started
          content:
            text/plain:
              example: "1"
        "401":
          description: Not authenticated - auth token header is missing or not containing a login token
        "403":
          description: Forbidden
        "423":
          description: Test is locked!
        "500":
          description: Server Error

  /test/{test_id}/commands:
    put:
      summary: get commands
      description: |-
        Returns commands from the group-monitor (test-proctor) if given. They can be polled or subscribed via websocket
        if available. The websocket adress is stored in header "SubscribeURI".
      parameters:
        - in: header
          name: AuthToken
          description: auth-token for test-user
          example: "p:0000000000000.00000000000"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                lastCommandId:
                  description: Optional. The UUID of a command. If given, only subsequent commands will be retrieved.
                  type: string
              required:
                - bookletName
            example:
              bookletName: 'BOOKLET.SAMPLE'
      responses:
        "201":
          description:  OK, started
          content:
            text/plain:
              example: "1"
        "401":
          description: Not authenticated - auth token header is missing or not containing a login token
        "403":
          description: Forbidden
        "423":
          description: Test is locked!
        "500":
          description: Server Error
