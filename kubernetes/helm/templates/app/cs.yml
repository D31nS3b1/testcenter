apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-cs-deployment
  namespace: {{ .Values.namespace}}
spec:
  replicas: {{ .Values.cacheService.replicas }}
  {{- if .Values.cacheService.strategy }}
  strategy:
    {{- .Values.cacheService.strategy | toYaml | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-cs-pod
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-cs-pod
    spec:
      containers:
        - name: {{ .Chart.Name }}-cs-container
          image: redis:7.0-bullseye
          command:
            - bash
          args:
            - "-c"
            - "redis-server"
            - "--maxmemory"
            - "111Mi"
            - "--maxmemory-policy"
            - "volatile-lru"
          ports:
            - name: http-container
              containerPort: 6379
          # vielleicht nur der Volume mount ben√∂tigt
          volumeMounts:
            - name: lv-storage
              mountPath: /data
      volumes:
        - name: lv-storage
          persistentVolumeClaim:
            claimName: redis-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: testcenter-cache-service #hard coded in application as internal address
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Chart.Name }}-cs-pod
  ports:
    - name: http-service
      port: 6379
      targetPort: http-container

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - {{ .Values.volume.cache.accessMode }}
  storageClassName: {{ .Values.volume.cache.storageClassName }}
  resources:
    requests:
      storage: {{ .Values.volume.cache.size }}