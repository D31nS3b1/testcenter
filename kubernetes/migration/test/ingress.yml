apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: stripregexbe
  namespace: tc
spec:
  stripPrefix:
    prefixes:
      - "/api"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: stripregexfs
  namespace: tc
spec:
  stripPrefix:
      prefixes:
      - "/fs"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: stripregexbs
  namespace: tc
spec:
  stripPrefix:
      prefixes:
      - "/bs/public"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: securityheaders
  namespace: tc
spec:
  headers:
    contentTypeNosniff: true
    customFrameOptionsValue: "SAMEORIGIN"
    referrerPolicy: "no-referrer"
    stsIncludeSubdomains: true
    stsSeconds: 31536000
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: testcenter-path-ingress
  namespace: tc
spec:
  entryPoints:
      - web
      - websecure
  routes:
    - kind: Rule
      match: (Host(`www.minikube-ip-defined-in-hosts.example`) || Host(`minikube-ip-defined-in-hosts.example`)) && PathPrefix(`/api`)
      middlewares:
        - name: stripregexbe
          namespace: tc
        - name: securityheaders
          namespace: tc
      services:
        - name: testcenter-backend-service
          port: 80
    - kind: Rule
      match: (Host(`www.minikube-ip-defined-in-hosts.example`) || Host(`minikube-ip-defined-in-hosts.example`)) && PathPrefix(`/fs`)
      middlewares:
        - name: stripregexfs
          namespace: tc
        - name: securityheaders
          namespace: tc
      services:
        - name: testcenter-file-service
          port: 80
    - kind: Rule
      match: (Host(`www.minikube-ip-defined-in-hosts.example`) || Host(`minikube-ip-defined-in-hosts.example`)) && PathPrefix(`/bs/public`)
      middlewares:
        - name: stripregexbs
          namespace: tc
        - name: securityheaders
          namespace: tc
      services:
        - name: testcenter-broadcasting-service
          port: 3000
#  tls:
#    certResolver: acme
#    options:
#      name: default
#      namespace: default
