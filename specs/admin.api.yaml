openapi: 3.0.0
info:
  title: IQB Testcenter API - Backend
  description: This a spec for the (REST-) API of the IQB-Tetscenter APP. It will be used to make backend's e2e-test and a mock-server for frontend's e2e-tests. It's the basis for out vision of continuous integration.
  version: "2.0.0-start"
paths:
  /login.php/login:
    post:
      summary: Login

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_request'

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login_response'
        "401":
          description: Not authenticated
        "404":
          description: Other Error
        "406":
          description: Other Error
        "500":
          description: Server Error

  /sys.php/users:
    get:
      summary: get list of users
      description: get info about all registered users - in whole application or in a workspace.

      parameters:
        - in: query
          name: ws
          schema:
            type: integer
          description: id of a workspace to get users from. can be omitted for all users in system
          required: false

      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_list'
        "401":
          description: Not authenticated
        "500":
          description: Server Error



components:
  schemas:
    login_request:
      type: object
      properties:
        n:
          type: string
          description: Username
          example: super
        p:
          type: string
          description: Password
          example: user123

    login_response:
      type: object
      properties:
        admintoken:
          type: string
          description: "Token for session authentication"
        name:
          type: string
          description: Username repetition
          example: super
        workspaces:
          type: array
          description: "List of workspaces wich are open to this user"
          items:
            $ref: '#/components/schemas/workspace'
        is_superadmin:
          type: boolean
          description: "Flag that tells, if this user is a superadmin"
          example: true

    workspace:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: "example_workspace"
        "role":
          type: string
          example: "RW"

    user_list:
      type: array
      description: List of Users
      items:
        $ref: '#/components/schemas/user'

    user:
      type: object
      description: a user
      properties:
        name:
          type: string
          example: super
        id:
          type: string
          example: "1"
        email:
          type: string
          nullable: true
          example: null
        is_superadmin:
          type: string # dredd does not know enum, otherwise ot would be enum["1", "2"]
          example: "1"


