openapi: 3.0.0

info:
  title: IQB Testcenter API - Backend
  description: This a spec for the (REST-) API of the IQB-Tetscenter APP. It will be used to make backend's e2e-test and a mock-server for frontend's e2e-tests. It's the basis for out vision of continuous integration.
  version: "2.0.0-start"

paths:
  /login.php/login:
    post:
      summary: Login

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_request'

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login_response'
              example:
                admintoken: a5d6e6c6ef132f2.36500408
                name: super
                workspaces:
                  - id: '1'
                    name: example_workspace
                    role: RW
                is_superadmin: true

        "401":
          description: Not authenticated
        "404":
          description: Other Error
        "406":
          description: Other Error
        "500":
          description: Server Error

  /sys.php/users:
    get:
      summary: get a list of users
      description: get info about all registered users - in whole application or in a workspace.

      parameters:
        - in: query
          name: ws
          description: id of a workspace to get users from. can be omitted for all users in system
          required: false
          examples:
            a:
              value: 0
            b:
              value: 1

      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_list'
              examples:
                a:
                  value:
                    - name: super
                      id: '1'
                      email: null
                      is_superadmin: '1'
                b:
                  value:
                    - name: super
                      id: '1'
                      selected: true
                      role: 'RW'
        "401":
          description: Not authenticated
        "500":
          description: Server Error

  /sys.php/user/add:
    post:
      summary: add a user
      description: add a user

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
            example:
              n: secondUser
              p: secondUser'sPassword

      responses:
        "200":
          description: OK, user has been added
          content:
            text/plain:
              example:
                "true"
        "401":
          description: Not authenticated
        "500":
          description: Server Error

  /sys.php/user/pw:
    post:
      summary: change user-password
      description: changes the password of a given user. returns true if user does not exist.

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
            example:
              n: seconUser
              p: secondUser'sNewPassword

      responses:
        "200":
          description: password has changed / user did not exist
          content:
            text/plain:
              example:
                "true"
        "401":
          description: Not authenticated
        "500":
          description: Server Error

  /sys.php/users/delete:
    post:
      summary: deletes some users
      description: deletes a list of given users. if the list containes unexistant users, nothing happens.

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_name_list'

      responses:
        "200":
          description: OK, users has been deleted
          content:
            text/plain:
              example:
                "true"
        "401":
          description: Not authenticated
        "500":
          description: Server Error



  /sys.php/workspaces:
    get:
      summary: get a list of workspaces
      description: get a list of all workspaces or all workspaces belonging to a given user

      parameters:
        - in: query
          name: u
          description: user-id or ""
          required: false
          examples:
            a:
              value: 0
            b:
              value: 1

      responses:
        "200":
          description: List of Workspaces
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workspace_list'
              examples:
                a:
                  value:
                  - id: '1'
                    name: "example_workspace"
                b:
                  value:
                  - id: '1'
                    name: "example_workspace"
                    selected: false
                    role: ''
        "401":
          description: Not authenticated
        "500":
          description: Server Error

  /sys.php/workspace/add:
    post:
      summary: add a worksapce
      description: adds a workspace with given name

      requestBody:
        content:
          application/json:
            schema:
              properties:
                n:
                  type: string
                  description: Password
              required:
                - n
            example:
              n: "new work space"

      responses:
        "200":
          description: OK, workspace has been added
          content:
            text/plain:
              example:
                "true"
        "401":
          description: Not authenticated
        "500":
          description: Server Error

  /sys.php/workspace/rename:
    post:
      summary: rename a worksapces
      description: renames a workspace with given id

      requestBody:
        content:
          application/json:
            schema:
              properties:
                ws:
                  type: integer
                  description: Workspace-Id
                  example: 2
                n:
                  type: string
                  description: Password
                  example:
              required:
                - ws
                - n
            example:
              ws: 2
              n: "new york space"

      responses:
        "200":
          description: OK, workspace has been renamed
          content:
            text/plain:
              example:
                "true"
        "401":
          description: Not authenticated
        "500":
          description: Server Error

  /sys.php/workspaces/delete:
    post:
      summary: delete a list of worksapces
      description: deletes a list of workspaces given by their ids

      requestBody:
        content:
          application/json:
            schema:
              properties:
                ws:
                  type: array
                  description: list of Workspace-Id
                  items:
                    type: integer
              required:
                - ws
            example:
              ws: [2]

      responses:
        "200":
          description: OK, workspace has been renamed
          content:
            text/plain:
              example:
                "true"
        "401":
          description: Not authenticated
        "500":
          description: Server Error

  /sys.php/workspace/users:
    post:
      summary: change user roles
      description: change user roles in a given workspaces

      requestBody:
        content:
          application/json:
            schema:
              properties:
                ws:
                  type: integer
                  description: Workspace-Id
                u:
                  type: array
                  description: array of pairs role-id
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: user-id
                      role:
                        type: string # because dredd does not support enum
                        description: "role: 'RW', 'MO' or 'RO'"
              required:
                - ws
                - u
            example:
              ws: 1
              u:
                - role: RO
                  id: 1


      responses:
        "200":
          description: OK, roles has been updated
          content:
            text/plain:
              example:
                "true"
        "401":
          description: Not authenticated
        "500":
          description: Server Error

components:
  schemas:
    login_request:
      type: object
      properties:
        n:
          type: string
          description: Username
          example: super
        p:
          type: string
          description: Password
          example: user123

    login_response:
      type: object
      properties:
        admintoken:
          type: string
          description: "Token for session authentication"
        name:
          type: string
          description: Username repetition
          example: super
        workspaces:
          type: array
          description: "List of workspaces wich are open to this user"
          items:
            $ref: '#/components/schemas/workspace'
        is_superadmin:
          type: boolean
          description: "Flag that tells, if this user is a superadmin"
          example: true

    workspace:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: "example_workspace"
        role:
          type: string
          example: "RW"
        selected:
          type: boolean
          example: false
          description: TODO what does this do?
      required:
        - id

    workspace_list:
      type: array
      description: LIst of Workspaces
      items:
        $ref: '#/components/schemas/workspace'

    user_list:
      type: array
      description: List of Users
      items:
        $ref: '#/components/schemas/user'

    user_name_list:
      type: array
      description: List of User-Names
      items:
        $ref: '#/components/schemas/user'

    user:
      type: object
      description: a user
      properties:
        name:
          type: string
          example: super
        id:
          type: string
          example: "1"
        email:
          type: string
          nullable: true
          example: null
        is_superadmin:
          type: string # dredd does not know enum, otherwise ot would be enum["1", "2"]
          example: "1"
        selected:
          type: boolean
          example: true
          description: TODO what does this do?
        role:
          type: string #dredd does not support enum
          example: "RW"
      required:
        - id
        - name





