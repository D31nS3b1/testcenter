# Base compose file defining services and their settings
# For concrete images check the environment specific override files.
version: '3.9'

x-env-mysql: &env-mysql
  MYSQL_DATABASE: ${MYSQL_DATABASE}
  MYSQL_USER: ${MYSQL_USER}
  MYSQL_PASSWORD: ${MYSQL_PASSWORD}

x-env-initdata: &env-initdata
  SUPERUSER_NAME: ${SUPERUSER_NAME}
  SUPERUSER_PASSWORD: ${SUPERUSER_PASSWORD}

x-env-logging-conf: &env-logging-conf
  max-size: "200m"
  max-file: "10"

services:
  traefik:
    container_name: testcenter-traefik
    image: traefik:v2.9
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - "${PORT}:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      testcenter:

  testcenter-db:
    container_name: testcenter-db
    image: mysql:8.0
    environment:
      <<: *env-mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_INITDB_SKIP_TZINFO: 'true'
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      testcenter:

  testcenter-backend:
    container_name: testcenter-backend
    image: iqbberlin/testcenter-backend:current
    environment:
      <<: [ *env-mysql, *env-initdata ]
      MYSQL_HOST: testcenter-db
      MYSQL_PORT: 3306
      BROADCAST_SERVICE_ENABLED: ${BROADCAST_SERVICE_ENABLED}
      FILE_SERVICE_ENABLED: ${FILE_SERVICE_ENABLED}
      HOSTNAME: ${HOSTNAME}
      TLS_ENABLED: ${TLS_ENABLED}
    depends_on:
      - testcenter-db
    logging:
      options:
        <<: *env-logging-conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.testcenter-backend.rule=(HostRegexp(`{[a-z]*}.${HOSTNAME}`) || Host(`${HOSTNAME}`)) && PathPrefix(`/api`)"
      - "traefik.http.middlewares.testcenter-backend-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.security-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.security-headers.headers.customFrameOptionsValue=SAMEORIGIN"
      - "traefik.http.routers.testcenter-backend.middlewares=testcenter-backend-stripprefix, security-headers"
    volumes:
      - testcenter_backend_vo_data:/var/www/data
    networks:
      testcenter:

  testcenter-files-service:
    build:
      context: ..
      dockerfile: docker/files-service.Dockerfile
      args:
        ENABLED_MODULES: lua
    container_name: testcenter-files-service
    volumes:
      - testcenter_backend_vo_data:/var/www/html/
      - ../scripts/files-service/nginx.conf:/etc/nginx/nginx.conf # customized conf mainly because of logging
      - ../scripts/files-service/site.conf:/etc/nginx/sites-enabled/default # overwrite default!
      - ../scripts/files-service/auth.lua:/auth.lua
    depends_on:
      - traefik
      - testcenter-backend
      - testcenter-cache-service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.testcenter-files-service.rule=(HostRegexp(`{[a-z]*}.${HOSTNAME}`) || Host(`${HOSTNAME}`)) && PathPrefix(`/fs`)"
      - "traefik.http.middlewares.testcenter-files-service-stripprefix.stripprefix.prefixes=/fs"
      - "traefik.http.routers.testcenter-files-service.middlewares=testcenter-files-service-stripprefix, security-headers"
    networks:
      testcenter:

  testcenter-cache-service:
    container_name: testcenter-cache-service
    image: redis:7.0-bullseye
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.testcenter-cache-service.rule=(HostRegexp(`{[a-z]*}.${HOSTNAME}`) || Host(`${HOSTNAME}`)) && PathPrefix(`/cs`)"
      - "traefik.http.middlewares.testcenter-cache-service-stripprefix.stripprefix.prefixes=/cs"
      - "traefik.http.routers.testcenter-cache-service.middlewares=testcenter-files-service-stripprefix, security-headers"
    networks:
      testcenter:

  testcenter-frontend:
    container_name: testcenter-frontend
    image: iqbberlin/testcenter-frontend:current
    logging:
      options:
        <<: *env-logging-conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.testcenter-frontend.rule=HostRegexp(`{[a-z]*}.${HOSTNAME}`) || Host(`${HOSTNAME}`)"
    networks:
      testcenter:

  testcenter-broadcasting-service:
    container_name: testcenter-broadcasting-service
    image: iqbberlin/testcenter-broadcasting-service:current
    logging:
      options:
        <<: *env-logging-conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.testcenter-broadcasting-service.rule=(HostRegexp(`{[a-z]*}.${HOSTNAME}`) || Host(`${HOSTNAME}`)) && PathPrefix(`/bs/public`)"
      - "traefik.http.middlewares.testcenter-broadcasting-service-stripprefix.stripprefix.prefixes=/bs/public"
      - "traefik.http.routers.testcenter-broadcasting-service.middlewares=testcenter-broadcasting-service-stripprefix, security-headers"
    networks:
      testcenter:

volumes:
  dbdata:
  testcenter_backend_vo_data:

networks:
  testcenter:
    name: testcenter
