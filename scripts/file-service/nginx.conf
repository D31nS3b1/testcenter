include /etc/nginx/modules-enabled/*;

worker_processes auto; # The special value auto allows binding worker processes automatically to available CPUs
worker_cpu_affinity auto; # The optional mask parameter can be used to limit the CPUs available for automatic binding

env CACHE_SERVICE_INCLUDE_FILES;

events {
  # assuming 1 core for each worker process, setting worker_connections to 1024 implies that Nginx can serve 1024 clients/second.
  worker_connections 768;
}

http {

  access_log /dev/null;
  error_log /dev/stdout;

  tcp_nodelay on; # default = on. off can: help improve network efficiency and reduce congestion, but can introduce some latency
  keepalive_timeout 65;

  server_name_in_redirect off;

  default_type application/octet-stream;
  gzip on;

  lua_shared_dict dns_cache 12k;
  lua_package_path "/usr/share/nginx/auth/?.lua;;";

  server {
    server_tokens off; # removes the nginx version at least (removing the server-header at all is very difficult)
    listen 80;
    root /var/www/html;

    location /resource {
      set $file_path '';
      access_by_lua_file auth/auth.lua;
      content_by_lua_file auth/content.lua;
    }

    location /health {
      access_log off;
      add_header 'Content-Type' 'text/plain';
      return 200 "healthy\n";
    }
  }
}
